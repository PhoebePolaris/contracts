Processing contract: AstraBasicMultiTokenDeployer.sol:AbstractDeployer
Processing contract: AstraBasicMultiTokenDeployer.sol:AstraBasicMultiToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
java.io.IOException: Timeout for /tmp/binaries_souffle9874793635504572248/mustExplicit -j 8 -F /tmp/souffle-896d2900-fcb2-4188-a082-9229f56fe273 -D /tmp/souffle-896d2900-fcb2-4188-a082-9229f56fe273_OUT
	at ch.securify.analysis.AbstractDataflow.runCommand(AbstractDataflow.java:277)
	at ch.securify.analysis.AbstractDataflow.initDataflow(AbstractDataflow.java:169)
	at ch.securify.analysis.MustExplicitDataflow.<init>(MustExplicitDataflow.java:33)
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:33)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error in Securify
java.lang.RuntimeException
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:37)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error, skipping: AstraBasicMultiTokenDeployer.sol:AstraBasicMultiToken
Processing contract: AstraBasicMultiTokenDeployer.sol:AstraBasicMultiTokenDeployer
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: AstraBasicMultiTokenDeployer.sol:BasicMultiToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: AstraBasicMultiTokenDeployer.sol:BasicToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: AstraBasicMultiTokenDeployer.sol:CheckedERC20
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: AstraBasicMultiTokenDeployer.sol:DetailedERC20
Processing contract: AstraBasicMultiTokenDeployer.sol:ERC1003Caller
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: AstraBasicMultiTokenDeployer.sol:ERC1003Token
Processing contract: AstraBasicMultiTokenDeployer.sol:ERC165
Processing contract: AstraBasicMultiTokenDeployer.sol:ERC20
Processing contract: AstraBasicMultiTokenDeployer.sol:ERC20Basic
Processing contract: AstraBasicMultiTokenDeployer.sol:FeeBasicMultiToken
Processing contract: AstraBasicMultiTokenDeployer.sol:IBasicMultiToken
Processing contract: AstraBasicMultiTokenDeployer.sol:Ownable
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: AstraBasicMultiTokenDeployer.sol:SafeMath
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: AstraBasicMultiTokenDeployer.sol:StandardToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: AstraBasicMultiTokenDeployer.sol:SupportsInterfaceWithLookup
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for LockedEther in contract 'AstraBasicMultiTokenDeployer':
    |// File: contracts/implementation/deployers/AstraBasicMultiTokenDeployer.sol
    |
  > |contract AstraBasicMultiTokenDeployer is AbstractDeployer {
    |    function title() public view returns(string) {
    |        return "AstraBasicMultiTokenDeployer";
  at AstraBasicMultiTokenDeployer.sol(782)

[31mViolation[0m for MissingInputValidation in contract 'AstraBasicMultiTokenDeployer':
    |    function title() public view returns(string);
    |
  > |    function deploy(bytes data)
    |        external onlyOwner returns(address result)
    |    {
  at AstraBasicMultiTokenDeployer.sol(72)

[31mViolation[0m for MissingInputValidation in contract 'AstraBasicMultiTokenDeployer':
    |    }
    |
  > |    function create(ERC20[] tokens, string name, string symbol)
    |        external returns(address)
    |    {
  at AstraBasicMultiTokenDeployer.sol(787)

[31mViolation[0m for UnrestrictedWrite in contract 'AstraBasicMultiTokenDeployer':
    |    require(_newOwner != address(0));
    |    emit OwnershipTransferred(owner, _newOwner);
  > |    owner = _newOwner;
    |  }
    |}
  at AstraBasicMultiTokenDeployer.sol(63)

[33mWarning[0m for UnrestrictedWrite in contract 'AstraBasicMultiTokenDeployer':
    |  function renounceOwnership() public onlyOwner {
    |    emit OwnershipRenounced(owner);
  > |    owner = address(0);
    |  }
    |
  at AstraBasicMultiTokenDeployer.sol(45)

[33mWarning[0m for UnrestrictedWrite in contract 'AstraBasicMultiTokenDeployer':
    |    require(_newOwner != address(0));
    |    emit OwnershipTransferred(owner, _newOwner);
  > |    owner = _newOwner;
    |  }
    |}
  at AstraBasicMultiTokenDeployer.sol(63)

[31mViolation[0m for DAO in contract 'BasicMultiToken':
    |        _sendersStack.push(msg.sender);
    |        approve(to, value);
  > |        require(_caller.makeCall.value(msg.value)(to, data));
    |        _sendersStack.length -= 1;
    |        return true;
  at AstraBasicMultiTokenDeployer.sol(559)

[31mViolation[0m for DAO in contract 'BasicMultiToken':
    |        token.asmTransfer(to, amount);
    |        _inLendingMode += 1;
  > |        require(caller().makeCall.value(msg.value)(target, data), "lend: arbitrary call failed");
    |        _inLendingMode -= 1;
    |        require(token.balanceOf(this) >= prevBalance, "lend: lended token must be refilled");
  at AstraBasicMultiTokenDeployer.sol(741)

[33mWarning[0m for LockedEther in contract 'BasicMultiToken':
    |// File: contracts/BasicMultiToken.sol
    |
  > |contract BasicMultiToken is Ownable, StandardToken, DetailedERC20, ERC1003Token, IBasicMultiToken, SupportsInterfaceWithLookup {
    |    using CheckedERC20 for ERC20;
    |    using CheckedERC20 for DetailedERC20;
  at AstraBasicMultiTokenDeployer.sol(613)

[31mViolation[0m for RepeatedCall in contract 'BasicMultiToken':
    |        require(isContract(token));
    |        // solium-disable-next-line security/no-low-level-calls
  > |        require(token.call(bytes4(keccak256("transfer(address,uint256)")), to, value));
    |        return handleReturnBool();
    |    }
  at AstraBasicMultiTokenDeployer.sol(226)

[31mViolation[0m for RepeatedCall in contract 'BasicMultiToken':
    |        require(isContract(token));
    |        // solium-disable-next-line security/no-low-level-calls
  > |        require(token.call(bytes4(keccak256("transferFrom(address,address,uint256)")), from, to, value));
    |        return handleReturnBool();
    |    }
  at AstraBasicMultiTokenDeployer.sol(233)

[31mViolation[0m for RepeatedCall in contract 'BasicMultiToken':
    |    function checkedTransfer(ERC20 token, address to, uint256 value) internal {
    |        if (value > 0) {
  > |            uint256 balance = token.balanceOf(this);
    |            asmTransfer(token, to, value);
    |            require(token.balanceOf(this) == balance.sub(value), "checkedTransfer: Final balance didn't match");
  at AstraBasicMultiTokenDeployer.sol(248)

[31mViolation[0m for RepeatedCall in contract 'BasicMultiToken':
    |            uint256 balance = token.balanceOf(this);
    |            asmTransfer(token, to, value);
  > |            require(token.balanceOf(this) == balance.sub(value), "checkedTransfer: Final balance didn't match");
    |        }
    |    }
  at AstraBasicMultiTokenDeployer.sol(250)

[31mViolation[0m for RepeatedCall in contract 'BasicMultiToken':
    |    function checkedTransferFrom(ERC20 token, address from, address to, uint256 value) internal {
    |        if (value > 0) {
  > |            uint256 toBalance = token.balanceOf(to);
    |            asmTransferFrom(token, from, to, value);
    |            require(token.balanceOf(to) == toBalance.add(value), "checkedTransfer: Final balance didn't match");
  at AstraBasicMultiTokenDeployer.sol(256)

[31mViolation[0m for RepeatedCall in contract 'BasicMultiToken':
    |            uint256 toBalance = token.balanceOf(to);
    |            asmTransferFrom(token, from, to, value);
  > |            require(token.balanceOf(to) == toBalance.add(value), "checkedTransfer: Final balance didn't match");
    |        }
    |    }
  at AstraBasicMultiTokenDeployer.sol(258)

[31mViolation[0m for RepeatedCall in contract 'BasicMultiToken':
    |        uint256[] memory tokenAmounts = new uint256[](_tokens.length);
    |        for (uint i = 0; i < _tokens.length; i++) {
  > |            tokenAmounts[i] = _tokens[i].balanceOf(this).mul(amount).div(totalSupply_);
    |        }
    |        _bundle(beneficiary, amount, tokenAmounts);
  at AstraBasicMultiTokenDeployer.sol(673)

[31mViolation[0m for RepeatedCall in contract 'BasicMultiToken':
    |                require(someTokens[i] != someTokens[j], "unbundleSome: should not unbundle same token multiple times");
    |            }
  > |            uint256 tokenAmount = someTokens[i].balanceOf(this).mul(value).div(totalSupply);
    |            someTokens[i].checkedTransfer(beneficiary, tokenAmount);
    |        }
  at AstraBasicMultiTokenDeployer.sol(730)

[31mViolation[0m for RepeatedCall in contract 'BasicMultiToken':
    |        require(caller().makeCall.value(msg.value)(target, data), "lend: arbitrary call failed");
    |        _inLendingMode -= 1;
  > |        require(token.balanceOf(this) >= prevBalance, "lend: lended token must be refilled");
    |    }
    |}
  at AstraBasicMultiTokenDeployer.sol(743)

[33mWarning[0m for RepeatedCall in contract 'BasicMultiToken':
    |    function transferAndCall(address to, uint256 value, bytes data) public payable returns (bool) {
    |        transfer(to, value);
  > |        require(_caller.makeCall.value(msg.value)(to, data));
    |        return true;
    |    }
  at AstraBasicMultiTokenDeployer.sol(566)

[33mWarning[0m for RepeatedCall in contract 'BasicMultiToken':
    |        token.asmTransfer(to, amount);
    |        _inLendingMode += 1;
  > |        require(caller().makeCall.value(msg.value)(target, data), "lend: arbitrary call failed");
    |        _inLendingMode -= 1;
    |        require(token.balanceOf(this) >= prevBalance, "lend: lended token must be refilled");
  at AstraBasicMultiTokenDeployer.sol(741)

[33mWarning[0m for TODAmount in contract 'BasicMultiToken':
    |        _sendersStack.push(msg.sender);
    |        approve(to, value);
  > |        require(_caller.makeCall.value(msg.value)(to, data));
    |        _sendersStack.length -= 1;
    |        return true;
  at AstraBasicMultiTokenDeployer.sol(559)

[33mWarning[0m for TODAmount in contract 'BasicMultiToken':
    |    function transferAndCall(address to, uint256 value, bytes data) public payable returns (bool) {
    |        transfer(to, value);
  > |        require(_caller.makeCall.value(msg.value)(to, data));
    |        return true;
    |    }
  at AstraBasicMultiTokenDeployer.sol(566)

[33mWarning[0m for TODAmount in contract 'BasicMultiToken':
    |        token.asmTransfer(to, amount);
    |        _inLendingMode += 1;
  > |        require(caller().makeCall.value(msg.value)(target, data), "lend: arbitrary call failed");
    |        _inLendingMode -= 1;
    |        require(token.balanceOf(this) >= prevBalance, "lend: lended token must be refilled");
  at AstraBasicMultiTokenDeployer.sol(741)

[33mWarning[0m for TODReceiver in contract 'BasicMultiToken':
    |        _sendersStack.push(msg.sender);
    |        approve(to, value);
  > |        require(_caller.makeCall.value(msg.value)(to, data));
    |        _sendersStack.length -= 1;
    |        return true;
  at AstraBasicMultiTokenDeployer.sol(559)

[33mWarning[0m for TODReceiver in contract 'BasicMultiToken':
    |    function transferAndCall(address to, uint256 value, bytes data) public payable returns (bool) {
    |        transfer(to, value);
  > |        require(_caller.makeCall.value(msg.value)(to, data));
    |        return true;
    |    }
  at AstraBasicMultiTokenDeployer.sol(566)

[33mWarning[0m for TODReceiver in contract 'BasicMultiToken':
    |        token.asmTransfer(to, amount);
    |        _inLendingMode += 1;
  > |        require(caller().makeCall.value(msg.value)(target, data), "lend: arbitrary call failed");
    |        _inLendingMode -= 1;
    |        require(token.balanceOf(this) >= prevBalance, "lend: lended token must be refilled");
  at AstraBasicMultiTokenDeployer.sol(741)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'BasicMultiToken':
    |        _sendersStack.push(msg.sender);
    |        approve(to, value);
  > |        require(_caller.makeCall.value(msg.value)(to, data));
    |        _sendersStack.length -= 1;
    |        return true;
  at AstraBasicMultiTokenDeployer.sol(559)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'BasicMultiToken':
    |    function transferAndCall(address to, uint256 value, bytes data) public payable returns (bool) {
    |        transfer(to, value);
  > |        require(_caller.makeCall.value(msg.value)(to, data));
    |        return true;
    |    }
  at AstraBasicMultiTokenDeployer.sol(566)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'BasicMultiToken':
    |        token.asmTransfer(to, amount);
    |        _inLendingMode += 1;
  > |        require(caller().makeCall.value(msg.value)(target, data), "lend: arbitrary call failed");
    |        _inLendingMode -= 1;
    |        require(token.balanceOf(this) >= prevBalance, "lend: lended token must be refilled");
  at AstraBasicMultiTokenDeployer.sol(741)

[33mWarning[0m for UnrestrictedWrite in contract 'BasicMultiToken':
    |pragma solidity ^0.4.24;
    |
  > |// File: openzeppelin-solidity/contracts/ownership/Ownable.sol
    |
    |/**
  at AstraBasicMultiTokenDeployer.sol(3)

[33mWarning[0m for UnrestrictedWrite in contract 'BasicMultiToken':
    |
    |    function approveAndCall(address to, uint256 value, bytes data) public payable returns (bool) {
  > |        _sendersStack.push(msg.sender);
    |        approve(to, value);
    |        require(_caller.makeCall.value(msg.value)(to, data));
  at AstraBasicMultiTokenDeployer.sol(557)

[33mWarning[0m for UnrestrictedWrite in contract 'BasicMultiToken':
    |// File: contracts/BasicMultiToken.sol
    |
  > |contract BasicMultiToken is Ownable, StandardToken, DetailedERC20, ERC1003Token, IBasicMultiToken, SupportsInterfaceWithLookup {
    |    using CheckedERC20 for ERC20;
    |    using CheckedERC20 for DetailedERC20;
  at AstraBasicMultiTokenDeployer.sol(613)

[33mWarning[0m for UnrestrictedWrite in contract 'BasicMultiToken':
    |        uint256 prevBalance = token.balanceOf(this);
    |        token.asmTransfer(to, amount);
  > |        _inLendingMode += 1;
    |        require(caller().makeCall.value(msg.value)(target, data), "lend: arbitrary call failed");
    |        _inLendingMode -= 1;
  at AstraBasicMultiTokenDeployer.sol(740)

[33mWarning[0m for UnrestrictedWrite in contract 'BasicMultiToken':
    |        _inLendingMode += 1;
    |        require(caller().makeCall.value(msg.value)(target, data), "lend: arbitrary call failed");
  > |        _inLendingMode -= 1;
    |        require(token.balanceOf(this) >= prevBalance, "lend: lended token must be refilled");
    |    }
  at AstraBasicMultiTokenDeployer.sol(742)

[33mWarning[0m for UnrestrictedWrite in contract 'BasicToken':
    |
    |    balances[msg.sender] = balances[msg.sender].sub(_value);
  > |    balances[_to] = balances[_to].add(_value);
    |    emit Transfer(msg.sender, _to, _value);
    |    return true;
  at AstraBasicMultiTokenDeployer.sol(309)

[31mViolation[0m for MissingInputValidation in contract 'ERC1003Caller':
    |
    |contract ERC1003Caller is Ownable {
  > |    function makeCall(address target, bytes data) external payable onlyOwner returns (bool) {
    |        // solium-disable-next-line security/no-call-value
    |        return target.call.value(msg.value)(data);
  at AstraBasicMultiTokenDeployer.sol(541)

[33mWarning[0m for TODAmount in contract 'ERC1003Caller':
    |    function makeCall(address target, bytes data) external payable onlyOwner returns (bool) {
    |        // solium-disable-next-line security/no-call-value
  > |        return target.call.value(msg.value)(data);
    |    }
    |}
  at AstraBasicMultiTokenDeployer.sol(543)

[31mViolation[0m for UnhandledException in contract 'ERC1003Caller':
    |    function makeCall(address target, bytes data) external payable onlyOwner returns (bool) {
    |        // solium-disable-next-line security/no-call-value
  > |        return target.call.value(msg.value)(data);
    |    }
    |}
  at AstraBasicMultiTokenDeployer.sol(543)

[31mViolation[0m for UnrestrictedWrite in contract 'ERC1003Caller':
    |    require(_newOwner != address(0));
    |    emit OwnershipTransferred(owner, _newOwner);
  > |    owner = _newOwner;
    |  }
    |}
  at AstraBasicMultiTokenDeployer.sol(63)

[33mWarning[0m for UnrestrictedWrite in contract 'ERC1003Caller':
    |  function renounceOwnership() public onlyOwner {
    |    emit OwnershipRenounced(owner);
  > |    owner = address(0);
    |  }
    |
  at AstraBasicMultiTokenDeployer.sol(45)

[33mWarning[0m for UnrestrictedWrite in contract 'ERC1003Caller':
    |    require(_newOwner != address(0));
    |    emit OwnershipTransferred(owner, _newOwner);
  > |    owner = _newOwner;
    |  }
    |}
  at AstraBasicMultiTokenDeployer.sol(63)

[31mViolation[0m for UnrestrictedWrite in contract 'Ownable':
    |    require(_newOwner != address(0));
    |    emit OwnershipTransferred(owner, _newOwner);
  > |    owner = _newOwner;
    |  }
    |}
  at AstraBasicMultiTokenDeployer.sol(63)

[33mWarning[0m for UnrestrictedWrite in contract 'Ownable':
    |  function renounceOwnership() public onlyOwner {
    |    emit OwnershipRenounced(owner);
  > |    owner = address(0);
    |  }
    |
  at AstraBasicMultiTokenDeployer.sol(45)

[33mWarning[0m for UnrestrictedWrite in contract 'Ownable':
    |    require(_newOwner != address(0));
    |    emit OwnershipTransferred(owner, _newOwner);
  > |    owner = _newOwner;
    |  }
    |}
  at AstraBasicMultiTokenDeployer.sol(63)

[33mWarning[0m for UnrestrictedWrite in contract 'StandardToken':
    |
    |    balances[msg.sender] = balances[msg.sender].sub(_value);
  > |    balances[_to] = balances[_to].add(_value);
    |    emit Transfer(msg.sender, _to, _value);
    |    return true;
  at AstraBasicMultiTokenDeployer.sol(309)

[33mWarning[0m for UnrestrictedWrite in contract 'StandardToken':
    |    require(_to != address(0));
    |
  > |    balances[_from] = balances[_from].sub(_value);
    |    balances[_to] = balances[_to].add(_value);
    |    allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);
  at AstraBasicMultiTokenDeployer.sol(357)

[33mWarning[0m for UnrestrictedWrite in contract 'StandardToken':
    |
    |    balances[_from] = balances[_from].sub(_value);
  > |    balances[_to] = balances[_to].add(_value);
    |    allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);
    |    emit Transfer(_from, _to, _value);
  at AstraBasicMultiTokenDeployer.sol(358)

[31mViolation[0m for MissingInputValidation in contract 'SupportsInterfaceWithLookup':
    |   * @dev implement supportsInterface(bytes4) using a lookup table
    |   */
  > |  function supportsInterface(bytes4 _interfaceId)
    |    external
    |    view
  at AstraBasicMultiTokenDeployer.sol(519)

Processing contract: AstraMultiTokenDeployer.sol:AbstractDeployer
Processing contract: AstraMultiTokenDeployer.sol:AstraMultiToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
java.io.IOException: Timeout for /tmp/binaries_souffle15287136141264988118/mustExplicit -j 8 -F /tmp/souffle-0be5ca2e-783f-44e5-abae-76ac4c248b11 -D /tmp/souffle-0be5ca2e-783f-44e5-abae-76ac4c248b11_OUT
	at ch.securify.analysis.AbstractDataflow.runCommand(AbstractDataflow.java:277)
	at ch.securify.analysis.AbstractDataflow.initDataflow(AbstractDataflow.java:169)
	at ch.securify.analysis.MustExplicitDataflow.<init>(MustExplicitDataflow.java:33)
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:33)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error in Securify
java.lang.RuntimeException
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:37)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error, skipping: AstraMultiTokenDeployer.sol:AstraMultiToken
Processing contract: AstraMultiTokenDeployer.sol:AstraMultiTokenDeployer
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: AstraMultiTokenDeployer.sol:BasicMultiToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: AstraMultiTokenDeployer.sol:BasicToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: AstraMultiTokenDeployer.sol:CheckedERC20
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: AstraMultiTokenDeployer.sol:DetailedERC20
Processing contract: AstraMultiTokenDeployer.sol:ERC1003Caller
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: AstraMultiTokenDeployer.sol:ERC1003Token
Processing contract: AstraMultiTokenDeployer.sol:ERC165
Processing contract: AstraMultiTokenDeployer.sol:ERC20
Processing contract: AstraMultiTokenDeployer.sol:ERC20Basic
Processing contract: AstraMultiTokenDeployer.sol:FeeBasicMultiToken
Processing contract: AstraMultiTokenDeployer.sol:FeeMultiToken
Processing contract: AstraMultiTokenDeployer.sol:IBasicMultiToken
Processing contract: AstraMultiTokenDeployer.sol:IMultiToken
Processing contract: AstraMultiTokenDeployer.sol:MultiToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
java.io.IOException: Timeout for /tmp/binaries_souffle15287136141264988118/mustExplicit -j 8 -F /tmp/souffle-b1d1c768-65ea-45cc-acfb-72e903856fac -D /tmp/souffle-b1d1c768-65ea-45cc-acfb-72e903856fac_OUT
	at ch.securify.analysis.AbstractDataflow.runCommand(AbstractDataflow.java:277)
	at ch.securify.analysis.AbstractDataflow.initDataflow(AbstractDataflow.java:169)
	at ch.securify.analysis.MustExplicitDataflow.<init>(MustExplicitDataflow.java:33)
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:33)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error in Securify
java.lang.RuntimeException
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:37)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error, skipping: AstraMultiTokenDeployer.sol:MultiToken
Processing contract: AstraMultiTokenDeployer.sol:Ownable
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: AstraMultiTokenDeployer.sol:SafeMath
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: AstraMultiTokenDeployer.sol:StandardToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: AstraMultiTokenDeployer.sol:SupportsInterfaceWithLookup
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for LockedEther in contract 'AstraMultiTokenDeployer':
    |// File: contracts/implementation/deployers/AstraMultiTokenDeployer.sol
    |
  > |contract AstraMultiTokenDeployer is AbstractDeployer {
    |    function title() public view returns(string) {
    |        return "AstraMultiTokenDeployer";
  at AstraMultiTokenDeployer.sol(932)

[31mViolation[0m for MissingInputValidation in contract 'AstraMultiTokenDeployer':
    |    function title() public view returns(string);
    |
  > |    function deploy(bytes data)
    |        external onlyOwner returns(address result)
    |    {
  at AstraMultiTokenDeployer.sol(72)

[31mViolation[0m for MissingInputValidation in contract 'AstraMultiTokenDeployer':
    |    }
    |
  > |    function create(ERC20[] tokens, uint256[] weights, string name, string symbol)
    |        external returns(address)
    |    {
  at AstraMultiTokenDeployer.sol(937)

[31mViolation[0m for UnrestrictedWrite in contract 'AstraMultiTokenDeployer':
    |    require(_newOwner != address(0));
    |    emit OwnershipTransferred(owner, _newOwner);
  > |    owner = _newOwner;
    |  }
    |}
  at AstraMultiTokenDeployer.sol(63)

[33mWarning[0m for UnrestrictedWrite in contract 'AstraMultiTokenDeployer':
    |  function renounceOwnership() public onlyOwner {
    |    emit OwnershipRenounced(owner);
  > |    owner = address(0);
    |  }
    |
  at AstraMultiTokenDeployer.sol(45)

[33mWarning[0m for UnrestrictedWrite in contract 'AstraMultiTokenDeployer':
    |    require(_newOwner != address(0));
    |    emit OwnershipTransferred(owner, _newOwner);
  > |    owner = _newOwner;
    |  }
    |}
  at AstraMultiTokenDeployer.sol(63)

[31mViolation[0m for DAO in contract 'BasicMultiToken':
    |        _sendersStack.push(msg.sender);
    |        approve(to, value);
  > |        require(_caller.makeCall.value(msg.value)(to, data));
    |        _sendersStack.length -= 1;
    |        return true;
  at AstraMultiTokenDeployer.sol(559)

[31mViolation[0m for DAO in contract 'BasicMultiToken':
    |        token.asmTransfer(to, amount);
    |        _inLendingMode += 1;
  > |        require(caller().makeCall.value(msg.value)(target, data), "lend: arbitrary call failed");
    |        _inLendingMode -= 1;
    |        require(token.balanceOf(this) >= prevBalance, "lend: lended token must be refilled");
  at AstraMultiTokenDeployer.sol(741)

[33mWarning[0m for LockedEther in contract 'BasicMultiToken':
    |// File: contracts/BasicMultiToken.sol
    |
  > |contract BasicMultiToken is Ownable, StandardToken, DetailedERC20, ERC1003Token, IBasicMultiToken, SupportsInterfaceWithLookup {
    |    using CheckedERC20 for ERC20;
    |    using CheckedERC20 for DetailedERC20;
  at AstraMultiTokenDeployer.sol(613)

[31mViolation[0m for RepeatedCall in contract 'BasicMultiToken':
    |        require(isContract(token));
    |        // solium-disable-next-line security/no-low-level-calls
  > |        require(token.call(bytes4(keccak256("transfer(address,uint256)")), to, value));
    |        return handleReturnBool();
    |    }
  at AstraMultiTokenDeployer.sol(226)

[31mViolation[0m for RepeatedCall in contract 'BasicMultiToken':
    |        require(isContract(token));
    |        // solium-disable-next-line security/no-low-level-calls
  > |        require(token.call(bytes4(keccak256("transferFrom(address,address,uint256)")), from, to, value));
    |        return handleReturnBool();
    |    }
  at AstraMultiTokenDeployer.sol(233)

[31mViolation[0m for RepeatedCall in contract 'BasicMultiToken':
    |    function checkedTransfer(ERC20 token, address to, uint256 value) internal {
    |        if (value > 0) {
  > |            uint256 balance = token.balanceOf(this);
    |            asmTransfer(token, to, value);
    |            require(token.balanceOf(this) == balance.sub(value), "checkedTransfer: Final balance didn't match");
  at AstraMultiTokenDeployer.sol(248)

[31mViolation[0m for RepeatedCall in contract 'BasicMultiToken':
    |            uint256 balance = token.balanceOf(this);
    |            asmTransfer(token, to, value);
  > |            require(token.balanceOf(this) == balance.sub(value), "checkedTransfer: Final balance didn't match");
    |        }
    |    }
  at AstraMultiTokenDeployer.sol(250)

[31mViolation[0m for RepeatedCall in contract 'BasicMultiToken':
    |    function checkedTransferFrom(ERC20 token, address from, address to, uint256 value) internal {
    |        if (value > 0) {
  > |            uint256 toBalance = token.balanceOf(to);
    |            asmTransferFrom(token, from, to, value);
    |            require(token.balanceOf(to) == toBalance.add(value), "checkedTransfer: Final balance didn't match");
  at AstraMultiTokenDeployer.sol(256)

[31mViolation[0m for RepeatedCall in contract 'BasicMultiToken':
    |            uint256 toBalance = token.balanceOf(to);
    |            asmTransferFrom(token, from, to, value);
  > |            require(token.balanceOf(to) == toBalance.add(value), "checkedTransfer: Final balance didn't match");
    |        }
    |    }
  at AstraMultiTokenDeployer.sol(258)

[31mViolation[0m for RepeatedCall in contract 'BasicMultiToken':
    |        uint256[] memory tokenAmounts = new uint256[](_tokens.length);
    |        for (uint i = 0; i < _tokens.length; i++) {
  > |            tokenAmounts[i] = _tokens[i].balanceOf(this).mul(amount).div(totalSupply_);
    |        }
    |        _bundle(beneficiary, amount, tokenAmounts);
  at AstraMultiTokenDeployer.sol(673)

[31mViolation[0m for RepeatedCall in contract 'BasicMultiToken':
    |                require(someTokens[i] != someTokens[j], "unbundleSome: should not unbundle same token multiple times");
    |            }
  > |            uint256 tokenAmount = someTokens[i].balanceOf(this).mul(value).div(totalSupply);
    |            someTokens[i].checkedTransfer(beneficiary, tokenAmount);
    |        }
  at AstraMultiTokenDeployer.sol(730)

[31mViolation[0m for RepeatedCall in contract 'BasicMultiToken':
    |        require(caller().makeCall.value(msg.value)(target, data), "lend: arbitrary call failed");
    |        _inLendingMode -= 1;
  > |        require(token.balanceOf(this) >= prevBalance, "lend: lended token must be refilled");
    |    }
    |}
  at AstraMultiTokenDeployer.sol(743)

[33mWarning[0m for RepeatedCall in contract 'BasicMultiToken':
    |    function transferAndCall(address to, uint256 value, bytes data) public payable returns (bool) {
    |        transfer(to, value);
  > |        require(_caller.makeCall.value(msg.value)(to, data));
    |        return true;
    |    }
  at AstraMultiTokenDeployer.sol(566)

[33mWarning[0m for RepeatedCall in contract 'BasicMultiToken':
    |        token.asmTransfer(to, amount);
    |        _inLendingMode += 1;
  > |        require(caller().makeCall.value(msg.value)(target, data), "lend: arbitrary call failed");
    |        _inLendingMode -= 1;
    |        require(token.balanceOf(this) >= prevBalance, "lend: lended token must be refilled");
  at AstraMultiTokenDeployer.sol(741)

[33mWarning[0m for TODAmount in contract 'BasicMultiToken':
    |        _sendersStack.push(msg.sender);
    |        approve(to, value);
  > |        require(_caller.makeCall.value(msg.value)(to, data));
    |        _sendersStack.length -= 1;
    |        return true;
  at AstraMultiTokenDeployer.sol(559)

[33mWarning[0m for TODAmount in contract 'BasicMultiToken':
    |    function transferAndCall(address to, uint256 value, bytes data) public payable returns (bool) {
    |        transfer(to, value);
  > |        require(_caller.makeCall.value(msg.value)(to, data));
    |        return true;
    |    }
  at AstraMultiTokenDeployer.sol(566)

[33mWarning[0m for TODAmount in contract 'BasicMultiToken':
    |        token.asmTransfer(to, amount);
    |        _inLendingMode += 1;
  > |        require(caller().makeCall.value(msg.value)(target, data), "lend: arbitrary call failed");
    |        _inLendingMode -= 1;
    |        require(token.balanceOf(this) >= prevBalance, "lend: lended token must be refilled");
  at AstraMultiTokenDeployer.sol(741)

[33mWarning[0m for TODReceiver in contract 'BasicMultiToken':
    |        _sendersStack.push(msg.sender);
    |        approve(to, value);
  > |        require(_caller.makeCall.value(msg.value)(to, data));
    |        _sendersStack.length -= 1;
    |        return true;
  at AstraMultiTokenDeployer.sol(559)

[33mWarning[0m for TODReceiver in contract 'BasicMultiToken':
    |    function transferAndCall(address to, uint256 value, bytes data) public payable returns (bool) {
    |        transfer(to, value);
  > |        require(_caller.makeCall.value(msg.value)(to, data));
    |        return true;
    |    }
  at AstraMultiTokenDeployer.sol(566)

[33mWarning[0m for TODReceiver in contract 'BasicMultiToken':
    |        token.asmTransfer(to, amount);
    |        _inLendingMode += 1;
  > |        require(caller().makeCall.value(msg.value)(target, data), "lend: arbitrary call failed");
    |        _inLendingMode -= 1;
    |        require(token.balanceOf(this) >= prevBalance, "lend: lended token must be refilled");
  at AstraMultiTokenDeployer.sol(741)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'BasicMultiToken':
    |        _sendersStack.push(msg.sender);
    |        approve(to, value);
  > |        require(_caller.makeCall.value(msg.value)(to, data));
    |        _sendersStack.length -= 1;
    |        return true;
  at AstraMultiTokenDeployer.sol(559)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'BasicMultiToken':
    |    function transferAndCall(address to, uint256 value, bytes data) public payable returns (bool) {
    |        transfer(to, value);
  > |        require(_caller.makeCall.value(msg.value)(to, data));
    |        return true;
    |    }
  at AstraMultiTokenDeployer.sol(566)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'BasicMultiToken':
    |        token.asmTransfer(to, amount);
    |        _inLendingMode += 1;
  > |        require(caller().makeCall.value(msg.value)(target, data), "lend: arbitrary call failed");
    |        _inLendingMode -= 1;
    |        require(token.balanceOf(this) >= prevBalance, "lend: lended token must be refilled");
  at AstraMultiTokenDeployer.sol(741)

[33mWarning[0m for UnrestrictedWrite in contract 'BasicMultiToken':
    |pragma solidity ^0.4.24;
    |
  > |// File: openzeppelin-solidity/contracts/ownership/Ownable.sol
    |
    |/**
  at AstraMultiTokenDeployer.sol(3)

[33mWarning[0m for UnrestrictedWrite in contract 'BasicMultiToken':
    |
    |    function approveAndCall(address to, uint256 value, bytes data) public payable returns (bool) {
  > |        _sendersStack.push(msg.sender);
    |        approve(to, value);
    |        require(_caller.makeCall.value(msg.value)(to, data));
  at AstraMultiTokenDeployer.sol(557)

[33mWarning[0m for UnrestrictedWrite in contract 'BasicMultiToken':
    |// File: contracts/BasicMultiToken.sol
    |
  > |contract BasicMultiToken is Ownable, StandardToken, DetailedERC20, ERC1003Token, IBasicMultiToken, SupportsInterfaceWithLookup {
    |    using CheckedERC20 for ERC20;
    |    using CheckedERC20 for DetailedERC20;
  at AstraMultiTokenDeployer.sol(613)

[33mWarning[0m for UnrestrictedWrite in contract 'BasicMultiToken':
    |        uint256 prevBalance = token.balanceOf(this);
    |        token.asmTransfer(to, amount);
  > |        _inLendingMode += 1;
    |        require(caller().makeCall.value(msg.value)(target, data), "lend: arbitrary call failed");
    |        _inLendingMode -= 1;
  at AstraMultiTokenDeployer.sol(740)

[33mWarning[0m for UnrestrictedWrite in contract 'BasicMultiToken':
    |        _inLendingMode += 1;
    |        require(caller().makeCall.value(msg.value)(target, data), "lend: arbitrary call failed");
  > |        _inLendingMode -= 1;
    |        require(token.balanceOf(this) >= prevBalance, "lend: lended token must be refilled");
    |    }
  at AstraMultiTokenDeployer.sol(742)

[33mWarning[0m for UnrestrictedWrite in contract 'BasicToken':
    |
    |    balances[msg.sender] = balances[msg.sender].sub(_value);
  > |    balances[_to] = balances[_to].add(_value);
    |    emit Transfer(msg.sender, _to, _value);
    |    return true;
  at AstraMultiTokenDeployer.sol(309)

[31mViolation[0m for MissingInputValidation in contract 'ERC1003Caller':
    |
    |contract ERC1003Caller is Ownable {
  > |    function makeCall(address target, bytes data) external payable onlyOwner returns (bool) {
    |        // solium-disable-next-line security/no-call-value
    |        return target.call.value(msg.value)(data);
  at AstraMultiTokenDeployer.sol(541)

[33mWarning[0m for TODAmount in contract 'ERC1003Caller':
    |    function makeCall(address target, bytes data) external payable onlyOwner returns (bool) {
    |        // solium-disable-next-line security/no-call-value
  > |        return target.call.value(msg.value)(data);
    |    }
    |}
  at AstraMultiTokenDeployer.sol(543)

[31mViolation[0m for UnhandledException in contract 'ERC1003Caller':
    |    function makeCall(address target, bytes data) external payable onlyOwner returns (bool) {
    |        // solium-disable-next-line security/no-call-value
  > |        return target.call.value(msg.value)(data);
    |    }
    |}
  at AstraMultiTokenDeployer.sol(543)

[31mViolation[0m for UnrestrictedWrite in contract 'ERC1003Caller':
    |    require(_newOwner != address(0));
    |    emit OwnershipTransferred(owner, _newOwner);
  > |    owner = _newOwner;
    |  }
    |}
  at AstraMultiTokenDeployer.sol(63)

[33mWarning[0m for UnrestrictedWrite in contract 'ERC1003Caller':
    |  function renounceOwnership() public onlyOwner {
    |    emit OwnershipRenounced(owner);
  > |    owner = address(0);
    |  }
    |
  at AstraMultiTokenDeployer.sol(45)

[33mWarning[0m for UnrestrictedWrite in contract 'ERC1003Caller':
    |    require(_newOwner != address(0));
    |    emit OwnershipTransferred(owner, _newOwner);
  > |    owner = _newOwner;
    |  }
    |}
  at AstraMultiTokenDeployer.sol(63)

[31mViolation[0m for UnrestrictedWrite in contract 'Ownable':
    |    require(_newOwner != address(0));
    |    emit OwnershipTransferred(owner, _newOwner);
  > |    owner = _newOwner;
    |  }
    |}
  at AstraMultiTokenDeployer.sol(63)

[33mWarning[0m for UnrestrictedWrite in contract 'Ownable':
    |  function renounceOwnership() public onlyOwner {
    |    emit OwnershipRenounced(owner);
  > |    owner = address(0);
    |  }
    |
  at AstraMultiTokenDeployer.sol(45)

[33mWarning[0m for UnrestrictedWrite in contract 'Ownable':
    |    require(_newOwner != address(0));
    |    emit OwnershipTransferred(owner, _newOwner);
  > |    owner = _newOwner;
    |  }
    |}
  at AstraMultiTokenDeployer.sol(63)

[33mWarning[0m for UnrestrictedWrite in contract 'StandardToken':
    |
    |    balances[msg.sender] = balances[msg.sender].sub(_value);
  > |    balances[_to] = balances[_to].add(_value);
    |    emit Transfer(msg.sender, _to, _value);
    |    return true;
  at AstraMultiTokenDeployer.sol(309)

[33mWarning[0m for UnrestrictedWrite in contract 'StandardToken':
    |    require(_to != address(0));
    |
  > |    balances[_from] = balances[_from].sub(_value);
    |    balances[_to] = balances[_to].add(_value);
    |    allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);
  at AstraMultiTokenDeployer.sol(357)

[33mWarning[0m for UnrestrictedWrite in contract 'StandardToken':
    |
    |    balances[_from] = balances[_from].sub(_value);
  > |    balances[_to] = balances[_to].add(_value);
    |    allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);
    |    emit Transfer(_from, _to, _value);
  at AstraMultiTokenDeployer.sol(358)

[31mViolation[0m for MissingInputValidation in contract 'SupportsInterfaceWithLookup':
    |   * @dev implement supportsInterface(bytes4) using a lookup table
    |   */
  > |  function supportsInterface(bytes4 _interfaceId)
    |    external
    |    view
  at AstraMultiTokenDeployer.sol(519)

Processing contract: IssuanceController.sol:ExternStateToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: IssuanceController.sol:FeeToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: IssuanceController.sol:Havven
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: AstraMultiTokenDeployer.sol:AbstractDeployer
Processing contract: AstraMultiTokenDeployer.sol:AstraMultiToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
java.io.IOException: Timeout for /tmp/binaries_souffle703908353856478365/mustExplicit -j 8 -F /tmp/souffle-5abaf68b-632d-4852-bc2f-f0576ae1d7c6 -D /tmp/souffle-5abaf68b-632d-4852-bc2f-f0576ae1d7c6_OUT
	at ch.securify.analysis.AbstractDataflow.runCommand(AbstractDataflow.java:277)
	at ch.securify.analysis.AbstractDataflow.initDataflow(AbstractDataflow.java:169)
	at ch.securify.analysis.MustExplicitDataflow.<init>(MustExplicitDataflow.java:33)
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:33)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error in Securify
java.lang.RuntimeException
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:37)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error, skipping: AstraMultiTokenDeployer.sol:AstraMultiToken
Processing contract: AstraMultiTokenDeployer.sol:AstraMultiTokenDeployer
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: AstraMultiTokenDeployer.sol:BasicMultiToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: AstraMultiTokenDeployer.sol:BasicToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: AstraMultiTokenDeployer.sol:CheckedERC20
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: AstraMultiTokenDeployer.sol:DetailedERC20
Processing contract: AstraMultiTokenDeployer.sol:ERC1003Caller
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: AstraMultiTokenDeployer.sol:ERC1003Token
Processing contract: AstraMultiTokenDeployer.sol:ERC165
Processing contract: AstraMultiTokenDeployer.sol:ERC20
Processing contract: AstraMultiTokenDeployer.sol:ERC20Basic
Processing contract: AstraMultiTokenDeployer.sol:FeeBasicMultiToken
Processing contract: AstraMultiTokenDeployer.sol:FeeMultiToken
Processing contract: AstraMultiTokenDeployer.sol:IBasicMultiToken
Processing contract: AstraMultiTokenDeployer.sol:IMultiToken
Processing contract: AstraMultiTokenDeployer.sol:MultiToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
java.io.IOException: Timeout for /tmp/binaries_souffle703908353856478365/mustExplicit -j 8 -F /tmp/souffle-59d4ad39-08e4-4da0-b17d-3812608452f9 -D /tmp/souffle-59d4ad39-08e4-4da0-b17d-3812608452f9_OUT
	at ch.securify.analysis.AbstractDataflow.runCommand(AbstractDataflow.java:277)
	at ch.securify.analysis.AbstractDataflow.initDataflow(AbstractDataflow.java:169)
	at ch.securify.analysis.MustExplicitDataflow.<init>(MustExplicitDataflow.java:33)
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:33)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error in Securify
java.lang.RuntimeException
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:37)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error, skipping: AstraMultiTokenDeployer.sol:MultiToken
Processing contract: AstraMultiTokenDeployer.sol:Ownable
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: AstraMultiTokenDeployer.sol:SafeMath
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: AstraMultiTokenDeployer.sol:StandardToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: AstraMultiTokenDeployer.sol:SupportsInterfaceWithLookup
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for LockedEther in contract 'AstraMultiTokenDeployer':
    |// File: contracts/implementation/deployers/AstraMultiTokenDeployer.sol
    |
  > |contract AstraMultiTokenDeployer is AbstractDeployer {
    |    function title() public view returns(string) {
    |        return "AstraMultiTokenDeployer";
  at AstraMultiTokenDeployer.sol(932)

[31mViolation[0m for MissingInputValidation in contract 'AstraMultiTokenDeployer':
    |    function title() public view returns(string);
    |
  > |    function deploy(bytes data)
    |        external onlyOwner returns(address result)
    |    {
  at AstraMultiTokenDeployer.sol(72)

[31mViolation[0m for MissingInputValidation in contract 'AstraMultiTokenDeployer':
    |    }
    |
  > |    function create(ERC20[] tokens, uint256[] weights, string name, string symbol)
    |        external returns(address)
    |    {
  at AstraMultiTokenDeployer.sol(937)

[31mViolation[0m for UnrestrictedWrite in contract 'AstraMultiTokenDeployer':
    |    require(_newOwner != address(0));
    |    emit OwnershipTransferred(owner, _newOwner);
  > |    owner = _newOwner;
    |  }
    |}
  at AstraMultiTokenDeployer.sol(63)

[33mWarning[0m for UnrestrictedWrite in contract 'AstraMultiTokenDeployer':
    |  function renounceOwnership() public onlyOwner {
    |    emit OwnershipRenounced(owner);
  > |    owner = address(0);
    |  }
    |
  at AstraMultiTokenDeployer.sol(45)

[33mWarning[0m for UnrestrictedWrite in contract 'AstraMultiTokenDeployer':
    |    require(_newOwner != address(0));
    |    emit OwnershipTransferred(owner, _newOwner);
  > |    owner = _newOwner;
    |  }
    |}
  at AstraMultiTokenDeployer.sol(63)

[31mViolation[0m for DAO in contract 'BasicMultiToken':
    |        _sendersStack.push(msg.sender);
    |        approve(to, value);
  > |        require(_caller.makeCall.value(msg.value)(to, data));
    |        _sendersStack.length -= 1;
    |        return true;
  at AstraMultiTokenDeployer.sol(559)

[31mViolation[0m for DAO in contract 'BasicMultiToken':
    |        token.asmTransfer(to, amount);
    |        _inLendingMode += 1;
  > |        require(caller().makeCall.value(msg.value)(target, data), "lend: arbitrary call failed");
    |        _inLendingMode -= 1;
    |        require(token.balanceOf(this) >= prevBalance, "lend: lended token must be refilled");
  at AstraMultiTokenDeployer.sol(741)

[33mWarning[0m for LockedEther in contract 'BasicMultiToken':
    |// File: contracts/BasicMultiToken.sol
    |
  > |contract BasicMultiToken is Ownable, StandardToken, DetailedERC20, ERC1003Token, IBasicMultiToken, SupportsInterfaceWithLookup {
    |    using CheckedERC20 for ERC20;
    |    using CheckedERC20 for DetailedERC20;
  at AstraMultiTokenDeployer.sol(613)

[31mViolation[0m for RepeatedCall in contract 'BasicMultiToken':
    |        require(isContract(token));
    |        // solium-disable-next-line security/no-low-level-calls
  > |        require(token.call(bytes4(keccak256("transfer(address,uint256)")), to, value));
    |        return handleReturnBool();
    |    }
  at AstraMultiTokenDeployer.sol(226)

[31mViolation[0m for RepeatedCall in contract 'BasicMultiToken':
    |        require(isContract(token));
    |        // solium-disable-next-line security/no-low-level-calls
  > |        require(token.call(bytes4(keccak256("transferFrom(address,address,uint256)")), from, to, value));
    |        return handleReturnBool();
    |    }
  at AstraMultiTokenDeployer.sol(233)

[31mViolation[0m for RepeatedCall in contract 'BasicMultiToken':
    |    function checkedTransfer(ERC20 token, address to, uint256 value) internal {
    |        if (value > 0) {
  > |            uint256 balance = token.balanceOf(this);
    |            asmTransfer(token, to, value);
    |            require(token.balanceOf(this) == balance.sub(value), "checkedTransfer: Final balance didn't match");
  at AstraMultiTokenDeployer.sol(248)

[31mViolation[0m for RepeatedCall in contract 'BasicMultiToken':
    |            uint256 balance = token.balanceOf(this);
    |            asmTransfer(token, to, value);
  > |            require(token.balanceOf(this) == balance.sub(value), "checkedTransfer: Final balance didn't match");
    |        }
    |    }
  at AstraMultiTokenDeployer.sol(250)

[31mViolation[0m for RepeatedCall in contract 'BasicMultiToken':
    |    function checkedTransferFrom(ERC20 token, address from, address to, uint256 value) internal {
    |        if (value > 0) {
  > |            uint256 toBalance = token.balanceOf(to);
    |            asmTransferFrom(token, from, to, value);
    |            require(token.balanceOf(to) == toBalance.add(value), "checkedTransfer: Final balance didn't match");
  at AstraMultiTokenDeployer.sol(256)

[31mViolation[0m for RepeatedCall in contract 'BasicMultiToken':
    |            uint256 toBalance = token.balanceOf(to);
    |            asmTransferFrom(token, from, to, value);
  > |            require(token.balanceOf(to) == toBalance.add(value), "checkedTransfer: Final balance didn't match");
    |        }
    |    }
  at AstraMultiTokenDeployer.sol(258)

[31mViolation[0m for RepeatedCall in contract 'BasicMultiToken':
    |        uint256[] memory tokenAmounts = new uint256[](_tokens.length);
    |        for (uint i = 0; i < _tokens.length; i++) {
  > |            tokenAmounts[i] = _tokens[i].balanceOf(this).mul(amount).div(totalSupply_);
    |        }
    |        _bundle(beneficiary, amount, tokenAmounts);
  at AstraMultiTokenDeployer.sol(673)

[31mViolation[0m for RepeatedCall in contract 'BasicMultiToken':
    |                require(someTokens[i] != someTokens[j], "unbundleSome: should not unbundle same token multiple times");
    |            }
  > |            uint256 tokenAmount = someTokens[i].balanceOf(this).mul(value).div(totalSupply);
    |            someTokens[i].checkedTransfer(beneficiary, tokenAmount);
    |        }
  at AstraMultiTokenDeployer.sol(730)

[31mViolation[0m for RepeatedCall in contract 'BasicMultiToken':
    |        require(caller().makeCall.value(msg.value)(target, data), "lend: arbitrary call failed");
    |        _inLendingMode -= 1;
  > |        require(token.balanceOf(this) >= prevBalance, "lend: lended token must be refilled");
    |    }
    |}
  at AstraMultiTokenDeployer.sol(743)

[33mWarning[0m for RepeatedCall in contract 'BasicMultiToken':
    |    function transferAndCall(address to, uint256 value, bytes data) public payable returns (bool) {
    |        transfer(to, value);
  > |        require(_caller.makeCall.value(msg.value)(to, data));
    |        return true;
    |    }
  at AstraMultiTokenDeployer.sol(566)

[33mWarning[0m for RepeatedCall in contract 'BasicMultiToken':
    |        token.asmTransfer(to, amount);
    |        _inLendingMode += 1;
  > |        require(caller().makeCall.value(msg.value)(target, data), "lend: arbitrary call failed");
    |        _inLendingMode -= 1;
    |        require(token.balanceOf(this) >= prevBalance, "lend: lended token must be refilled");
  at AstraMultiTokenDeployer.sol(741)

[33mWarning[0m for TODAmount in contract 'BasicMultiToken':
    |        _sendersStack.push(msg.sender);
    |        approve(to, value);
  > |        require(_caller.makeCall.value(msg.value)(to, data));
    |        _sendersStack.length -= 1;
    |        return true;
  at AstraMultiTokenDeployer.sol(559)

[33mWarning[0m for TODAmount in contract 'BasicMultiToken':
    |    function transferAndCall(address to, uint256 value, bytes data) public payable returns (bool) {
    |        transfer(to, value);
  > |        require(_caller.makeCall.value(msg.value)(to, data));
    |        return true;
    |    }
  at AstraMultiTokenDeployer.sol(566)

[33mWarning[0m for TODAmount in contract 'BasicMultiToken':
    |        token.asmTransfer(to, amount);
    |        _inLendingMode += 1;
  > |        require(caller().makeCall.value(msg.value)(target, data), "lend: arbitrary call failed");
    |        _inLendingMode -= 1;
    |        require(token.balanceOf(this) >= prevBalance, "lend: lended token must be refilled");
  at AstraMultiTokenDeployer.sol(741)

[33mWarning[0m for TODReceiver in contract 'BasicMultiToken':
    |        _sendersStack.push(msg.sender);
    |        approve(to, value);
  > |        require(_caller.makeCall.value(msg.value)(to, data));
    |        _sendersStack.length -= 1;
    |        return true;
  at AstraMultiTokenDeployer.sol(559)

[33mWarning[0m for TODReceiver in contract 'BasicMultiToken':
    |    function transferAndCall(address to, uint256 value, bytes data) public payable returns (bool) {
    |        transfer(to, value);
  > |        require(_caller.makeCall.value(msg.value)(to, data));
    |        return true;
    |    }
  at AstraMultiTokenDeployer.sol(566)

[33mWarning[0m for TODReceiver in contract 'BasicMultiToken':
    |        token.asmTransfer(to, amount);
    |        _inLendingMode += 1;
  > |        require(caller().makeCall.value(msg.value)(target, data), "lend: arbitrary call failed");
    |        _inLendingMode -= 1;
    |        require(token.balanceOf(this) >= prevBalance, "lend: lended token must be refilled");
  at AstraMultiTokenDeployer.sol(741)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'BasicMultiToken':
    |        _sendersStack.push(msg.sender);
    |        approve(to, value);
  > |        require(_caller.makeCall.value(msg.value)(to, data));
    |        _sendersStack.length -= 1;
    |        return true;
  at AstraMultiTokenDeployer.sol(559)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'BasicMultiToken':
    |    function transferAndCall(address to, uint256 value, bytes data) public payable returns (bool) {
    |        transfer(to, value);
  > |        require(_caller.makeCall.value(msg.value)(to, data));
    |        return true;
    |    }
  at AstraMultiTokenDeployer.sol(566)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'BasicMultiToken':
    |        token.asmTransfer(to, amount);
    |        _inLendingMode += 1;
  > |        require(caller().makeCall.value(msg.value)(target, data), "lend: arbitrary call failed");
    |        _inLendingMode -= 1;
    |        require(token.balanceOf(this) >= prevBalance, "lend: lended token must be refilled");
  at AstraMultiTokenDeployer.sol(741)

[33mWarning[0m for UnrestrictedWrite in contract 'BasicMultiToken':
    |pragma solidity ^0.4.24;
    |
  > |// File: openzeppelin-solidity/contracts/ownership/Ownable.sol
    |
    |/**
  at AstraMultiTokenDeployer.sol(3)

[33mWarning[0m for UnrestrictedWrite in contract 'BasicMultiToken':
    |
    |    function approveAndCall(address to, uint256 value, bytes data) public payable returns (bool) {
  > |        _sendersStack.push(msg.sender);
    |        approve(to, value);
    |        require(_caller.makeCall.value(msg.value)(to, data));
  at AstraMultiTokenDeployer.sol(557)

[33mWarning[0m for UnrestrictedWrite in contract 'BasicMultiToken':
    |// File: contracts/BasicMultiToken.sol
    |
  > |contract BasicMultiToken is Ownable, StandardToken, DetailedERC20, ERC1003Token, IBasicMultiToken, SupportsInterfaceWithLookup {
    |    using CheckedERC20 for ERC20;
    |    using CheckedERC20 for DetailedERC20;
  at AstraMultiTokenDeployer.sol(613)

[33mWarning[0m for UnrestrictedWrite in contract 'BasicMultiToken':
    |        uint256 prevBalance = token.balanceOf(this);
    |        token.asmTransfer(to, amount);
  > |        _inLendingMode += 1;
    |        require(caller().makeCall.value(msg.value)(target, data), "lend: arbitrary call failed");
    |        _inLendingMode -= 1;
  at AstraMultiTokenDeployer.sol(740)

[33mWarning[0m for UnrestrictedWrite in contract 'BasicMultiToken':
    |        _inLendingMode += 1;
    |        require(caller().makeCall.value(msg.value)(target, data), "lend: arbitrary call failed");
  > |        _inLendingMode -= 1;
    |        require(token.balanceOf(this) >= prevBalance, "lend: lended token must be refilled");
    |    }
  at AstraMultiTokenDeployer.sol(742)

[33mWarning[0m for UnrestrictedWrite in contract 'BasicToken':
    |
    |    balances[msg.sender] = balances[msg.sender].sub(_value);
  > |    balances[_to] = balances[_to].add(_value);
    |    emit Transfer(msg.sender, _to, _value);
    |    return true;
  at AstraMultiTokenDeployer.sol(309)

[31mViolation[0m for MissingInputValidation in contract 'ERC1003Caller':
    |
    |contract ERC1003Caller is Ownable {
  > |    function makeCall(address target, bytes data) external payable onlyOwner returns (bool) {
    |        // solium-disable-next-line security/no-call-value
    |        return target.call.value(msg.value)(data);
  at AstraMultiTokenDeployer.sol(541)

[33mWarning[0m for TODAmount in contract 'ERC1003Caller':
    |    function makeCall(address target, bytes data) external payable onlyOwner returns (bool) {
    |        // solium-disable-next-line security/no-call-value
  > |        return target.call.value(msg.value)(data);
    |    }
    |}
  at AstraMultiTokenDeployer.sol(543)

[31mViolation[0m for UnhandledException in contract 'ERC1003Caller':
    |    function makeCall(address target, bytes data) external payable onlyOwner returns (bool) {
    |        // solium-disable-next-line security/no-call-value
  > |        return target.call.value(msg.value)(data);
    |    }
    |}
  at AstraMultiTokenDeployer.sol(543)

[31mViolation[0m for UnrestrictedWrite in contract 'ERC1003Caller':
    |    require(_newOwner != address(0));
    |    emit OwnershipTransferred(owner, _newOwner);
  > |    owner = _newOwner;
    |  }
    |}
  at AstraMultiTokenDeployer.sol(63)

[33mWarning[0m for UnrestrictedWrite in contract 'ERC1003Caller':
    |  function renounceOwnership() public onlyOwner {
    |    emit OwnershipRenounced(owner);
  > |    owner = address(0);
    |  }
    |
  at AstraMultiTokenDeployer.sol(45)

[33mWarning[0m for UnrestrictedWrite in contract 'ERC1003Caller':
    |    require(_newOwner != address(0));
    |    emit OwnershipTransferred(owner, _newOwner);
  > |    owner = _newOwner;
    |  }
    |}
  at AstraMultiTokenDeployer.sol(63)

[31mViolation[0m for UnrestrictedWrite in contract 'Ownable':
    |    require(_newOwner != address(0));
    |    emit OwnershipTransferred(owner, _newOwner);
  > |    owner = _newOwner;
    |  }
    |}
  at AstraMultiTokenDeployer.sol(63)

[33mWarning[0m for UnrestrictedWrite in contract 'Ownable':
    |  function renounceOwnership() public onlyOwner {
    |    emit OwnershipRenounced(owner);
  > |    owner = address(0);
    |  }
    |
  at AstraMultiTokenDeployer.sol(45)

[33mWarning[0m for UnrestrictedWrite in contract 'Ownable':
    |    require(_newOwner != address(0));
    |    emit OwnershipTransferred(owner, _newOwner);
  > |    owner = _newOwner;
    |  }
    |}
  at AstraMultiTokenDeployer.sol(63)

[33mWarning[0m for UnrestrictedWrite in contract 'StandardToken':
    |
    |    balances[msg.sender] = balances[msg.sender].sub(_value);
  > |    balances[_to] = balances[_to].add(_value);
    |    emit Transfer(msg.sender, _to, _value);
    |    return true;
  at AstraMultiTokenDeployer.sol(309)

[33mWarning[0m for UnrestrictedWrite in contract 'StandardToken':
    |    require(_to != address(0));
    |
  > |    balances[_from] = balances[_from].sub(_value);
    |    balances[_to] = balances[_to].add(_value);
    |    allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);
  at AstraMultiTokenDeployer.sol(357)

[33mWarning[0m for UnrestrictedWrite in contract 'StandardToken':
    |
    |    balances[_from] = balances[_from].sub(_value);
  > |    balances[_to] = balances[_to].add(_value);
    |    allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);
    |    emit Transfer(_from, _to, _value);
  at AstraMultiTokenDeployer.sol(358)

[31mViolation[0m for MissingInputValidation in contract 'SupportsInterfaceWithLookup':
    |   * @dev implement supportsInterface(bytes4) using a lookup table
    |   */
  > |  function supportsInterface(bytes4 _interfaceId)
    |    external
    |    view
  at AstraMultiTokenDeployer.sol(519)

Processing contract: IssuanceController.sol:ExternStateToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: IssuanceController.sol:FeeToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: IssuanceController.sol:Havven
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
java.io.IOException: Timeout for /tmp/binaries_souffle8354688505766495401/mustExplicit -j 8 -F /tmp/souffle-70ae2eff-6fe6-4987-a351-70fc94f0a474 -D /tmp/souffle-70ae2eff-6fe6-4987-a351-70fc94f0a474_OUT
	at ch.securify.analysis.AbstractDataflow.runCommand(AbstractDataflow.java:277)
	at ch.securify.analysis.AbstractDataflow.initDataflow(AbstractDataflow.java:169)
	at ch.securify.analysis.MustExplicitDataflow.<init>(MustExplicitDataflow.java:33)
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:33)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error in Securify
java.lang.RuntimeException
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:37)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error, skipping: IssuanceController.sol:Havven
Processing contract: IssuanceController.sol:HavvenEscrow
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: IssuanceController.sol:IssuanceController
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: IssuanceController.sol:LimitedSetup
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: IssuanceController.sol:Nomin
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
java.io.IOException: Timeout for /tmp/binaries_souffle8354688505766495401/mustExplicit -j 8 -F /tmp/souffle-ae979482-2b2c-4202-8601-55b2ee6d53d4 -D /tmp/souffle-ae979482-2b2c-4202-8601-55b2ee6d53d4_OUT
	at ch.securify.analysis.AbstractDataflow.runCommand(AbstractDataflow.java:277)
	at ch.securify.analysis.AbstractDataflow.initDataflow(AbstractDataflow.java:169)
	at ch.securify.analysis.MustExplicitDataflow.<init>(MustExplicitDataflow.java:33)
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:33)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error in Securify
java.lang.RuntimeException
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:37)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error, skipping: IssuanceController.sol:Nomin
Processing contract: IssuanceController.sol:Owned
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: IssuanceController.sol:Pausable
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: IssuanceController.sol:Proxy
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: IssuanceController.sol:Proxyable
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: IssuanceController.sol:ReentrancyPreventer
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: IssuanceController.sol:SafeDecimalMath
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: IssuanceController.sol:SelfDestructible
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: IssuanceController.sol:State
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: IssuanceController.sol:TokenState
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
[33mWarning[0m for UnrestrictedWrite in contract 'ExternStateToken':
    |        onlyOwner
    |    {
  > |        nominatedOwner = _owner;
    |        emit OwnerNominated(_owner);
    |    }
  at IssuanceController.sol(59)

[33mWarning[0m for UnrestrictedWrite in contract 'ExternStateToken':
    |        require(msg.sender == nominatedOwner, "You must be nominated before you can accept ownership");
    |        emit OwnerChanged(owner, nominatedOwner);
  > |        owner = nominatedOwner;
    |        nominatedOwner = address(0);
    |    }
  at IssuanceController.sol(71)

[33mWarning[0m for UnrestrictedWrite in contract 'ExternStateToken':
    |        emit OwnerChanged(owner, nominatedOwner);
    |        owner = nominatedOwner;
  > |        nominatedOwner = address(0);
    |    }
    |
  at IssuanceController.sol(72)

[33mWarning[0m for UnrestrictedWrite in contract 'ExternStateToken':
    |	{
    |		require(_beneficiary != address(0), "Beneficiary must not be the zero address");
  > |		selfDestructBeneficiary = _beneficiary;
    |		emit SelfDestructBeneficiaryUpdated(_beneficiary);
    |	}
  at IssuanceController.sol(142)

[33mWarning[0m for UnrestrictedWrite in contract 'ExternStateToken':
    |		onlyOwner
    |	{
  > |		initiationTime = now;
    |		selfDestructInitiated = true;
    |		emit SelfDestructInitiated(SELFDESTRUCT_DELAY);
  at IssuanceController.sol(155)

[33mWarning[0m for UnrestrictedWrite in contract 'ExternStateToken':
    |	{
    |		initiationTime = now;
  > |		selfDestructInitiated = true;
    |		emit SelfDestructInitiated(SELFDESTRUCT_DELAY);
    |	}
  at IssuanceController.sol(156)

[33mWarning[0m for UnrestrictedWrite in contract 'ExternStateToken':
    |		onlyOwner
    |	{
  > |		initiationTime = 0;
    |		selfDestructInitiated = false;
    |		emit SelfDestructTerminated();
  at IssuanceController.sol(168)

[33mWarning[0m for UnrestrictedWrite in contract 'ExternStateToken':
    |	{
    |		initiationTime = 0;
  > |		selfDestructInitiated = false;
    |		emit SelfDestructTerminated();
    |	}
  at IssuanceController.sol(169)

[33mWarning[0m for UnrestrictedWrite in contract 'ExternStateToken':
    |        onlyOwner
    |    {
  > |        proxy = Proxy(_proxy);
    |        emit ProxyUpdated(_proxy);
    |    }
  at IssuanceController.sol(809)

[33mWarning[0m for UnrestrictedWrite in contract 'ExternStateToken':
    |        onlyProxy
    |    {
  > |        messageSender = sender;
    |    }
    |
  at IssuanceController.sol(817)

[33mWarning[0m for UnrestrictedWrite in contract 'ExternStateToken':
    |        optionalProxy_onlyOwner
    |    {
  > |        tokenState = _tokenState;
    |        emitTokenStateUpdated(_tokenState);
    |    }
  at IssuanceController.sol(981)

[31mViolation[0m for RepeatedCall in contract 'FeeToken':
    |        /* Safe subtraction ensures an exception is thrown if the balance is insufficient. */
    |        tokenState.setBalanceOf(FEE_ADDRESS, safeSub(tokenState.balanceOf(FEE_ADDRESS), value));
  > |        tokenState.setBalanceOf(account, safeAdd(tokenState.balanceOf(account), value));
    |
    |        emitFeesWithdrawn(account, value);
  at IssuanceController.sol(1368)

[33mWarning[0m for UnrestrictedWrite in contract 'FeeToken':
    |        onlyOwner
    |    {
  > |        nominatedOwner = _owner;
    |        emit OwnerNominated(_owner);
    |    }
  at IssuanceController.sol(59)

[33mWarning[0m for UnrestrictedWrite in contract 'FeeToken':
    |        require(msg.sender == nominatedOwner, "You must be nominated before you can accept ownership");
    |        emit OwnerChanged(owner, nominatedOwner);
  > |        owner = nominatedOwner;
    |        nominatedOwner = address(0);
    |    }
  at IssuanceController.sol(71)

[33mWarning[0m for UnrestrictedWrite in contract 'FeeToken':
    |        emit OwnerChanged(owner, nominatedOwner);
    |        owner = nominatedOwner;
  > |        nominatedOwner = address(0);
    |    }
    |
  at IssuanceController.sol(72)

[33mWarning[0m for UnrestrictedWrite in contract 'FeeToken':
    |	{
    |		require(_beneficiary != address(0), "Beneficiary must not be the zero address");
  > |		selfDestructBeneficiary = _beneficiary;
    |		emit SelfDestructBeneficiaryUpdated(_beneficiary);
    |	}
  at IssuanceController.sol(142)

[33mWarning[0m for UnrestrictedWrite in contract 'FeeToken':
    |		onlyOwner
    |	{
  > |		initiationTime = now;
    |		selfDestructInitiated = true;
    |		emit SelfDestructInitiated(SELFDESTRUCT_DELAY);
  at IssuanceController.sol(155)

[33mWarning[0m for UnrestrictedWrite in contract 'FeeToken':
    |	{
    |		initiationTime = now;
  > |		selfDestructInitiated = true;
    |		emit SelfDestructInitiated(SELFDESTRUCT_DELAY);
    |	}
  at IssuanceController.sol(156)

[33mWarning[0m for UnrestrictedWrite in contract 'FeeToken':
    |		onlyOwner
    |	{
  > |		initiationTime = 0;
    |		selfDestructInitiated = false;
    |		emit SelfDestructTerminated();
  at IssuanceController.sol(168)

[33mWarning[0m for UnrestrictedWrite in contract 'FeeToken':
    |	{
    |		initiationTime = 0;
  > |		selfDestructInitiated = false;
    |		emit SelfDestructTerminated();
    |	}
  at IssuanceController.sol(169)

[33mWarning[0m for UnrestrictedWrite in contract 'FeeToken':
    |        onlyOwner
    |    {
  > |        proxy = Proxy(_proxy);
    |        emit ProxyUpdated(_proxy);
    |    }
  at IssuanceController.sol(809)

[33mWarning[0m for UnrestrictedWrite in contract 'FeeToken':
    |        onlyProxy
    |    {
  > |        messageSender = sender;
    |    }
    |
  at IssuanceController.sol(817)

[33mWarning[0m for UnrestrictedWrite in contract 'FeeToken':
    |        optionalProxy_onlyOwner
    |    {
  > |        tokenState = _tokenState;
    |        emitTokenStateUpdated(_tokenState);
    |    }
  at IssuanceController.sol(981)

[33mWarning[0m for UnrestrictedWrite in contract 'FeeToken':
    |    {
    |        require(_transferFeeRate <= MAX_TRANSFER_FEE_RATE, "Transfer fee rate must be below MAX_TRANSFER_FEE_RATE");
  > |        transferFeeRate = _transferFeeRate;
    |        emitTransferFeeRateUpdated(_transferFeeRate);
    |    }
  at IssuanceController.sol(1191)

[33mWarning[0m for UnrestrictedWrite in contract 'FeeToken':
    |        optionalProxy_onlyOwner
    |    {
  > |        feeAuthority = _feeAuthority;
    |        emitFeeAuthorityUpdated(_feeAuthority);
    |    }
  at IssuanceController.sol(1203)

[31mViolation[0m for LockedEther in contract 'HavvenEscrow':
    | * @title A contract to hold escrowed havvens and free them at given schedules.
    | */
  > |contract HavvenEscrow is SafeDecimalMath, Owned, LimitedSetup(8 weeks) {
    |    /* The corresponding Havven contract. */
    |    Havven public havven;
  at IssuanceController.sol(1727)

[31mViolation[0m for RepeatedCall in contract 'HavvenEscrow':
    |        /* There must be enough balance in the contract to provide for the vesting entry. */
    |        totalVestedBalance = safeAdd(totalVestedBalance, quantity);
  > |        require(totalVestedBalance <= havven.balanceOf(this), "Must be enough balance in the contract to provide for the vesting entry");
    |
    |        /* Disallow arbitrarily long vesting schedules in light of the gas limit. */
  at IssuanceController.sol(1933)

[31mViolation[0m for RepeatedCall in contract 'HavvenEscrow':
    |            totalVestedBalance = safeSub(totalVestedBalance, total);
    |            totalVestedAccountBalance[msg.sender] = safeSub(totalVestedAccountBalance[msg.sender], total);
  > |            havven.transfer(msg.sender, total);
    |            emit Vested(msg.sender, now, total);
    |        }
  at IssuanceController.sol(1995)

[33mWarning[0m for UnrestrictedWrite in contract 'HavvenEscrow':
    | * @title A contract to hold escrowed havvens and free them at given schedules.
    | */
  > |contract HavvenEscrow is SafeDecimalMath, Owned, LimitedSetup(8 weeks) {
    |    /* The corresponding Havven contract. */
    |    Havven public havven;
  at IssuanceController.sol(1727)

[31mViolation[0m for RepeatedCall in contract 'IssuanceController':
    |    {
    |        // How many nomins would we receive after the transfer fee?
  > |        uint nominsReceived = nomin.amountReceived(amount);
    |
    |        // And what would that be worth in havvens based on the current price?
  at IssuanceController.sol(3255)

[33mWarning[0m for TODAmount in contract 'IssuanceController':
    |
    |        // Store the ETH in our funds wallet
  > |        fundsWallet.transfer(msg.value);
    |
    |        // Send the nomins.
  at IssuanceController.sol(3084)

[33mWarning[0m for TODAmount in contract 'IssuanceController':
    |
    |        // Store the ETH in our funds wallet
  > |        fundsWallet.transfer(msg.value);
    |
    |        // And send them the Havvens.
  at IssuanceController.sol(3129)

[31mViolation[0m for TODReceiver in contract 'IssuanceController':
    |
    |        // Store the ETH in our funds wallet
  > |        fundsWallet.transfer(msg.value);
    |
    |        // Send the nomins.
  at IssuanceController.sol(3084)

[31mViolation[0m for TODReceiver in contract 'IssuanceController':
    |
    |        // Store the ETH in our funds wallet
  > |        fundsWallet.transfer(msg.value);
    |
    |        // And send them the Havvens.
  at IssuanceController.sol(3129)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'IssuanceController':
    |
    |        // Store the ETH in our funds wallet
  > |        fundsWallet.transfer(msg.value);
    |
    |        // Send the nomins.
  at IssuanceController.sol(3084)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'IssuanceController':
    |
    |        // Store the ETH in our funds wallet
  > |        fundsWallet.transfer(msg.value);
    |
    |        // And send them the Havvens.
  at IssuanceController.sol(3129)

[33mWarning[0m for UnrestrictedWrite in contract 'IssuanceController':
    |        onlyOwner
    |    {
  > |        nominatedOwner = _owner;
    |        emit OwnerNominated(_owner);
    |    }
  at IssuanceController.sol(59)

[33mWarning[0m for UnrestrictedWrite in contract 'IssuanceController':
    |        require(msg.sender == nominatedOwner, "You must be nominated before you can accept ownership");
    |        emit OwnerChanged(owner, nominatedOwner);
  > |        owner = nominatedOwner;
    |        nominatedOwner = address(0);
    |    }
  at IssuanceController.sol(71)

[33mWarning[0m for UnrestrictedWrite in contract 'IssuanceController':
    |        emit OwnerChanged(owner, nominatedOwner);
    |        owner = nominatedOwner;
  > |        nominatedOwner = address(0);
    |    }
    |
  at IssuanceController.sol(72)

[33mWarning[0m for UnrestrictedWrite in contract 'IssuanceController':
    |	{
    |		require(_beneficiary != address(0), "Beneficiary must not be the zero address");
  > |		selfDestructBeneficiary = _beneficiary;
    |		emit SelfDestructBeneficiaryUpdated(_beneficiary);
    |	}
  at IssuanceController.sol(142)

[33mWarning[0m for UnrestrictedWrite in contract 'IssuanceController':
    |		onlyOwner
    |	{
  > |		initiationTime = now;
    |		selfDestructInitiated = true;
    |		emit SelfDestructInitiated(SELFDESTRUCT_DELAY);
  at IssuanceController.sol(155)

[33mWarning[0m for UnrestrictedWrite in contract 'IssuanceController':
    |	{
    |		initiationTime = now;
  > |		selfDestructInitiated = true;
    |		emit SelfDestructInitiated(SELFDESTRUCT_DELAY);
    |	}
  at IssuanceController.sol(156)

[33mWarning[0m for UnrestrictedWrite in contract 'IssuanceController':
    |		onlyOwner
    |	{
  > |		initiationTime = 0;
    |		selfDestructInitiated = false;
    |		emit SelfDestructTerminated();
  at IssuanceController.sol(168)

[33mWarning[0m for UnrestrictedWrite in contract 'IssuanceController':
    |	{
    |		initiationTime = 0;
  > |		selfDestructInitiated = false;
    |		emit SelfDestructTerminated();
    |	}
  at IssuanceController.sol(169)

[33mWarning[0m for UnrestrictedWrite in contract 'IssuanceController':
    |
    |        // Set our paused state.
  > |        paused = _paused;
    |        
    |        // If applicable, set the last pause time.
  at IssuanceController.sol(252)

[33mWarning[0m for UnrestrictedWrite in contract 'IssuanceController':
    |        // If applicable, set the last pause time.
    |        if (paused) {
  > |            lastPauseTime = now;
    |        }
    |
  at IssuanceController.sol(256)

[33mWarning[0m for UnrestrictedWrite in contract 'IssuanceController':
    |        onlyOwner
    |    {
  > |        fundsWallet = _fundsWallet;
    |        emit FundsWalletUpdated(fundsWallet);
    |    }
  at IssuanceController.sol(2984)

[33mWarning[0m for UnrestrictedWrite in contract 'IssuanceController':
    |        onlyOwner
    |    {
  > |        oracle = _oracle;
    |        emit OracleUpdated(oracle);
    |    }
  at IssuanceController.sol(2996)

[33mWarning[0m for UnrestrictedWrite in contract 'IssuanceController':
    |        onlyOwner
    |    {
  > |        nomin = _nomin;
    |        emit NominUpdated(_nomin);
    |    }
  at IssuanceController.sol(3008)

[33mWarning[0m for UnrestrictedWrite in contract 'IssuanceController':
    |        onlyOwner
    |    {
  > |        havven = _havven;
    |        emit HavvenUpdated(_havven);
    |    }
  at IssuanceController.sol(3020)

[33mWarning[0m for UnrestrictedWrite in contract 'IssuanceController':
    |        onlyOwner 
    |    {
  > |        priceStalePeriod = _time;
    |        emit PriceStalePeriodUpdated(priceStalePeriod);
    |    }
  at IssuanceController.sol(3032)

[33mWarning[0m for UnrestrictedWrite in contract 'IssuanceController':
    |            "Time sent must be bigger than the last update, and must be less than now + ORACLE_FUTURE_LIMIT");
    |
  > |        usdToEthPrice = newEthPrice;
    |        usdToHavPrice = newHavvenPrice;
    |        lastPriceUpdateTime = timeSent;
  at IssuanceController.sol(3052)

[33mWarning[0m for UnrestrictedWrite in contract 'IssuanceController':
    |
    |        usdToEthPrice = newEthPrice;
  > |        usdToHavPrice = newHavvenPrice;
    |        lastPriceUpdateTime = timeSent;
    |
  at IssuanceController.sol(3053)

[33mWarning[0m for UnrestrictedWrite in contract 'IssuanceController':
    |        usdToEthPrice = newEthPrice;
    |        usdToHavPrice = newHavvenPrice;
  > |        lastPriceUpdateTime = timeSent;
    |
    |        emit PricesUpdated(usdToEthPrice, usdToHavPrice, lastPriceUpdateTime);
  at IssuanceController.sol(3054)

[31mViolation[0m for MissingInputValidation in contract 'Owned':
    |     * @dev Only the current owner may nominate a new owner.
    |     */
  > |    function nominateNewOwner(address _owner)
    |        external
    |        onlyOwner
  at IssuanceController.sol(55)

[33mWarning[0m for UnrestrictedWrite in contract 'Owned':
    |        onlyOwner
    |    {
  > |        nominatedOwner = _owner;
    |        emit OwnerNominated(_owner);
    |    }
  at IssuanceController.sol(59)

[33mWarning[0m for UnrestrictedWrite in contract 'Owned':
    |        require(msg.sender == nominatedOwner, "You must be nominated before you can accept ownership");
    |        emit OwnerChanged(owner, nominatedOwner);
  > |        owner = nominatedOwner;
    |        nominatedOwner = address(0);
    |    }
  at IssuanceController.sol(71)

[33mWarning[0m for UnrestrictedWrite in contract 'Owned':
    |        emit OwnerChanged(owner, nominatedOwner);
    |        owner = nominatedOwner;
  > |        nominatedOwner = address(0);
    |    }
    |
  at IssuanceController.sol(72)

[31mViolation[0m for MissingInputValidation in contract 'Pausable':
    |     * @dev Only the current owner may nominate a new owner.
    |     */
  > |    function nominateNewOwner(address _owner)
    |        external
    |        onlyOwner
  at IssuanceController.sol(55)

[33mWarning[0m for UnrestrictedWrite in contract 'Pausable':
    |        onlyOwner
    |    {
  > |        nominatedOwner = _owner;
    |        emit OwnerNominated(_owner);
    |    }
  at IssuanceController.sol(59)

[33mWarning[0m for UnrestrictedWrite in contract 'Pausable':
    |        require(msg.sender == nominatedOwner, "You must be nominated before you can accept ownership");
    |        emit OwnerChanged(owner, nominatedOwner);
  > |        owner = nominatedOwner;
    |        nominatedOwner = address(0);
    |    }
  at IssuanceController.sol(71)

[33mWarning[0m for UnrestrictedWrite in contract 'Pausable':
    |        emit OwnerChanged(owner, nominatedOwner);
    |        owner = nominatedOwner;
  > |        nominatedOwner = address(0);
    |    }
    |
  at IssuanceController.sol(72)

[33mWarning[0m for UnrestrictedWrite in contract 'Pausable':
    |
    |        // Set our paused state.
  > |        paused = _paused;
    |        
    |        // If applicable, set the last pause time.
  at IssuanceController.sol(252)

[33mWarning[0m for UnrestrictedWrite in contract 'Pausable':
    |        // If applicable, set the last pause time.
    |        if (paused) {
  > |            lastPauseTime = now;
    |        }
    |
  at IssuanceController.sol(256)

[31mViolation[0m for MissingInputValidation in contract 'Proxy':
    |     * @dev Only the current owner may nominate a new owner.
    |     */
  > |    function nominateNewOwner(address _owner)
    |        external
    |        onlyOwner
  at IssuanceController.sol(55)

[31mViolation[0m for MissingInputValidation in contract 'Proxy':
    |    {}
    |
  > |    function setTarget(Proxyable _target)
    |        external
    |        onlyOwner
  at IssuanceController.sol(667)

[31mViolation[0m for MissingInputValidation in contract 'Proxy':
    |    }
    |
  > |    function setUseDELEGATECALL(bool value) 
    |        external
    |        onlyOwner
  at IssuanceController.sol(675)

[31mViolation[0m for MissingInputValidation in contract 'Proxy':
    |    }
    |
  > |    function _emit(bytes callData, uint numTopics,
    |                   bytes32 topic1, bytes32 topic2,
    |                   bytes32 topic3, bytes32 topic4)
  at IssuanceController.sol(682)

[33mWarning[0m for UnrestrictedWrite in contract 'Proxy':
    |        onlyOwner
    |    {
  > |        nominatedOwner = _owner;
    |        emit OwnerNominated(_owner);
    |    }
  at IssuanceController.sol(59)

[33mWarning[0m for UnrestrictedWrite in contract 'Proxy':
    |        require(msg.sender == nominatedOwner, "You must be nominated before you can accept ownership");
    |        emit OwnerChanged(owner, nominatedOwner);
  > |        owner = nominatedOwner;
    |        nominatedOwner = address(0);
    |    }
  at IssuanceController.sol(71)

[33mWarning[0m for UnrestrictedWrite in contract 'Proxy':
    |        emit OwnerChanged(owner, nominatedOwner);
    |        owner = nominatedOwner;
  > |        nominatedOwner = address(0);
    |    }
    |
  at IssuanceController.sol(72)

[33mWarning[0m for UnrestrictedWrite in contract 'Proxy':
    |        onlyOwner
    |    {
  > |        target = _target;
    |        emit TargetUpdated(_target);
    |    }
  at IssuanceController.sol(671)

[33mWarning[0m for UnrestrictedWrite in contract 'Proxy':
    |        onlyOwner
    |    {
  > |        useDELEGATECALL = value;
    |    }
    |
  at IssuanceController.sol(679)

[31mViolation[0m for MissingInputValidation in contract 'Proxyable':
    |     * @dev Only the current owner may nominate a new owner.
    |     */
  > |    function nominateNewOwner(address _owner)
    |        external
    |        onlyOwner
  at IssuanceController.sol(55)

[31mViolation[0m for MissingInputValidation in contract 'Proxyable':
    |    }
    |
  > |    function setProxy(address _proxy)
    |        external
    |        onlyOwner
  at IssuanceController.sol(805)

[31mViolation[0m for MissingInputValidation in contract 'Proxyable':
    |    }
    |
  > |    function setMessageSender(address sender)
    |        external
    |        onlyProxy
  at IssuanceController.sol(813)

[33mWarning[0m for UnrestrictedWrite in contract 'Proxyable':
    |        onlyOwner
    |    {
  > |        nominatedOwner = _owner;
    |        emit OwnerNominated(_owner);
    |    }
  at IssuanceController.sol(59)

[33mWarning[0m for UnrestrictedWrite in contract 'Proxyable':
    |        require(msg.sender == nominatedOwner, "You must be nominated before you can accept ownership");
    |        emit OwnerChanged(owner, nominatedOwner);
  > |        owner = nominatedOwner;
    |        nominatedOwner = address(0);
    |    }
  at IssuanceController.sol(71)

[33mWarning[0m for UnrestrictedWrite in contract 'Proxyable':
    |        emit OwnerChanged(owner, nominatedOwner);
    |        owner = nominatedOwner;
  > |        nominatedOwner = address(0);
    |    }
    |
  at IssuanceController.sol(72)

[33mWarning[0m for UnrestrictedWrite in contract 'Proxyable':
    |        onlyOwner
    |    {
  > |        proxy = Proxy(_proxy);
    |        emit ProxyUpdated(_proxy);
    |    }
  at IssuanceController.sol(809)

[33mWarning[0m for UnrestrictedWrite in contract 'Proxyable':
    |        onlyProxy
    |    {
  > |        messageSender = sender;
    |    }
    |
  at IssuanceController.sol(817)

[33mWarning[0m for UnrestrictedWrite in contract 'SelfDestructible':
    |        onlyOwner
    |    {
  > |        nominatedOwner = _owner;
    |        emit OwnerNominated(_owner);
    |    }
  at IssuanceController.sol(59)

[33mWarning[0m for UnrestrictedWrite in contract 'SelfDestructible':
    |        require(msg.sender == nominatedOwner, "You must be nominated before you can accept ownership");
    |        emit OwnerChanged(owner, nominatedOwner);
  > |        owner = nominatedOwner;
    |        nominatedOwner = address(0);
    |    }
  at IssuanceController.sol(71)

[33mWarning[0m for UnrestrictedWrite in contract 'SelfDestructible':
    |        emit OwnerChanged(owner, nominatedOwner);
    |        owner = nominatedOwner;
  > |        nominatedOwner = address(0);
    |    }
    |
  at IssuanceController.sol(72)

[33mWarning[0m for UnrestrictedWrite in contract 'SelfDestructible':
    |	{
    |		require(_beneficiary != address(0), "Beneficiary must not be the zero address");
  > |		selfDestructBeneficiary = _beneficiary;
    |		emit SelfDestructBeneficiaryUpdated(_beneficiary);
    |	}
  at IssuanceController.sol(142)

[33mWarning[0m for UnrestrictedWrite in contract 'SelfDestructible':
    |		onlyOwner
    |	{
  > |		initiationTime = now;
    |		selfDestructInitiated = true;
    |		emit SelfDestructInitiated(SELFDESTRUCT_DELAY);
  at IssuanceController.sol(155)

[33mWarning[0m for UnrestrictedWrite in contract 'SelfDestructible':
    |	{
    |		initiationTime = now;
  > |		selfDestructInitiated = true;
    |		emit SelfDestructInitiated(SELFDESTRUCT_DELAY);
    |	}
  at IssuanceController.sol(156)

[33mWarning[0m for UnrestrictedWrite in contract 'SelfDestructible':
    |		onlyOwner
    |	{
  > |		initiationTime = 0;
    |		selfDestructInitiated = false;
    |		emit SelfDestructTerminated();
  at IssuanceController.sol(168)

[33mWarning[0m for UnrestrictedWrite in contract 'SelfDestructible':
    |	{
    |		initiationTime = 0;
  > |		selfDestructInitiated = false;
    |		emit SelfDestructTerminated();
    |	}
  at IssuanceController.sol(169)

[31mViolation[0m for MissingInputValidation in contract 'State':
    |     * @dev Only the current owner may nominate a new owner.
    |     */
  > |    function nominateNewOwner(address _owner)
    |        external
    |        onlyOwner
  at IssuanceController.sol(55)

[31mViolation[0m for MissingInputValidation in contract 'State':
    |
    |    // Change the associated contract to a new address
  > |    function setAssociatedContract(address _associatedContract)
    |        external
    |        onlyOwner
  at IssuanceController.sol(516)

[33mWarning[0m for UnrestrictedWrite in contract 'State':
    |        onlyOwner
    |    {
  > |        nominatedOwner = _owner;
    |        emit OwnerNominated(_owner);
    |    }
  at IssuanceController.sol(59)

[33mWarning[0m for UnrestrictedWrite in contract 'State':
    |        require(msg.sender == nominatedOwner, "You must be nominated before you can accept ownership");
    |        emit OwnerChanged(owner, nominatedOwner);
  > |        owner = nominatedOwner;
    |        nominatedOwner = address(0);
    |    }
  at IssuanceController.sol(71)

[33mWarning[0m for UnrestrictedWrite in contract 'State':
    |        emit OwnerChanged(owner, nominatedOwner);
    |        owner = nominatedOwner;
  > |        nominatedOwner = address(0);
    |    }
    |
  at IssuanceController.sol(72)

[33mWarning[0m for UnrestrictedWrite in contract 'State':
    |        onlyOwner
    |    {
  > |        associatedContract = _associatedContract;
    |        emit AssociatedContractUpdated(_associatedContract);
    |    }
  at IssuanceController.sol(520)

[31mViolation[0m for MissingInputValidation in contract 'TokenState':
    |     * @dev Only the current owner may nominate a new owner.
    |     */
  > |    function nominateNewOwner(address _owner)
    |        external
    |        onlyOwner
  at IssuanceController.sol(55)

[31mViolation[0m for MissingInputValidation in contract 'TokenState':
    |
    |    // Change the associated contract to a new address
  > |    function setAssociatedContract(address _associatedContract)
    |        external
    |        onlyOwner
  at IssuanceController.sol(516)

[31mViolation[0m for MissingInputValidation in contract 'TokenState':
    |
    |    /* ERC20 fields. */
  > |    mapping(address => uint) public balanceOf;
    |    mapping(address => mapping(address => uint)) public allowance;
    |
  at IssuanceController.sol(580)

[31mViolation[0m for MissingInputValidation in contract 'TokenState':
    |    /* ERC20 fields. */
    |    mapping(address => uint) public balanceOf;
  > |    mapping(address => mapping(address => uint)) public allowance;
    |
    |    /**
  at IssuanceController.sol(581)

[31mViolation[0m for MissingInputValidation in contract 'TokenState':
    |     * authorising party's behalf.
    |     */
  > |    function setAllowance(address tokenOwner, address spender, uint value)
    |        external
    |        onlyAssociatedContract
  at IssuanceController.sol(603)

[31mViolation[0m for MissingInputValidation in contract 'TokenState':
    |     * @param value The new balance of the given account.
    |     */
  > |    function setBalanceOf(address account, uint value)
    |        external
    |        onlyAssociatedContract
  at IssuanceController.sol(616)

[33mWarning[0m for UnrestrictedWrite in contract 'TokenState':
    |        onlyOwner
    |    {
  > |        nominatedOwner = _owner;
    |        emit OwnerNominated(_owner);
    |    }
  at IssuanceController.sol(59)

[33mWarning[0m for UnrestrictedWrite in contract 'TokenState':
    |        require(msg.sender == nominatedOwner, "You must be nominated before you can accept ownership");
    |        emit OwnerChanged(owner, nominatedOwner);
  > |        owner = nominatedOwner;
    |        nominatedOwner = address(0);
    |    }
  at IssuanceController.sol(71)

[33mWarning[0m for UnrestrictedWrite in contract 'TokenState':
    |        emit OwnerChanged(owner, nominatedOwner);
    |        owner = nominatedOwner;
  > |        nominatedOwner = address(0);
    |    }
    |
  at IssuanceController.sol(72)

[33mWarning[0m for UnrestrictedWrite in contract 'TokenState':
    |        onlyOwner
    |    {
  > |        associatedContract = _associatedContract;
    |        emit AssociatedContractUpdated(_associatedContract);
    |    }
  at IssuanceController.sol(520)

[33mWarning[0m for UnrestrictedWrite in contract 'TokenState':
    |        onlyAssociatedContract
    |    {
  > |        allowance[tokenOwner][spender] = value;
    |    }
    |
  at IssuanceController.sol(607)

[33mWarning[0m for UnrestrictedWrite in contract 'TokenState':
    |        onlyAssociatedContract
    |    {
  > |        balanceOf[account] = value;
    |    }
    |}
  at IssuanceController.sol(620)

Processing contract: BATMO.sol:BATMO
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
java.io.IOException: Timeout for /tmp/binaries_souffle15949026418724730251/mustExplicit -j 8 -F /tmp/souffle-733d113a-55c7-4ba7-9112-dcb447b8b8ad -D /tmp/souffle-733d113a-55c7-4ba7-9112-dcb447b8b8ad_OUT
	at ch.securify.analysis.AbstractDataflow.runCommand(AbstractDataflow.java:277)
	at ch.securify.analysis.AbstractDataflow.initDataflow(AbstractDataflow.java:169)
	at ch.securify.analysis.MustExplicitDataflow.<init>(MustExplicitDataflow.java:33)
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:33)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error in Securify
java.lang.RuntimeException
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:37)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error, skipping: BATMO.sol:BATMO
Processing contract: BATMO.sol:BATMODatasets
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: BATMO.sol:FOMOEvents
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: BATMO.sol:KeysCalc
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: BATMO.sol:NameFilter
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: BATMO.sol:OBOK
Processing contract: BATMO.sol:PlayerBookInterface
Processing contract: BATMO.sol:SafeMath
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: BigOne.sol:BigOne
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
java.io.IOException: Timeout for /tmp/binaries_souffle4762988524976572183/mustExplicit -j 8 -F /tmp/souffle-5085e87b-8a70-4c91-93fd-950873a7879e -D /tmp/souffle-5085e87b-8a70-4c91-93fd-950873a7879e_OUT
	at ch.securify.analysis.AbstractDataflow.runCommand(AbstractDataflow.java:277)
	at ch.securify.analysis.AbstractDataflow.initDataflow(AbstractDataflow.java:169)
	at ch.securify.analysis.MustExplicitDataflow.<init>(MustExplicitDataflow.java:33)
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:33)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error in Securify
java.lang.RuntimeException
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:37)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error, skipping: BigOne.sol:BigOne
Processing contract: BigOne.sol:BigOneData
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: BigOne.sol:BigOneEvents
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: BigOne.sol:NameFilter
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: BigOne.sol:SafeMath
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: BigOne.sol:UserDataManagerInterface
Processing contract: CAE4Dlong.sol:CAE4DKeysCalcLong
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: CAE4Dlong.sol:CAE4Ddatasets
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: CAE4Dlong.sol:CAE4Devents
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: CAE4Dlong.sol:CAE4Dlong
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
java.io.IOException: Timeout for /tmp/binaries_souffle14067669117593252219/mustExplicit -j 8 -F /tmp/souffle-8e7d5d0d-3700-46d6-8699-bb1ef34c86b6 -D /tmp/souffle-8e7d5d0d-3700-46d6-8699-bb1ef34c86b6_OUT
	at ch.securify.analysis.AbstractDataflow.runCommand(AbstractDataflow.java:277)
	at ch.securify.analysis.AbstractDataflow.initDataflow(AbstractDataflow.java:169)
	at ch.securify.analysis.MustExplicitDataflow.<init>(MustExplicitDataflow.java:33)
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:33)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error in Securify
java.lang.RuntimeException
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:37)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error, skipping: CAE4Dlong.sol:CAE4Dlong
Processing contract: CAE4Dlong.sol:JIincForwarderInterface
Processing contract: CAE4Dlong.sol:NameFilter
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: CAE4Dlong.sol:PlayerBookInterface
Processing contract: CAE4Dlong.sol:SafeMath
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: CAE4Dlong.sol:UintCompressor
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: CAE4Dlong.sol:modularLong
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: ChivesGarden.sol:BankInterfaceForForwarder
Processing contract: ChivesGarden.sol:ChivesBookInterface
Processing contract: ChivesGarden.sol:ChivesGarden
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
java.io.IOException: Timeout for /tmp/binaries_souffle13076022297383481816/mustExplicit -j 8 -F /tmp/souffle-8aec7e47-05d5-4eb8-a049-77ab7a5738b2 -D /tmp/souffle-8aec7e47-05d5-4eb8-a049-77ab7a5738b2_OUT
	at ch.securify.analysis.AbstractDataflow.runCommand(AbstractDataflow.java:277)
	at ch.securify.analysis.AbstractDataflow.initDataflow(AbstractDataflow.java:169)
	at ch.securify.analysis.MustExplicitDataflow.<init>(MustExplicitDataflow.java:33)
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:33)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error in Securify
java.lang.RuntimeException
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:37)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error, skipping: ChivesGarden.sol:ChivesGarden
Processing contract: ChivesGarden.sol:NameFilter
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: ChivesGarden.sol:RSEvents
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: ChivesGarden.sol:RSKeysCalc
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: ChivesGarden.sol:RSdatasets
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: ChivesGarden.sol:SafeMath
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: ChivesGarden.sol:modularRatScam
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: DogScam.sol:DogInterfaceForForwarder
Processing contract: DogScam.sol:DogScam
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
java.io.IOException: Timeout for /tmp/binaries_souffle2513377161572610216/mustExplicit -j 8 -F /tmp/souffle-f25ab921-8640-44fd-b6af-2b1e8deb2883 -D /tmp/souffle-f25ab921-8640-44fd-b6af-2b1e8deb2883_OUT
	at ch.securify.analysis.AbstractDataflow.runCommand(AbstractDataflow.java:277)
	at ch.securify.analysis.AbstractDataflow.initDataflow(AbstractDataflow.java:169)
	at ch.securify.analysis.MustExplicitDataflow.<init>(MustExplicitDataflow.java:33)
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:33)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error in Securify
java.lang.RuntimeException
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:37)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error, skipping: DogScam.sol:DogScam
Processing contract: DogScam.sol:LDEvents
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: DogScam.sol:LDKeysCalc
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: DogScam.sol:LDdatasets
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: DogScam.sol:NameFilter
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: DogScam.sol:PlayerBookInterface
Processing contract: DogScam.sol:SafeMath
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: DogScam.sol:modularDogScam
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: Duang8.sol:Duang8
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
java.io.IOException: Timeout for /tmp/binaries_souffle17904766375535987442/mustExplicit -j 8 -F /tmp/souffle-2a646ab7-84be-46ee-b7e4-1607f036e540 -D /tmp/souffle-2a646ab7-84be-46ee-b7e4-1607f036e540_OUT
	at ch.securify.analysis.AbstractDataflow.runCommand(AbstractDataflow.java:277)
	at ch.securify.analysis.AbstractDataflow.initDataflow(AbstractDataflow.java:169)
	at ch.securify.analysis.MustExplicitDataflow.<init>(MustExplicitDataflow.java:33)
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:33)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error in Securify
java.lang.RuntimeException
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:37)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error, skipping: Duang8.sol:Duang8
Processing contract: Duang8.sol:F3DKeysCalcShort
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: Duang8.sol:F3Ddatasets
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: Duang8.sol:F3Devents
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: Duang8.sol:NameFilter
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: Duang8.sol:PlayerBookInterface
Processing contract: Duang8.sol:SafeMath
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: Duang8.sol:modularShort
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: ESportsMainCrowdsale.sol:BasicToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: ESportsMainCrowdsale.sol:Crowdsale
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: ESportsMainCrowdsale.sol:ERC20
Processing contract: ESportsMainCrowdsale.sol:ERC20Basic
Processing contract: ESportsMainCrowdsale.sol:ESportsBonusProvider
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: ESportsMainCrowdsale.sol:ESportsConstants
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: ESportsMainCrowdsale.sol:ESportsFreezingStorage
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: ESportsMainCrowdsale.sol:ESportsMainCrowdsale
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
java.io.IOException: Timeout for /tmp/binaries_souffle10986314274393836655/mustExplicit -j 8 -F /tmp/souffle-d775c07e-5dfc-4221-a857-a553164836db -D /tmp/souffle-d775c07e-5dfc-4221-a857-a553164836db_OUT
	at ch.securify.analysis.AbstractDataflow.runCommand(AbstractDataflow.java:277)
	at ch.securify.analysis.AbstractDataflow.initDataflow(AbstractDataflow.java:169)
	at ch.securify.analysis.MustExplicitDataflow.<init>(MustExplicitDataflow.java:33)
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:33)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error in Securify
java.lang.RuntimeException
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:37)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error, skipping: ESportsMainCrowdsale.sol:ESportsMainCrowdsale
Processing contract: ESportsMainCrowdsale.sol:ESportsToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: ESportsMainCrowdsale.sol:FinalizableCrowdsale
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: ESportsMainCrowdsale.sol:MintableToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: ESportsMainCrowdsale.sol:Ownable
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: ESportsMainCrowdsale.sol:RefundVault
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: ESportsMainCrowdsale.sol:RefundableCrowdsale
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: ESportsMainCrowdsale.sol:SafeMath
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: ESportsMainCrowdsale.sol:StandardToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
[33mWarning[0m for UnrestrictedWrite in contract 'BasicToken':
    |        // SafeMath.sub will throw if there is not enough balance.
    |        balances[msg.sender] = balances[msg.sender].sub(_value);
  > |        balances[_to] = balances[_to].add(_value);
    |        Transfer(msg.sender, _to, _value);
    |        return true;
  at ESportsMainCrowdsale.sol(708)

[31mViolation[0m for RepeatedCall in contract 'Crowdsale':
    |     */
    |    function hasEnded() public constant returns (bool) {
  > |        return now > endTime || token.totalSupply() > hardCap.sub(getRate());
    |    }
    |
  at ESportsMainCrowdsale.sol(329)

[33mWarning[0m for TODReceiver in contract 'Crowdsale':
    |    // Override to create custom fund forwarding mechanisms
    |    function forwardFunds(uint amountWei) internal {
  > |        wallet.transfer(amountWei);
    |    }
    |
  at ESportsMainCrowdsale.sol(305)

[33mWarning[0m for UnrestrictedWrite in contract 'ESportsBonusProvider':
    |        require(newOwner != address(0));
    |        OwnershipTransferred(owner, newOwner);
  > |        owner = newOwner;
    |    }
    |}
  at ESportsMainCrowdsale.sol(72)

[33mWarning[0m for UnrestrictedWrite in contract 'ESportsBonusProvider':
    |        if (_totalSold < BONUS_THRESHOLD_ETR) {
    |            uint amountThresholdBonus = _amountTokens.div(10); // 2
  > |            investorBonuses[_buyer] = investorBonuses[_buyer].add(amountThresholdBonus); 
    |            bonus = bonus.add(amountThresholdBonus);
    |        }
  at ESportsMainCrowdsale.sol(634)

[33mWarning[0m for UnrestrictedWrite in contract 'ESportsBonusProvider':
    |
    |        uint amountBonusTokens = investorBonuses[_buyer];
  > |        investorBonuses[_buyer] = 0;
    |        require(token.transfer(_buyer, amountBonusTokens));
    |
  at ESportsMainCrowdsale.sol(646)

[33mWarning[0m for UnrestrictedWrite in contract 'ESportsFreezingStorage':
    |        require(newOwner != address(0));
    |        OwnershipTransferred(owner, newOwner);
  > |        owner = newOwner;
    |    }
    |}
  at ESportsMainCrowdsale.sol(72)

[31mViolation[0m for LockedEther in contract 'ESportsToken':
    |}
    |
  > |contract ESportsToken is ESportsConstants, MintableToken {
    |    using SafeMath for uint;
    |
  at ESportsMainCrowdsale.sol(851)

[31mViolation[0m for RepeatedCall in contract 'ESportsToken':
    |        // }
    |        for (uint x = 0; x < frozenStorages.length; x++) {
  > |            uint amount = frozenStorages[x].release(msg.sender);
    |            total = total.add(amount);
    |        }
  at ESportsMainCrowdsale.sol(939)

[33mWarning[0m for UnrestrictedWrite in contract 'ESportsToken':
    |        require(newOwner != address(0));
    |        OwnershipTransferred(owner, newOwner);
  > |        owner = newOwner;
    |    }
    |}
  at ESportsMainCrowdsale.sol(72)

[33mWarning[0m for UnrestrictedWrite in contract 'ESportsToken':
    |     */
    |    function finishMinting() onlyOwner returns (bool) {
  > |        mintingFinished = true;
    |        MintFinished();
    |        return true;
  at ESportsMainCrowdsale.sol(845)

[33mWarning[0m for UnrestrictedWrite in contract 'ESportsToken':
    |    
    |    function allowMoveTokens() onlyOwner {
  > |        paused = false;
    |    }
    |
  at ESportsMainCrowdsale.sol(881)

[31mViolation[0m for RepeatedCall in contract 'FinalizableCrowdsale':
    |     */
    |    function hasEnded() public constant returns (bool) {
  > |        return now > endTime || token.totalSupply() > hardCap.sub(getRate());
    |    }
    |
  at ESportsMainCrowdsale.sol(329)

[33mWarning[0m for TODReceiver in contract 'FinalizableCrowdsale':
    |    // Override to create custom fund forwarding mechanisms
    |    function forwardFunds(uint amountWei) internal {
  > |        wallet.transfer(amountWei);
    |    }
    |
  at ESportsMainCrowdsale.sol(305)

[33mWarning[0m for UnrestrictedWrite in contract 'FinalizableCrowdsale':
    |        require(newOwner != address(0));
    |        OwnershipTransferred(owner, newOwner);
  > |        owner = newOwner;
    |    }
    |}
  at ESportsMainCrowdsale.sol(72)

[33mWarning[0m for UnrestrictedWrite in contract 'MintableToken':
    |        require(newOwner != address(0));
    |        OwnershipTransferred(owner, newOwner);
  > |        owner = newOwner;
    |    }
    |}
  at ESportsMainCrowdsale.sol(72)

[33mWarning[0m for UnrestrictedWrite in contract 'MintableToken':
    |     */
    |    function finishMinting() onlyOwner returns (bool) {
  > |        mintingFinished = true;
    |        MintFinished();
    |        return true;
  at ESportsMainCrowdsale.sol(845)

[33mWarning[0m for UnrestrictedWrite in contract 'Ownable':
    |        require(newOwner != address(0));
    |        OwnershipTransferred(owner, newOwner);
  > |        owner = newOwner;
    |    }
    |}
  at ESportsMainCrowdsale.sol(72)

[31mViolation[0m for TODAmount in contract 'RefundVault':
    |        state = State.Closed;
    |        Closed();
  > |        wallet.transfer(this.balance);
    |    }
    |
  at ESportsMainCrowdsale.sol(146)

[33mWarning[0m for TODAmount in contract 'RefundVault':
    |        uint256 depositedValue = deposited[investor];
    |        deposited[investor] = 0;
  > |        investor.transfer(depositedValue);
    |        
    |        Refunded(investor, depositedValue);
  at ESportsMainCrowdsale.sol(160)

[31mViolation[0m for TODReceiver in contract 'RefundVault':
    |        state = State.Closed;
    |        Closed();
  > |        wallet.transfer(this.balance);
    |    }
    |
  at ESportsMainCrowdsale.sol(146)

[33mWarning[0m for UnrestrictedWrite in contract 'RefundVault':
    |        require(newOwner != address(0));
    |        OwnershipTransferred(owner, newOwner);
  > |        owner = newOwner;
    |    }
    |}
  at ESportsMainCrowdsale.sol(72)

[33mWarning[0m for UnrestrictedWrite in contract 'RefundVault':
    |    function deposit(address investor) onlyOwner payable {
    |        require(state == State.Active);
  > |        deposited[investor] = deposited[investor].add(msg.value);
    |    }
    |
  at ESportsMainCrowdsale.sol(139)

[33mWarning[0m for UnrestrictedWrite in contract 'RefundVault':
    |    function close() onlyOwner {
    |        require(state == State.Active);
  > |        state = State.Closed;
    |        Closed();
    |        wallet.transfer(this.balance);
  at ESportsMainCrowdsale.sol(144)

[33mWarning[0m for UnrestrictedWrite in contract 'RefundVault':
    |    function enableRefunds() onlyOwner {
    |        require(state == State.Active);
  > |        state = State.Refunding;
    |        RefundsEnabled();
    |    }
  at ESportsMainCrowdsale.sol(151)

[33mWarning[0m for UnrestrictedWrite in contract 'RefundVault':
    |
    |        uint256 depositedValue = deposited[investor];
  > |        deposited[investor] = 0;
    |        investor.transfer(depositedValue);
    |        
  at ESportsMainCrowdsale.sol(159)

[31mViolation[0m for RepeatedCall in contract 'RefundableCrowdsale':
    |     */
    |    function hasEnded() public constant returns (bool) {
  > |        return now > endTime || token.totalSupply() > hardCap.sub(getRate());
    |    }
    |
  at ESportsMainCrowdsale.sol(329)

[33mWarning[0m for TODReceiver in contract 'RefundableCrowdsale':
    |    function forwardFunds(uint amountWei) internal {
    |        if (goalReached()) {
  > |            wallet.transfer(amountWei);
    |        }
    |        else {
  at ESportsMainCrowdsale.sol(406)

[33mWarning[0m for TODReceiver in contract 'RefundableCrowdsale':
    |        }
    |        else {
  > |            vault.deposit.value(amountWei)(msg.sender);
    |        }
    |    }
  at ESportsMainCrowdsale.sol(409)

[33mWarning[0m for UnrestrictedWrite in contract 'RefundableCrowdsale':
    |        require(newOwner != address(0));
    |        OwnershipTransferred(owner, newOwner);
  > |        owner = newOwner;
    |    }
    |}
  at ESportsMainCrowdsale.sol(72)

[33mWarning[0m for UnrestrictedWrite in contract 'StandardToken':
    |        // SafeMath.sub will throw if there is not enough balance.
    |        balances[msg.sender] = balances[msg.sender].sub(_value);
  > |        balances[_to] = balances[_to].add(_value);
    |        Transfer(msg.sender, _to, _value);
    |        return true;
  at ESportsMainCrowdsale.sol(708)

[33mWarning[0m for UnrestrictedWrite in contract 'StandardToken':
    |        // require (_value <= _allowance);
    |
  > |        balances[_from] = balances[_from].sub(_value);
    |        balances[_to] = balances[_to].add(_value);
    |        allowed[_from][msg.sender] = _allowance.sub(_value);
  at ESportsMainCrowdsale.sol(748)

[33mWarning[0m for UnrestrictedWrite in contract 'StandardToken':
    |
    |        balances[_from] = balances[_from].sub(_value);
  > |        balances[_to] = balances[_to].add(_value);
    |        allowed[_from][msg.sender] = _allowance.sub(_value);
    |        Transfer(_from, _to, _value);
  at ESportsMainCrowdsale.sol(749)

Processing contract: ExitFraud.sol:ExitFraud
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
java.io.IOException: Timeout for /tmp/binaries_souffle15091767180692923715/mustExplicit -j 8 -F /tmp/souffle-b1b0a017-831e-4f4e-a5fd-e15633bda847 -D /tmp/souffle-b1b0a017-831e-4f4e-a5fd-e15633bda847_OUT
	at ch.securify.analysis.AbstractDataflow.runCommand(AbstractDataflow.java:277)
	at ch.securify.analysis.AbstractDataflow.initDataflow(AbstractDataflow.java:169)
	at ch.securify.analysis.MustExplicitDataflow.<init>(MustExplicitDataflow.java:33)
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:33)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error in Securify
java.lang.RuntimeException
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:37)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error, skipping: ExitFraud.sol:ExitFraud
Processing contract: ExitFraud.sol:F3DKeysCalcShort
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: ExitFraud.sol:F3Ddatasets
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: ExitFraud.sol:F3Devents
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: ExitFraud.sol:NameFilter
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: ExitFraud.sol:PlayerBookInterface
Processing contract: ExitFraud.sol:SafeMath
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: ExitFraud.sol:modularShort
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: F3DGame.sol:F3DGame
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
java.io.IOException: Timeout for /tmp/binaries_souffle9399790040039753894/mustExplicit -j 8 -F /tmp/souffle-2a6d028a-553b-4b1f-bc9e-6f070c74b9a7 -D /tmp/souffle-2a6d028a-553b-4b1f-bc9e-6f070c74b9a7_OUT
	at ch.securify.analysis.AbstractDataflow.runCommand(AbstractDataflow.java:277)
	at ch.securify.analysis.AbstractDataflow.initDataflow(AbstractDataflow.java:169)
	at ch.securify.analysis.MustExplicitDataflow.<init>(MustExplicitDataflow.java:33)
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:33)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error in Securify
java.lang.RuntimeException
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:37)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error, skipping: F3DGame.sol:F3DGame
Processing contract: F3DGame.sol:F3DKeysCalcShort
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: F3DGame.sol:F3Ddatasets
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: F3DGame.sol:F3Devents
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: F3DGame.sol:NameFilter
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: F3DGame.sol:PlayerBookInterface
Processing contract: F3DGame.sol:SafeMath
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: F3DGame.sol:modularShort
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: F3DGoQuick.sol:DiviesInterface
Processing contract: F3DGoQuick.sol:F3DGoQuick
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
java.io.IOException: Timeout for /tmp/binaries_souffle11657220083070038463/mustExplicit -j 8 -F /tmp/souffle-5e560206-eb64-4231-96e3-b9860aee75e1 -D /tmp/souffle-5e560206-eb64-4231-96e3-b9860aee75e1_OUT
	at ch.securify.analysis.AbstractDataflow.runCommand(AbstractDataflow.java:277)
	at ch.securify.analysis.AbstractDataflow.initDataflow(AbstractDataflow.java:169)
	at ch.securify.analysis.MustExplicitDataflow.<init>(MustExplicitDataflow.java:33)
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:33)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error in Securify
java.lang.RuntimeException
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:37)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error, skipping: F3DGoQuick.sol:F3DGoQuick
Processing contract: F3DGoQuick.sol:F3DKeysCalcFast
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: F3DGoQuick.sol:F3Ddatasets
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: F3DGoQuick.sol:F3Devents
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: F3DGoQuick.sol:JIincForwarderInterface
Processing contract: F3DGoQuick.sol:NameFilter
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: F3DGoQuick.sol:PlayerBookInterface
Processing contract: F3DGoQuick.sol:SafeMath
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: F3DShopQuick.sol:DiviesInterface
Processing contract: F3DShopQuick.sol:F3DKeysCalcFast
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: F3DShopQuick.sol:F3DShopQuick
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
java.io.IOException: Timeout for /tmp/binaries_souffle8600991392512506854/mustExplicit -j 8 -F /tmp/souffle-a2296ab7-7e96-46fd-8602-f3b0126e86a0 -D /tmp/souffle-a2296ab7-7e96-46fd-8602-f3b0126e86a0_OUT
	at ch.securify.analysis.AbstractDataflow.runCommand(AbstractDataflow.java:277)
	at ch.securify.analysis.AbstractDataflow.initDataflow(AbstractDataflow.java:169)
	at ch.securify.analysis.MustExplicitDataflow.<init>(MustExplicitDataflow.java:33)
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:33)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error in Securify
java.lang.RuntimeException
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:37)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error, skipping: F3DShopQuick.sol:F3DShopQuick
Processing contract: F3DShopQuick.sol:F3Ddatasets
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: F3DShopQuick.sol:F3Devents
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: F3DShopQuick.sol:JIincForwarderInterface
Processing contract: F3DShopQuick.sol:NameFilter
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: F3DShopQuick.sol:PlayerBookInterface
Processing contract: F3DShopQuick.sol:SafeMath
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: F4Kings.sol:F3DKeysCalcShort
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: F4Kings.sol:F3Ddatasets
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: F4Kings.sol:F3Devents
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: F4Kings.sol:F4Kings
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
java.io.IOException: Timeout for /tmp/binaries_souffle17832860787356491245/mustExplicit -j 8 -F /tmp/souffle-0dcc5849-edaf-4a05-b495-fafd73e03359 -D /tmp/souffle-0dcc5849-edaf-4a05-b495-fafd73e03359_OUT
	at ch.securify.analysis.AbstractDataflow.runCommand(AbstractDataflow.java:277)
	at ch.securify.analysis.AbstractDataflow.initDataflow(AbstractDataflow.java:169)
	at ch.securify.analysis.MustExplicitDataflow.<init>(MustExplicitDataflow.java:33)
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:33)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error in Securify
java.lang.RuntimeException
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:37)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error, skipping: F4Kings.sol:F4Kings
Processing contract: F4Kings.sol:NameFilter
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: F4Kings.sol:PlayerBookInterface
Processing contract: F4Kings.sol:SafeMath
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: F4Kings.sol:modularShort
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: F5D.sol:F3DKeysCalcShort
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: F5D.sol:F3Ddatasets
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: F5D.sol:F3Devents
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: F5D.sol:F5D
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
java.io.IOException: Timeout for /tmp/binaries_souffle14575759591942724459/mustExplicit -j 8 -F /tmp/souffle-aadd7acf-c59d-4744-9d84-e5eef39bf0a2 -D /tmp/souffle-aadd7acf-c59d-4744-9d84-e5eef39bf0a2_OUT
	at ch.securify.analysis.AbstractDataflow.runCommand(AbstractDataflow.java:277)
	at ch.securify.analysis.AbstractDataflow.initDataflow(AbstractDataflow.java:169)
	at ch.securify.analysis.MustExplicitDataflow.<init>(MustExplicitDataflow.java:33)
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:33)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error in Securify
java.lang.RuntimeException
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:37)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error, skipping: F5D.sol:F5D
Processing contract: F5D.sol:NameFilter
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: F5D.sol:PlayerBookInterface
Processing contract: F5D.sol:SafeMath
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: F5D.sol:modularShort
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: FJ3DLong.sol:F3DKeysCalcLong
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: FJ3DLong.sol:F3Ddatasets
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: FJ3DLong.sol:F3Devents
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: FJ3DLong.sol:F3DexternalSettingsInterface
Processing contract: FJ3DLong.sol:FJ3DLong
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
java.io.IOException: Timeout for /tmp/binaries_souffle7567094784549932121/mustExplicit -j 8 -F /tmp/souffle-8f6596f8-9332-4fd8-b30c-72e8938380bd -D /tmp/souffle-8f6596f8-9332-4fd8-b30c-72e8938380bd_OUT
	at ch.securify.analysis.AbstractDataflow.runCommand(AbstractDataflow.java:277)
	at ch.securify.analysis.AbstractDataflow.initDataflow(AbstractDataflow.java:169)
	at ch.securify.analysis.MustExplicitDataflow.<init>(MustExplicitDataflow.java:33)
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:33)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error in Securify
java.lang.RuntimeException
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:37)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error, skipping: FJ3DLong.sol:FJ3DLong
Processing contract: FJ3DLong.sol:NameFilter
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: FJ3DLong.sol:SafeMath
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: FJ3DLong.sol:modularLong
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: FJFoMo3DLong.sol:F3DKeysCalcLong
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: FJFoMo3DLong.sol:F3Ddatasets
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: FJFoMo3DLong.sol:F3Devents
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: FJFoMo3DLong.sol:F3DexternalSettingsInterface
Processing contract: FJFoMo3DLong.sol:FJFoMo3DLong
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
java.io.IOException: Timeout for /tmp/binaries_souffle8396176466161687840/mustExplicit -j 8 -F /tmp/souffle-16688cfe-f6a7-40c5-8273-2151109dedfc -D /tmp/souffle-16688cfe-f6a7-40c5-8273-2151109dedfc_OUT
	at ch.securify.analysis.AbstractDataflow.runCommand(AbstractDataflow.java:277)
	at ch.securify.analysis.AbstractDataflow.initDataflow(AbstractDataflow.java:169)
	at ch.securify.analysis.MustExplicitDataflow.<init>(MustExplicitDataflow.java:33)
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:33)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error in Securify
java.lang.RuntimeException
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:37)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error, skipping: FJFoMo3DLong.sol:FJFoMo3DLong
Processing contract: FJFoMo3DLong.sol:NameFilter
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: FJFoMo3DLong.sol:SafeMath
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: FJFoMo3DLong.sol:modularLong
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: FOMOQuick.sol:F3DKeysCalcShort
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: FOMOQuick.sol:F3Ddatasets
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: FOMOQuick.sol:F3Devents
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: FOMOQuick.sol:FOMOQuick
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
java.io.IOException: Timeout for /tmp/binaries_souffle13457626870994101303/mustExplicit -j 8 -F /tmp/souffle-f4285c5e-a393-433b-9713-8c7208ea1215 -D /tmp/souffle-f4285c5e-a393-433b-9713-8c7208ea1215_OUT
	at ch.securify.analysis.AbstractDataflow.runCommand(AbstractDataflow.java:277)
	at ch.securify.analysis.AbstractDataflow.initDataflow(AbstractDataflow.java:169)
	at ch.securify.analysis.MustExplicitDataflow.<init>(MustExplicitDataflow.java:33)
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:33)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error in Securify
java.lang.RuntimeException
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:37)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error, skipping: FOMOQuick.sol:FOMOQuick
Processing contract: FOMOQuick.sol:NameFilter
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: FOMOQuick.sol:PlayerBookInterface
Processing contract: FOMOQuick.sol:SafeMath
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: FOMOQuick.sol:modularShort
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: FengJinFoMo3D.sol:F3DKeysCalcLong
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: FengJinFoMo3D.sol:F3Ddatasets
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: FengJinFoMo3D.sol:F3Devents
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: FengJinFoMo3D.sol:F3DexternalSettingsInterface
Processing contract: FengJinFoMo3D.sol:FengJinFoMo3D
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
java.io.IOException: Timeout for /tmp/binaries_souffle7705567158535928738/mustExplicit -j 8 -F /tmp/souffle-26cd0317-989c-454a-b93a-15b637bd2162 -D /tmp/souffle-26cd0317-989c-454a-b93a-15b637bd2162_OUT
	at ch.securify.analysis.AbstractDataflow.runCommand(AbstractDataflow.java:277)
	at ch.securify.analysis.AbstractDataflow.initDataflow(AbstractDataflow.java:169)
	at ch.securify.analysis.MustExplicitDataflow.<init>(MustExplicitDataflow.java:33)
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:33)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error in Securify
java.lang.RuntimeException
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:37)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error, skipping: FengJinFoMo3D.sol:FengJinFoMo3D
Processing contract: FengJinFoMo3D.sol:NameFilter
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: FengJinFoMo3D.sol:SafeMath
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: FengJinFoMo3D.sol:modularLong
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: FoMo3DFast.sol:F3DKeysCalcShort
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: FoMo3DFast.sol:F3Ddatasets
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: FoMo3DFast.sol:F3Devents
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: FoMo3DFast.sol:FoMo3DFAST
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
java.io.IOException: Timeout for /tmp/binaries_souffle2216311055019202518/mustExplicit -j 8 -F /tmp/souffle-dc18886c-bf79-45eb-948b-af13db2f55d4 -D /tmp/souffle-dc18886c-bf79-45eb-948b-af13db2f55d4_OUT
	at ch.securify.analysis.AbstractDataflow.runCommand(AbstractDataflow.java:277)
	at ch.securify.analysis.AbstractDataflow.initDataflow(AbstractDataflow.java:169)
	at ch.securify.analysis.MustExplicitDataflow.<init>(MustExplicitDataflow.java:33)
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:33)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error in Securify
java.lang.RuntimeException
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:37)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error, skipping: FoMo3DFast.sol:FoMo3DFAST
Processing contract: FoMo3DFast.sol:NameFilter
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: FoMo3DFast.sol:PlayerBookInterface
Processing contract: FoMo3DFast.sol:SafeMath
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: FoMo3DFast.sol:modularShort
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: FoMo3DLight.sol:F3DKeysCalcShort
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: FoMo3DLight.sol:F3Ddatasets
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: FoMo3DLight.sol:F3Devents
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: FoMo3DLight.sol:FoMo3DLight
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
java.io.IOException: Timeout for /tmp/binaries_souffle532280688284576424/mustExplicit -j 8 -F /tmp/souffle-b95be6eb-3d96-4e2c-a422-3b9c4c99f8d5 -D /tmp/souffle-b95be6eb-3d96-4e2c-a422-3b9c4c99f8d5_OUT
	at ch.securify.analysis.AbstractDataflow.runCommand(AbstractDataflow.java:277)
	at ch.securify.analysis.AbstractDataflow.initDataflow(AbstractDataflow.java:169)
	at ch.securify.analysis.MustExplicitDataflow.<init>(MustExplicitDataflow.java:33)
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:33)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error in Securify
java.lang.RuntimeException
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:37)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error, skipping: FoMo3DLight.sol:FoMo3DLight
Processing contract: FoMo3DLight.sol:NameFilter
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: FoMo3DLight.sol:PlayerBookInterface
Processing contract: FoMo3DLight.sol:SafeMath
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: FoMo3DLight.sol:modularShort
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: FoMo3DLightning.sol:F3DKeysCalcShort
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: FoMo3DLightning.sol:F3Ddatasets
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: FoMo3DLightning.sol:F3Devents
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: FoMo3DLightning.sol:FoMo3DLightning
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
java.io.IOException: Timeout for /tmp/binaries_souffle4166672435952954214/mustExplicit -j 8 -F /tmp/souffle-a2b3103e-c0d4-46ba-a041-bc887e1e4d05 -D /tmp/souffle-a2b3103e-c0d4-46ba-a041-bc887e1e4d05_OUT
	at ch.securify.analysis.AbstractDataflow.runCommand(AbstractDataflow.java:277)
	at ch.securify.analysis.AbstractDataflow.initDataflow(AbstractDataflow.java:169)
	at ch.securify.analysis.MustExplicitDataflow.<init>(MustExplicitDataflow.java:33)
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:33)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error in Securify
java.lang.RuntimeException
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:37)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error, skipping: FoMo3DLightning.sol:FoMo3DLightning
Processing contract: FoMo3DLightning.sol:NameFilter
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: FoMo3DLightning.sol:PlayerBookInterface
Processing contract: FoMo3DLightning.sol:SafeMath
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: FoMo3DLightning.sol:modularShort
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: FoMo3DPlus.sol:F3DKeysCalcShort
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: FoMo3DPlus.sol:F3Ddatasets
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: FoMo3DPlus.sol:F3Devents
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: FoMo3DPlus.sol:FoMo3DPlus
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
java.io.IOException: Timeout for /tmp/binaries_souffle11595592493565300571/mustExplicit -j 8 -F /tmp/souffle-fb26447e-4339-446d-8878-0d1a204f7b42 -D /tmp/souffle-fb26447e-4339-446d-8878-0d1a204f7b42_OUT
	at ch.securify.analysis.AbstractDataflow.runCommand(AbstractDataflow.java:277)
	at ch.securify.analysis.AbstractDataflow.initDataflow(AbstractDataflow.java:169)
	at ch.securify.analysis.MustExplicitDataflow.<init>(MustExplicitDataflow.java:33)
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:33)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error in Securify
java.lang.RuntimeException
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:37)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error, skipping: FoMo3DPlus.sol:FoMo3DPlus
Processing contract: FoMo3DPlus.sol:NameFilter
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: FoMo3DPlus.sol:PlayerBookInterface
Processing contract: FoMo3DPlus.sol:SafeMath
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: FoMo3DPlus.sol:modularPlus
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: FoMo3DUnlimited.sol:F3DKeysCalcShort
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: FoMo3DUnlimited.sol:F3Ddatasets
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: FoMo3DUnlimited.sol:F3Devents
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: FoMo3DUnlimited.sol:FoMo3DUnlimited
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
java.io.IOException: Timeout for /tmp/binaries_souffle3993267271653341079/mustExplicit -j 8 -F /tmp/souffle-2fa15dd1-eb41-40c5-8b57-d5079c5446b8 -D /tmp/souffle-2fa15dd1-eb41-40c5-8b57-d5079c5446b8_OUT
	at ch.securify.analysis.AbstractDataflow.runCommand(AbstractDataflow.java:277)
	at ch.securify.analysis.AbstractDataflow.initDataflow(AbstractDataflow.java:169)
	at ch.securify.analysis.MustExplicitDataflow.<init>(MustExplicitDataflow.java:33)
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:33)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error in Securify
java.lang.RuntimeException
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:37)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error, skipping: FoMo3DUnlimited.sol:FoMo3DUnlimited
Processing contract: FoMo3DUnlimited.sol:NameFilter
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: FoMo3DUnlimited.sol:PlayerBookInterface
Processing contract: FoMo3DUnlimited.sol:SafeMath
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: FoMo3DUnlimited.sol:modularShort
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: FoMo3DlongUnlimited.sol:F3DKeysCalcLong
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: FoMo3DlongUnlimited.sol:F3Ddatasets
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: FoMo3DlongUnlimited.sol:F3Devents
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: FoMo3DlongUnlimited.sol:F3DexternalSettingsInterface
Processing contract: FoMo3DlongUnlimited.sol:FoMo3DlongUnlimited
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
java.io.IOException: Timeout for /tmp/binaries_souffle5234559302174932608/mustExplicit -j 8 -F /tmp/souffle-0186dafa-2d01-48c0-9f66-2bbd85cb167a -D /tmp/souffle-0186dafa-2d01-48c0-9f66-2bbd85cb167a_OUT
	at ch.securify.analysis.AbstractDataflow.runCommand(AbstractDataflow.java:277)
	at ch.securify.analysis.AbstractDataflow.initDataflow(AbstractDataflow.java:169)
	at ch.securify.analysis.MustExplicitDataflow.<init>(MustExplicitDataflow.java:33)
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:33)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error in Securify
java.lang.RuntimeException
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:37)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error, skipping: FoMo3DlongUnlimited.sol:FoMo3DlongUnlimited
Processing contract: FoMo3DlongUnlimited.sol:FundForwarder
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: FoMo3DlongUnlimited.sol:FundForwarderInterface
Processing contract: FoMo3DlongUnlimited.sol:FundInterfaceForForwarder
Processing contract: FoMo3DlongUnlimited.sol:HourglassInterface
Processing contract: FoMo3DlongUnlimited.sol:MSFun
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: FoMo3DlongUnlimited.sol:ModularLong
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: FoMo3DlongUnlimited.sol:NameFilter
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: FoMo3DlongUnlimited.sol:PlayerBook
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: FoMo3DlongUnlimited.sol:PlayerBookInterface
Processing contract: FoMo3DlongUnlimited.sol:PlayerBookReceiverInterface
Processing contract: FoMo3DlongUnlimited.sol:SafeMath
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: FoMo3DlongUnlimited.sol:Team
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: FoMo3DlongUnlimited.sol:TeamInterface
Processing contract: FoMo3DlongUnlimited.sol:UintCompressor
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: FoMo3DlongUnlimited.sol:otherFoMo3D
[31mViolation[0m for MissingInputValidation in contract 'FundForwarder':
    |//    || || | |(_||  _\(/_ | |_||_)  .  (this only runs once ever)
    |//==============================|===============================================
  > |    function setup(address _firstCorpBank)
    |        external
    |    {
  at FoMo3DlongUnlimited.sol(914)

[33mWarning[0m for TODAmount in contract 'FundForwarder':
    |        require(needsBank_ == false, "Forwarder Deposit failed - no registered bank");
    |        //wallet.transfer(toFund);
  > |        if (currentCorpBank_.deposit.value(msg.value)(msg.sender) == true)
    |            return(true);
    |        else
  at FoMo3DlongUnlimited.sol(846)

[31mViolation[0m for TODReceiver in contract 'FundForwarder':
    |        require(needsBank_ == false, "Forwarder Deposit failed - no registered bank");
    |        //wallet.transfer(toFund);
  > |        if (currentCorpBank_.deposit.value(msg.value)(msg.sender) == true)
    |            return(true);
    |        else
  at FoMo3DlongUnlimited.sol(846)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'FundForwarder':
    |        require(needsBank_ == false, "Forwarder Deposit failed - no registered bank");
    |        //wallet.transfer(toFund);
  > |        if (currentCorpBank_.deposit.value(msg.value)(msg.sender) == true)
    |            return(true);
    |        else
  at FoMo3DlongUnlimited.sol(846)

[31mViolation[0m for UnrestrictedWrite in contract 'FundForwarder':
    |    {
    |        require(needsBank_ == true, "Forwarder setup failed - corp bank already registered");
  > |        currentCorpBank_ = FundInterfaceForForwarder(_firstCorpBank);
    |        needsBank_ = false;
    |    }
  at FoMo3DlongUnlimited.sol(918)

[31mViolation[0m for UnrestrictedWrite in contract 'FundForwarder':
    |        require(needsBank_ == true, "Forwarder setup failed - corp bank already registered");
    |        currentCorpBank_ = FundInterfaceForForwarder(_firstCorpBank);
  > |        needsBank_ = false;
    |    }
    |}
  at FoMo3DlongUnlimited.sol(919)

[33mWarning[0m for UnrestrictedWrite in contract 'FundForwarder':
    |        {
    |            // save our new corp bank address
  > |            newCorpBank_ = _newCorpBank;
    |            return (true);
    |        } else 
  at FoMo3DlongUnlimited.sol(875)

[33mWarning[0m for UnrestrictedWrite in contract 'FundForwarder':
    |        
    |        // erase stored new corp bank address;
  > |        newCorpBank_ = address(0x0);
    |        
    |        return (true);
  at FoMo3DlongUnlimited.sol(890)

[33mWarning[0m for UnrestrictedWrite in contract 'FundForwarder':
    |
    |        // update corp bank address        
  > |        currentCorpBank_ = (FundInterfaceForForwarder(newCorpBank_));
    |        
    |        // erase new corp bank address
  at FoMo3DlongUnlimited.sol(903)

[33mWarning[0m for UnrestrictedWrite in contract 'FundForwarder':
    |        
    |        // erase new corp bank address
  > |        newCorpBank_ = address(0x0);
    |        
    |        return (true);
  at FoMo3DlongUnlimited.sol(906)

[33mWarning[0m for LockedEther in contract 'PlayerBook':
    |
    |
  > |contract PlayerBook {
    |    using NameFilter for string;
    |    using SafeMath for uint256;
  at FoMo3DlongUnlimited.sol(926)

[31mViolation[0m for MissingInputValidation in contract 'PlayerBook':
    |    function multiSigDev(bytes32 _whatFunction) private returns (bool) {return(MSFun.multiSig(msData, TeamJust.requiredDevSignatures(), _whatFunction));}
    |    function deleteProposal(bytes32 _whatFunction) private {MSFun.deleteProposal(msData, _whatFunction);}
  > |    function deleteAnyProposal(bytes32 _whatFunction) onlyDevs() public {MSFun.deleteProposal(msData, _whatFunction);}
    |    function checkData(bytes32 _whatFunction) onlyDevs() public view returns(bytes32, uint256) {return(MSFun.checkMsgData(msData, _whatFunction), MSFun.checkCount(msData, _whatFunction));}
    |    function checkSignersByAddress(bytes32 _whatFunction, uint256 _signerA, uint256 _signerB, uint256 _signerC) onlyDevs() public view returns(address, address, address) {return(MSFun.checkSigner(msData, _whatFunction, _signerA), MSFun.checkSigner(msData, _whatFunction, _signerB), MSFun.checkSigner(msData, _whatFunction, _signerC));}
  at FoMo3DlongUnlimited.sol(941)

[31mViolation[0m for MissingInputValidation in contract 'PlayerBook':
    |    function deleteProposal(bytes32 _whatFunction) private {MSFun.deleteProposal(msData, _whatFunction);}
    |    function deleteAnyProposal(bytes32 _whatFunction) onlyDevs() public {MSFun.deleteProposal(msData, _whatFunction);}
  > |    function checkData(bytes32 _whatFunction) onlyDevs() public view returns(bytes32, uint256) {return(MSFun.checkMsgData(msData, _whatFunction), MSFun.checkCount(msData, _whatFunction));}
    |    function checkSignersByAddress(bytes32 _whatFunction, uint256 _signerA, uint256 _signerB, uint256 _signerC) onlyDevs() public view returns(address, address, address) {return(MSFun.checkSigner(msData, _whatFunction, _signerA), MSFun.checkSigner(msData, _whatFunction, _signerB), MSFun.checkSigner(msData, _whatFunction, _signerC));}
    |    function checkSignersByName(bytes32 _whatFunction, uint256 _signerA, uint256 _signerB, uint256 _signerC) onlyDevs() public view returns(bytes32, bytes32, bytes32) {return(TeamJust.adminName(MSFun.checkSigner(msData, _whatFunction, _signerA)), TeamJust.adminName(MSFun.checkSigner(msData, _whatFunction, _signerB)), TeamJust.adminName(MSFun.checkSigner(msData, _whatFunction, _signerC)));}
  at FoMo3DlongUnlimited.sol(942)

[31mViolation[0m for MissingInputValidation in contract 'PlayerBook':
    |    function deleteAnyProposal(bytes32 _whatFunction) onlyDevs() public {MSFun.deleteProposal(msData, _whatFunction);}
    |    function checkData(bytes32 _whatFunction) onlyDevs() public view returns(bytes32, uint256) {return(MSFun.checkMsgData(msData, _whatFunction), MSFun.checkCount(msData, _whatFunction));}
  > |    function checkSignersByAddress(bytes32 _whatFunction, uint256 _signerA, uint256 _signerB, uint256 _signerC) onlyDevs() public view returns(address, address, address) {return(MSFun.checkSigner(msData, _whatFunction, _signerA), MSFun.checkSigner(msData, _whatFunction, _signerB), MSFun.checkSigner(msData, _whatFunction, _signerC));}
    |    function checkSignersByName(bytes32 _whatFunction, uint256 _signerA, uint256 _signerB, uint256 _signerC) onlyDevs() public view returns(bytes32, bytes32, bytes32) {return(TeamJust.adminName(MSFun.checkSigner(msData, _whatFunction, _signerA)), TeamJust.adminName(MSFun.checkSigner(msData, _whatFunction, _signerB)), TeamJust.adminName(MSFun.checkSigner(msData, _whatFunction, _signerC)));}
    |//==============================================================================
  at FoMo3DlongUnlimited.sol(943)

[31mViolation[0m for MissingInputValidation in contract 'PlayerBook':
    |    function checkData(bytes32 _whatFunction) onlyDevs() public view returns(bytes32, uint256) {return(MSFun.checkMsgData(msData, _whatFunction), MSFun.checkCount(msData, _whatFunction));}
    |    function checkSignersByAddress(bytes32 _whatFunction, uint256 _signerA, uint256 _signerB, uint256 _signerC) onlyDevs() public view returns(address, address, address) {return(MSFun.checkSigner(msData, _whatFunction, _signerA), MSFun.checkSigner(msData, _whatFunction, _signerB), MSFun.checkSigner(msData, _whatFunction, _signerC));}
  > |    function checkSignersByName(bytes32 _whatFunction, uint256 _signerA, uint256 _signerB, uint256 _signerC) onlyDevs() public view returns(bytes32, bytes32, bytes32) {return(TeamJust.adminName(MSFun.checkSigner(msData, _whatFunction, _signerA)), TeamJust.adminName(MSFun.checkSigner(msData, _whatFunction, _signerB)), TeamJust.adminName(MSFun.checkSigner(msData, _whatFunction, _signerC)));}
    |//==============================================================================
    |//     _| _ _|_ _    _ _ _|_    _   .
  at FoMo3DlongUnlimited.sol(944)

[31mViolation[0m for MissingInputValidation in contract 'PlayerBook':
    |
    |    // game 需要实现PlayerBookReceiverInterface的接口
  > |    mapping(uint256 => PlayerBookReceiverInterface) public games_;  // mapping of our game interfaces for sending your account info to games
    |    mapping(address => bytes32) public gameNames_;          // lookup a games name
    |    mapping(address => uint256) public gameIDs_;            // lokup a games ID
  at FoMo3DlongUnlimited.sol(952)

[31mViolation[0m for MissingInputValidation in contract 'PlayerBook':
    |    // game 需要实现PlayerBookReceiverInterface的接口
    |    mapping(uint256 => PlayerBookReceiverInterface) public games_;  // mapping of our game interfaces for sending your account info to games
  > |    mapping(address => bytes32) public gameNames_;          // lookup a games name
    |    mapping(address => uint256) public gameIDs_;            // lokup a games ID
    |    uint256 public gID_;        // total number of games
  at FoMo3DlongUnlimited.sol(953)

[31mViolation[0m for MissingInputValidation in contract 'PlayerBook':
    |    mapping(uint256 => PlayerBookReceiverInterface) public games_;  // mapping of our game interfaces for sending your account info to games
    |    mapping(address => bytes32) public gameNames_;          // lookup a games name
  > |    mapping(address => uint256) public gameIDs_;            // lokup a games ID
    |    uint256 public gID_;        // total number of games
    |    uint256 public pID_;        // total number of players
  at FoMo3DlongUnlimited.sol(954)

[31mViolation[0m for MissingInputValidation in contract 'PlayerBook':
    |    uint256 public gID_;        // total number of games
    |    uint256 public pID_;        // total number of players
  > |    mapping (address => uint256) public pIDxAddr_;          // (addr => pID) returns player id by address
    |    mapping (bytes32 => uint256) public pIDxName_;          // (name => pID) returns player id by name
    |    mapping (uint256 => Player) public plyr_;               // (pID => data) player data
  at FoMo3DlongUnlimited.sol(957)

[31mViolation[0m for MissingInputValidation in contract 'PlayerBook':
    |    uint256 public pID_;        // total number of players
    |    mapping (address => uint256) public pIDxAddr_;          // (addr => pID) returns player id by address
  > |    mapping (bytes32 => uint256) public pIDxName_;          // (name => pID) returns player id by name
    |    mapping (uint256 => Player) public plyr_;               // (pID => data) player data
    |    mapping (uint256 => mapping (bytes32 => bool)) public plyrNames_; // (pID => name => bool) list of names a player owns.  (used so you can change your display name amoungst any name you own)
  at FoMo3DlongUnlimited.sol(958)

[31mViolation[0m for MissingInputValidation in contract 'PlayerBook':
    |    mapping (address => uint256) public pIDxAddr_;          // (addr => pID) returns player id by address
    |    mapping (bytes32 => uint256) public pIDxName_;          // (name => pID) returns player id by name
  > |    mapping (uint256 => Player) public plyr_;               // (pID => data) player data
    |    mapping (uint256 => mapping (bytes32 => bool)) public plyrNames_; // (pID => name => bool) list of names a player owns.  (used so you can change your display name amoungst any name you own)
    |    mapping (uint256 => mapping (uint256 => bytes32)) public plyrNameList_; // (pID => nameNum => name) list of names a player owns
  at FoMo3DlongUnlimited.sol(959)

[31mViolation[0m for MissingInputValidation in contract 'PlayerBook':
    |    mapping (bytes32 => uint256) public pIDxName_;          // (name => pID) returns player id by name
    |    mapping (uint256 => Player) public plyr_;               // (pID => data) player data
  > |    mapping (uint256 => mapping (bytes32 => bool)) public plyrNames_; // (pID => name => bool) list of names a player owns.  (used so you can change your display name amoungst any name you own)
    |    mapping (uint256 => mapping (uint256 => bytes32)) public plyrNameList_; // (pID => nameNum => name) list of names a player owns
    |    struct Player {
  at FoMo3DlongUnlimited.sol(960)

[31mViolation[0m for MissingInputValidation in contract 'PlayerBook':
    |    mapping (uint256 => Player) public plyr_;               // (pID => data) player data
    |    mapping (uint256 => mapping (bytes32 => bool)) public plyrNames_; // (pID => name => bool) list of names a player owns.  (used so you can change your display name amoungst any name you own)
  > |    mapping (uint256 => mapping (uint256 => bytes32)) public plyrNameList_; // (pID => nameNum => name) list of names a player owns
    |    struct Player {
    |        address addr;
  at FoMo3DlongUnlimited.sol(961)

[31mViolation[0m for MissingInputValidation in contract 'PlayerBook':
    |//  (/_>< | (/_| | |(_||  (_(_|||_\  .
    |//==============================================================================
  > |    function getPlayerID(address _addr)
    |        isRegisteredGame()
    |        external
  at FoMo3DlongUnlimited.sol(1317)

[31mViolation[0m for MissingInputValidation in contract 'PlayerBook':
    |        return (pIDxAddr_[_addr]);
    |    }
  > |    function getPlayerName(uint256 _pID)
    |        external
    |        view
  at FoMo3DlongUnlimited.sol(1325)

[31mViolation[0m for MissingInputValidation in contract 'PlayerBook':
    |        return (plyr_[_pID].name);
    |    }
  > |    function getPlayerLAff(uint256 _pID)
    |        external
    |        view
  at FoMo3DlongUnlimited.sol(1332)

[31mViolation[0m for MissingInputValidation in contract 'PlayerBook':
    |        return (plyr_[_pID].laff);
    |    }
  > |    function getPlayerAddr(uint256 _pID)
    |        external
    |        view
  at FoMo3DlongUnlimited.sol(1339)

[31mViolation[0m for MissingInputValidation in contract 'PlayerBook':
    |        return(registrationFee_);
    |    }
  > |    function registerNameXIDFromDapp(address _addr, bytes32 _name, uint256 _affCode, bool _all)
    |        isRegisteredGame()
    |        external
  at FoMo3DlongUnlimited.sol(1353)

[31mViolation[0m for MissingInputValidation in contract 'PlayerBook':
    |        return(_isNewPlayer, _affID);
    |    }
  > |    function registerNameXnameFromDapp(address _addr, bytes32 _name, bytes32 _affCode, bool _all)
    |        isRegisteredGame()
    |        external
  at FoMo3DlongUnlimited.sol(1421)

[31mViolation[0m for MissingInputValidation in contract 'PlayerBook':
    |//  _\(/_ | |_||_)  .
    |//=============|================================================================
  > |    function addGame(address _gameAddress, string _gameNameStr)
    |        onlyDevs()
    |        public
  at FoMo3DlongUnlimited.sol(1462)

[33mWarning[0m for MissingInputValidation in contract 'PlayerBook':
    |     * (this might cost a lot of gas)
    |     */
  > |    function registerNameXID(string _nameString, uint256 _affCode, bool _all)
    |        isHuman()
    |        public
  at FoMo3DlongUnlimited.sol(1073)

[33mWarning[0m for MissingInputValidation in contract 'PlayerBook':
    |    }
    |    
  > |    function registerNameXaddr(string _nameString, address _affCode, bool _all)
    |        isHuman()
    |        public
  at FoMo3DlongUnlimited.sol(1108)

[33mWarning[0m for MissingInputValidation in contract 'PlayerBook':
    |    }
    |    
  > |    function registerNameXname(string _nameString, bytes32 _affCode, bool _all)
    |        isHuman()
    |        public
  at FoMo3DlongUnlimited.sol(1148)

[33mWarning[0m for MissingInputValidation in contract 'PlayerBook':
    |     * @param _gameID game id 
    |     */
  > |    function addMeToGame(uint256 _gameID)
    |        isHuman()
    |        public
  at FoMo3DlongUnlimited.sol(1196)

[33mWarning[0m for MissingInputValidation in contract 'PlayerBook':
    |        return(_isNewPlayer, _affID);
    |    }
  > |    function registerNameXaddrFromDapp(address _addr, bytes32 _name, address _affCode, bool _all)
    |        isRegisteredGame()
    |        external
  at FoMo3DlongUnlimited.sol(1385)

[33mWarning[0m for MissingInputValidation in contract 'PlayerBook':
    |    }
    |    
  > |    function setRegistrationFee(uint256 _fee)
    |        onlyDevs()
    |        public
  at FoMo3DlongUnlimited.sol(1484)

[31mViolation[0m for RepeatedCall in contract 'PlayerBook':
    |        if (_totalNames > 1)
    |            for (uint256 ii = 1; ii <= _totalNames; ii++)
  > |                games_[_gameID].receivePlayerNameList(_pID, plyrNameList_[_pID][ii]);
    |    }
    |    
  at FoMo3DlongUnlimited.sol(1212)

[31mViolation[0m for RepeatedCall in contract 'PlayerBook':
    |        
    |            games_[gID_].receivePlayerInfo(1, plyr_[1].addr, plyr_[1].name, 0);
  > |            games_[gID_].receivePlayerInfo(2, plyr_[2].addr, plyr_[2].name, 0);
    |            games_[gID_].receivePlayerInfo(3, plyr_[3].addr, plyr_[3].name, 0);
    |            games_[gID_].receivePlayerInfo(4, plyr_[4].addr, plyr_[4].name, 0);
  at FoMo3DlongUnlimited.sol(1478)

[31mViolation[0m for RepeatedCall in contract 'PlayerBook':
    |            games_[gID_].receivePlayerInfo(1, plyr_[1].addr, plyr_[1].name, 0);
    |            games_[gID_].receivePlayerInfo(2, plyr_[2].addr, plyr_[2].name, 0);
  > |            games_[gID_].receivePlayerInfo(3, plyr_[3].addr, plyr_[3].name, 0);
    |            games_[gID_].receivePlayerInfo(4, plyr_[4].addr, plyr_[4].name, 0);
    |        }
  at FoMo3DlongUnlimited.sol(1479)

[31mViolation[0m for RepeatedCall in contract 'PlayerBook':
    |            games_[gID_].receivePlayerInfo(2, plyr_[2].addr, plyr_[2].name, 0);
    |            games_[gID_].receivePlayerInfo(3, plyr_[3].addr, plyr_[3].name, 0);
  > |            games_[gID_].receivePlayerInfo(4, plyr_[4].addr, plyr_[4].name, 0);
    |        }
    |    }
  at FoMo3DlongUnlimited.sol(1480)

[33mWarning[0m for RepeatedCall in contract 'PlayerBook':
    |        if (_all == true)
    |            for (uint256 i = 1; i <= gID_; i++)
  > |                games_[i].receivePlayerInfo(_pID, _addr, _name, _affID);
    |        
    |        // fire event
  at FoMo3DlongUnlimited.sol(1288)

[33mWarning[0m for TODAmount in contract 'PlayerBook':
    |    MSFun.Data private msData;
    |
  > |    function multiSigDev(bytes32 _whatFunction) private returns (bool) {return(MSFun.multiSig(msData, TeamJust.requiredDevSignatures(), _whatFunction));}
    |    function deleteProposal(bytes32 _whatFunction) private {MSFun.deleteProposal(msData, _whatFunction);}
    |    function deleteAnyProposal(bytes32 _whatFunction) onlyDevs() public {MSFun.deleteProposal(msData, _whatFunction);}
  at FoMo3DlongUnlimited.sol(939)

[33mWarning[0m for TODAmount in contract 'PlayerBook':
    |    function checkData(bytes32 _whatFunction) onlyDevs() public view returns(bytes32, uint256) {return(MSFun.checkMsgData(msData, _whatFunction), MSFun.checkCount(msData, _whatFunction));}
    |    function checkSignersByAddress(bytes32 _whatFunction, uint256 _signerA, uint256 _signerB, uint256 _signerC) onlyDevs() public view returns(address, address, address) {return(MSFun.checkSigner(msData, _whatFunction, _signerA), MSFun.checkSigner(msData, _whatFunction, _signerB), MSFun.checkSigner(msData, _whatFunction, _signerC));}
  > |    function checkSignersByName(bytes32 _whatFunction, uint256 _signerA, uint256 _signerB, uint256 _signerC) onlyDevs() public view returns(bytes32, bytes32, bytes32) {return(TeamJust.adminName(MSFun.checkSigner(msData, _whatFunction, _signerA)), TeamJust.adminName(MSFun.checkSigner(msData, _whatFunction, _signerB)), TeamJust.adminName(MSFun.checkSigner(msData, _whatFunction, _signerC)));}
    |//==============================================================================
    |//     _| _ _|_ _    _ _ _|_    _   .
  at FoMo3DlongUnlimited.sol(944)

[33mWarning[0m for TODAmount in contract 'PlayerBook':
    |        
    |        // registration fee goes directly to community rewards
  > |        FundForwarderConst.deposit.value(address(this).balance)();
    |        
    |        // push player info to games
  at FoMo3DlongUnlimited.sol(1283)

[33mWarning[0m for TODAmount in contract 'PlayerBook':
    |        if (_all == true)
    |            for (uint256 i = 1; i <= gID_; i++)
  > |                games_[i].receivePlayerInfo(_pID, _addr, _name, _affID);
    |        
    |        // fire event
  at FoMo3DlongUnlimited.sol(1288)

[33mWarning[0m for TODAmount in contract 'PlayerBook':
    |            games_[gID_] = PlayerBookReceiverInterface(_gameAddress);
    |        
  > |            games_[gID_].receivePlayerInfo(1, plyr_[1].addr, plyr_[1].name, 0);
    |            games_[gID_].receivePlayerInfo(2, plyr_[2].addr, plyr_[2].name, 0);
    |            games_[gID_].receivePlayerInfo(3, plyr_[3].addr, plyr_[3].name, 0);
  at FoMo3DlongUnlimited.sol(1477)

[33mWarning[0m for TODAmount in contract 'PlayerBook':
    |        
    |            games_[gID_].receivePlayerInfo(1, plyr_[1].addr, plyr_[1].name, 0);
  > |            games_[gID_].receivePlayerInfo(2, plyr_[2].addr, plyr_[2].name, 0);
    |            games_[gID_].receivePlayerInfo(3, plyr_[3].addr, plyr_[3].name, 0);
    |            games_[gID_].receivePlayerInfo(4, plyr_[4].addr, plyr_[4].name, 0);
  at FoMo3DlongUnlimited.sol(1478)

[33mWarning[0m for TODAmount in contract 'PlayerBook':
    |            games_[gID_].receivePlayerInfo(1, plyr_[1].addr, plyr_[1].name, 0);
    |            games_[gID_].receivePlayerInfo(2, plyr_[2].addr, plyr_[2].name, 0);
  > |            games_[gID_].receivePlayerInfo(3, plyr_[3].addr, plyr_[3].name, 0);
    |            games_[gID_].receivePlayerInfo(4, plyr_[4].addr, plyr_[4].name, 0);
    |        }
  at FoMo3DlongUnlimited.sol(1479)

[33mWarning[0m for TODAmount in contract 'PlayerBook':
    |            games_[gID_].receivePlayerInfo(2, plyr_[2].addr, plyr_[2].name, 0);
    |            games_[gID_].receivePlayerInfo(3, plyr_[3].addr, plyr_[3].name, 0);
  > |            games_[gID_].receivePlayerInfo(4, plyr_[4].addr, plyr_[4].name, 0);
    |        }
    |    }
  at FoMo3DlongUnlimited.sol(1480)

[33mWarning[0m for TODReceiver in contract 'PlayerBook':
    |    MSFun.Data private msData;
    |
  > |    function multiSigDev(bytes32 _whatFunction) private returns (bool) {return(MSFun.multiSig(msData, TeamJust.requiredDevSignatures(), _whatFunction));}
    |    function deleteProposal(bytes32 _whatFunction) private {MSFun.deleteProposal(msData, _whatFunction);}
    |    function deleteAnyProposal(bytes32 _whatFunction) onlyDevs() public {MSFun.deleteProposal(msData, _whatFunction);}
  at FoMo3DlongUnlimited.sol(939)

[33mWarning[0m for TODReceiver in contract 'PlayerBook':
    |    function checkData(bytes32 _whatFunction) onlyDevs() public view returns(bytes32, uint256) {return(MSFun.checkMsgData(msData, _whatFunction), MSFun.checkCount(msData, _whatFunction));}
    |    function checkSignersByAddress(bytes32 _whatFunction, uint256 _signerA, uint256 _signerB, uint256 _signerC) onlyDevs() public view returns(address, address, address) {return(MSFun.checkSigner(msData, _whatFunction, _signerA), MSFun.checkSigner(msData, _whatFunction, _signerB), MSFun.checkSigner(msData, _whatFunction, _signerC));}
  > |    function checkSignersByName(bytes32 _whatFunction, uint256 _signerA, uint256 _signerB, uint256 _signerC) onlyDevs() public view returns(bytes32, bytes32, bytes32) {return(TeamJust.adminName(MSFun.checkSigner(msData, _whatFunction, _signerA)), TeamJust.adminName(MSFun.checkSigner(msData, _whatFunction, _signerB)), TeamJust.adminName(MSFun.checkSigner(msData, _whatFunction, _signerC)));}
    |//==============================================================================
    |//     _| _ _|_ _    _ _ _|_    _   .
  at FoMo3DlongUnlimited.sol(944)

[33mWarning[0m for TODReceiver in contract 'PlayerBook':
    |        
    |        // registration fee goes directly to community rewards
  > |        FundForwarderConst.deposit.value(address(this).balance)();
    |        
    |        // push player info to games
  at FoMo3DlongUnlimited.sol(1283)

[33mWarning[0m for TODReceiver in contract 'PlayerBook':
    |        if (_all == true)
    |            for (uint256 i = 1; i <= gID_; i++)
  > |                games_[i].receivePlayerInfo(_pID, _addr, _name, _affID);
    |        
    |        // fire event
  at FoMo3DlongUnlimited.sol(1288)

[33mWarning[0m for TODReceiver in contract 'PlayerBook':
    |            games_[gID_] = PlayerBookReceiverInterface(_gameAddress);
    |        
  > |            games_[gID_].receivePlayerInfo(1, plyr_[1].addr, plyr_[1].name, 0);
    |            games_[gID_].receivePlayerInfo(2, plyr_[2].addr, plyr_[2].name, 0);
    |            games_[gID_].receivePlayerInfo(3, plyr_[3].addr, plyr_[3].name, 0);
  at FoMo3DlongUnlimited.sol(1477)

[33mWarning[0m for TODReceiver in contract 'PlayerBook':
    |        
    |            games_[gID_].receivePlayerInfo(1, plyr_[1].addr, plyr_[1].name, 0);
  > |            games_[gID_].receivePlayerInfo(2, plyr_[2].addr, plyr_[2].name, 0);
    |            games_[gID_].receivePlayerInfo(3, plyr_[3].addr, plyr_[3].name, 0);
    |            games_[gID_].receivePlayerInfo(4, plyr_[4].addr, plyr_[4].name, 0);
  at FoMo3DlongUnlimited.sol(1478)

[33mWarning[0m for TODReceiver in contract 'PlayerBook':
    |            games_[gID_].receivePlayerInfo(1, plyr_[1].addr, plyr_[1].name, 0);
    |            games_[gID_].receivePlayerInfo(2, plyr_[2].addr, plyr_[2].name, 0);
  > |            games_[gID_].receivePlayerInfo(3, plyr_[3].addr, plyr_[3].name, 0);
    |            games_[gID_].receivePlayerInfo(4, plyr_[4].addr, plyr_[4].name, 0);
    |        }
  at FoMo3DlongUnlimited.sol(1479)

[33mWarning[0m for TODReceiver in contract 'PlayerBook':
    |            games_[gID_].receivePlayerInfo(2, plyr_[2].addr, plyr_[2].name, 0);
    |            games_[gID_].receivePlayerInfo(3, plyr_[3].addr, plyr_[3].name, 0);
  > |            games_[gID_].receivePlayerInfo(4, plyr_[4].addr, plyr_[4].name, 0);
    |        }
    |    }
  at FoMo3DlongUnlimited.sol(1480)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'PlayerBook':
    |    MSFun.Data private msData;
    |
  > |    function multiSigDev(bytes32 _whatFunction) private returns (bool) {return(MSFun.multiSig(msData, TeamJust.requiredDevSignatures(), _whatFunction));}
    |    function deleteProposal(bytes32 _whatFunction) private {MSFun.deleteProposal(msData, _whatFunction);}
    |    function deleteAnyProposal(bytes32 _whatFunction) onlyDevs() public {MSFun.deleteProposal(msData, _whatFunction);}
  at FoMo3DlongUnlimited.sol(939)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'PlayerBook':
    |    function checkData(bytes32 _whatFunction) onlyDevs() public view returns(bytes32, uint256) {return(MSFun.checkMsgData(msData, _whatFunction), MSFun.checkCount(msData, _whatFunction));}
    |    function checkSignersByAddress(bytes32 _whatFunction, uint256 _signerA, uint256 _signerB, uint256 _signerC) onlyDevs() public view returns(address, address, address) {return(MSFun.checkSigner(msData, _whatFunction, _signerA), MSFun.checkSigner(msData, _whatFunction, _signerB), MSFun.checkSigner(msData, _whatFunction, _signerC));}
  > |    function checkSignersByName(bytes32 _whatFunction, uint256 _signerA, uint256 _signerB, uint256 _signerC) onlyDevs() public view returns(bytes32, bytes32, bytes32) {return(TeamJust.adminName(MSFun.checkSigner(msData, _whatFunction, _signerA)), TeamJust.adminName(MSFun.checkSigner(msData, _whatFunction, _signerB)), TeamJust.adminName(MSFun.checkSigner(msData, _whatFunction, _signerC)));}
    |//==============================================================================
    |//     _| _ _|_ _    _ _ _|_    _   .
  at FoMo3DlongUnlimited.sol(944)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'PlayerBook':
    |        
    |        // registration fee goes directly to community rewards
  > |        FundForwarderConst.deposit.value(address(this).balance)();
    |        
    |        // push player info to games
  at FoMo3DlongUnlimited.sol(1283)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'PlayerBook':
    |        if (_all == true)
    |            for (uint256 i = 1; i <= gID_; i++)
  > |                games_[i].receivePlayerInfo(_pID, _addr, _name, _affID);
    |        
    |        // fire event
  at FoMo3DlongUnlimited.sol(1288)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'PlayerBook':
    |            games_[gID_] = PlayerBookReceiverInterface(_gameAddress);
    |        
  > |            games_[gID_].receivePlayerInfo(1, plyr_[1].addr, plyr_[1].name, 0);
    |            games_[gID_].receivePlayerInfo(2, plyr_[2].addr, plyr_[2].name, 0);
    |            games_[gID_].receivePlayerInfo(3, plyr_[3].addr, plyr_[3].name, 0);
  at FoMo3DlongUnlimited.sol(1477)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'PlayerBook':
    |        
    |            games_[gID_].receivePlayerInfo(1, plyr_[1].addr, plyr_[1].name, 0);
  > |            games_[gID_].receivePlayerInfo(2, plyr_[2].addr, plyr_[2].name, 0);
    |            games_[gID_].receivePlayerInfo(3, plyr_[3].addr, plyr_[3].name, 0);
    |            games_[gID_].receivePlayerInfo(4, plyr_[4].addr, plyr_[4].name, 0);
  at FoMo3DlongUnlimited.sol(1478)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'PlayerBook':
    |            games_[gID_].receivePlayerInfo(1, plyr_[1].addr, plyr_[1].name, 0);
    |            games_[gID_].receivePlayerInfo(2, plyr_[2].addr, plyr_[2].name, 0);
  > |            games_[gID_].receivePlayerInfo(3, plyr_[3].addr, plyr_[3].name, 0);
    |            games_[gID_].receivePlayerInfo(4, plyr_[4].addr, plyr_[4].name, 0);
    |        }
  at FoMo3DlongUnlimited.sol(1479)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'PlayerBook':
    |            games_[gID_].receivePlayerInfo(2, plyr_[2].addr, plyr_[2].name, 0);
    |            games_[gID_].receivePlayerInfo(3, plyr_[3].addr, plyr_[3].name, 0);
  > |            games_[gID_].receivePlayerInfo(4, plyr_[4].addr, plyr_[4].name, 0);
    |        }
    |    }
  at FoMo3DlongUnlimited.sol(1480)

[31mViolation[0m for UnrestrictedWrite in contract 'PlayerBook':
    |        {
    |            // if it is, lets record the original signers data
  > |            self.proposal_[_whatProposal].msgData = _msgData;
    |            
    |            // record original senders signature
  at FoMo3DlongUnlimited.sol(472)

[31mViolation[0m for UnrestrictedWrite in contract 'PlayerBook':
    |            
    |            // record original senders signature
  > |            self.proposal_[_whatProposal].admin[_whichAdmin] = true;        
    |            
    |            // update log (used to delete records later, and easy way to view signers)
  at FoMo3DlongUnlimited.sol(475)

[31mViolation[0m for UnrestrictedWrite in contract 'PlayerBook':
    |            // also useful if the calling function wants to give something to a 
    |            // specific signer.  
  > |            self.proposal_[_whatProposal].log[_currentCount] = _whichAdmin;  
    |            
    |            // track number of signatures
  at FoMo3DlongUnlimited.sol(480)

[31mViolation[0m for UnrestrictedWrite in contract 'PlayerBook':
    |            
    |            // track number of signatures
  > |            self.proposal_[_whatProposal].count += 1;  
    |            
    |            // if we now have enough signatures to execute the function, lets
  at FoMo3DlongUnlimited.sol(483)

[31mViolation[0m for UnrestrictedWrite in contract 'PlayerBook':
    |            {
    |                // record their signature
  > |                self.proposal_[_whatProposal].admin[_whichAdmin] = true;        
    |                
    |                // update log (used to delete records later, and easy way to view signers)
  at FoMo3DlongUnlimited.sol(498)

[31mViolation[0m for UnrestrictedWrite in contract 'PlayerBook':
    |                
    |                // update log (used to delete records later, and easy way to view signers)
  > |                self.proposal_[_whatProposal].log[_currentCount] = _whichAdmin;  
    |                
    |                // track number of signatures
  at FoMo3DlongUnlimited.sol(501)

[31mViolation[0m for UnrestrictedWrite in contract 'PlayerBook':
    |                
    |                // track number of signatures
  > |                self.proposal_[_whatProposal].count += 1;  
    |            }
    |            
  at FoMo3DlongUnlimited.sol(504)

[31mViolation[0m for UnrestrictedWrite in contract 'PlayerBook':
    |        for (uint256 i=0; i < self.proposal_[_whatProposal].count; i++) {
    |            _whichAdmin = self.proposal_[_whatProposal].log[i];
  > |            delete self.proposal_[_whatProposal].admin[_whichAdmin];
    |            delete self.proposal_[_whatProposal].log[i];
    |        }
  at FoMo3DlongUnlimited.sol(535)

[31mViolation[0m for UnrestrictedWrite in contract 'PlayerBook':
    |            _whichAdmin = self.proposal_[_whatProposal].log[i];
    |            delete self.proposal_[_whatProposal].admin[_whichAdmin];
  > |            delete self.proposal_[_whatProposal].log[i];
    |        }
    |        //delete the rest of the data in the record
  at FoMo3DlongUnlimited.sol(536)

[31mViolation[0m for UnrestrictedWrite in contract 'PlayerBook':
    |        }
    |        //delete the rest of the data in the record
  > |        delete self.proposal_[_whatProposal];
    |    }
    |    
  at FoMo3DlongUnlimited.sol(539)

[31mViolation[0m for UnrestrictedWrite in contract 'PlayerBook':
    |        {
    |            // update last affiliate 
  > |            plyr_[_pID].laff = _affCode;
    |        } else if (_affCode == _pID) {
    |            _affCode = 0;
  at FoMo3DlongUnlimited.sol(1099)

[31mViolation[0m for UnrestrictedWrite in contract 'PlayerBook':
    |        
    |        // add name to player profile, registry, and name book
  > |        plyr_[_pID].name = _name;
    |        pIDxName_[_name] = _pID;
    |        if (plyrNames_[_pID][_name] == false)
  at FoMo3DlongUnlimited.sol(1273)

[31mViolation[0m for UnrestrictedWrite in contract 'PlayerBook':
    |        // add name to player profile, registry, and name book
    |        plyr_[_pID].name = _name;
  > |        pIDxName_[_name] = _pID;
    |        if (plyrNames_[_pID][_name] == false)
    |        {
  at FoMo3DlongUnlimited.sol(1274)

[31mViolation[0m for UnrestrictedWrite in contract 'PlayerBook':
    |        if (plyrNames_[_pID][_name] == false)
    |        {
  > |            plyrNames_[_pID][_name] = true;
    |            plyr_[_pID].names++;
    |            plyrNameList_[_pID][plyr_[_pID].names] = _name;
  at FoMo3DlongUnlimited.sol(1277)

[31mViolation[0m for UnrestrictedWrite in contract 'PlayerBook':
    |        {
    |            plyrNames_[_pID][_name] = true;
  > |            plyr_[_pID].names++;
    |            plyrNameList_[_pID][plyr_[_pID].names] = _name;
    |        }
  at FoMo3DlongUnlimited.sol(1278)

[31mViolation[0m for UnrestrictedWrite in contract 'PlayerBook':
    |            plyrNames_[_pID][_name] = true;
    |            plyr_[_pID].names++;
  > |            plyrNameList_[_pID][plyr_[_pID].names] = _name;
    |        }
    |        
  at FoMo3DlongUnlimited.sol(1279)

[31mViolation[0m for UnrestrictedWrite in contract 'PlayerBook':
    |        if (pIDxAddr_[_addr] == 0)
    |        {
  > |            pID_++;
    |            pIDxAddr_[_addr] = pID_;
    |            plyr_[pID_].addr = _addr;
  at FoMo3DlongUnlimited.sol(1303)

[31mViolation[0m for UnrestrictedWrite in contract 'PlayerBook':
    |        {
    |            pID_++;
  > |            pIDxAddr_[_addr] = pID_;
    |            plyr_[pID_].addr = _addr;
    |            
  at FoMo3DlongUnlimited.sol(1304)

[31mViolation[0m for UnrestrictedWrite in contract 'PlayerBook':
    |            pID_++;
    |            pIDxAddr_[_addr] = pID_;
  > |            plyr_[pID_].addr = _addr;
    |            
    |            // set the new player bool to true
  at FoMo3DlongUnlimited.sol(1305)

[31mViolation[0m for UnrestrictedWrite in contract 'PlayerBook':
    |        {
    |            // update last affiliate 
  > |            plyr_[_pID].laff = _affID;
    |        } else if (_affID == _pID) {
    |            _affID = 0;
  at FoMo3DlongUnlimited.sol(1375)

[31mViolation[0m for UnrestrictedWrite in contract 'PlayerBook':
    |            {
    |                // update last affiliate
  > |                plyr_[_pID].laff = _affID;
    |            }
    |        }
  at FoMo3DlongUnlimited.sol(1412)

[31mViolation[0m for UnrestrictedWrite in contract 'PlayerBook':
    |            {
    |                // update last affiliate
  > |                plyr_[_pID].laff = _affID;
    |            }
    |        }
  at FoMo3DlongUnlimited.sol(1448)

[31mViolation[0m for UnrestrictedWrite in contract 'PlayerBook':
    |        {
    |            deleteProposal("addGame");
  > |            gID_++;
    |            bytes32 _name = _gameNameStr.nameFilter();
    |            gameIDs_[_gameAddress] = gID_;
  at FoMo3DlongUnlimited.sol(1471)

[31mViolation[0m for UnrestrictedWrite in contract 'PlayerBook':
    |        if (multiSigDev("setRegistrationFee") == true)
    |        {deleteProposal("setRegistrationFee");
  > |            registrationFee_ = _fee;
    |        }
    |    }
  at FoMo3DlongUnlimited.sol(1490)

[33mWarning[0m for UnrestrictedWrite in contract 'PlayerBook':
    |            {
    |                // update last affiliate
  > |                plyr_[_pID].laff = _affID;
    |            }
    |        }
  at FoMo3DlongUnlimited.sol(1140)

[33mWarning[0m for UnrestrictedWrite in contract 'PlayerBook':
    |            {
    |                // update last affiliate
  > |                plyr_[_pID].laff = _affID;
    |            }
    |        }
  at FoMo3DlongUnlimited.sol(1180)

[33mWarning[0m for UnrestrictedWrite in contract 'PlayerBook':
    |        
    |        // update their current name 
  > |        plyr_[_pID].name = _name;
    |    }
    |    
  at FoMo3DlongUnlimited.sol(1258)

[33mWarning[0m for UnrestrictedWrite in contract 'PlayerBook':
    |        
    |        // add name to player profile, registry, and name book
  > |        plyr_[_pID].name = _name;
    |        pIDxName_[_name] = _pID;
    |        if (plyrNames_[_pID][_name] == false)
  at FoMo3DlongUnlimited.sol(1273)

[33mWarning[0m for UnrestrictedWrite in contract 'PlayerBook':
    |        // add name to player profile, registry, and name book
    |        plyr_[_pID].name = _name;
  > |        pIDxName_[_name] = _pID;
    |        if (plyrNames_[_pID][_name] == false)
    |        {
  at FoMo3DlongUnlimited.sol(1274)

[33mWarning[0m for UnrestrictedWrite in contract 'PlayerBook':
    |        if (plyrNames_[_pID][_name] == false)
    |        {
  > |            plyrNames_[_pID][_name] = true;
    |            plyr_[_pID].names++;
    |            plyrNameList_[_pID][plyr_[_pID].names] = _name;
  at FoMo3DlongUnlimited.sol(1277)

[33mWarning[0m for UnrestrictedWrite in contract 'PlayerBook':
    |        {
    |            plyrNames_[_pID][_name] = true;
  > |            plyr_[_pID].names++;
    |            plyrNameList_[_pID][plyr_[_pID].names] = _name;
    |        }
  at FoMo3DlongUnlimited.sol(1278)

[33mWarning[0m for UnrestrictedWrite in contract 'PlayerBook':
    |            plyrNames_[_pID][_name] = true;
    |            plyr_[_pID].names++;
  > |            plyrNameList_[_pID][plyr_[_pID].names] = _name;
    |        }
    |        
  at FoMo3DlongUnlimited.sol(1279)

[33mWarning[0m for UnrestrictedWrite in contract 'PlayerBook':
    |        if (pIDxAddr_[_addr] == 0)
    |        {
  > |            pID_++;
    |            pIDxAddr_[_addr] = pID_;
    |            plyr_[pID_].addr = _addr;
  at FoMo3DlongUnlimited.sol(1303)

[33mWarning[0m for UnrestrictedWrite in contract 'PlayerBook':
    |        {
    |            pID_++;
  > |            pIDxAddr_[_addr] = pID_;
    |            plyr_[pID_].addr = _addr;
    |            
  at FoMo3DlongUnlimited.sol(1304)

[33mWarning[0m for UnrestrictedWrite in contract 'PlayerBook':
    |            pID_++;
    |            pIDxAddr_[_addr] = pID_;
  > |            plyr_[pID_].addr = _addr;
    |            
    |            // set the new player bool to true
  at FoMo3DlongUnlimited.sol(1305)

[33mWarning[0m for UnrestrictedWrite in contract 'PlayerBook':
    |            gID_++;
    |            bytes32 _name = _gameNameStr.nameFilter();
  > |            gameIDs_[_gameAddress] = gID_;
    |            gameNames_[_gameAddress] = _name;
    |            games_[gID_] = PlayerBookReceiverInterface(_gameAddress);
  at FoMo3DlongUnlimited.sol(1473)

[33mWarning[0m for UnrestrictedWrite in contract 'PlayerBook':
    |            bytes32 _name = _gameNameStr.nameFilter();
    |            gameIDs_[_gameAddress] = gID_;
  > |            gameNames_[_gameAddress] = _name;
    |            games_[gID_] = PlayerBookReceiverInterface(_gameAddress);
    |        
  at FoMo3DlongUnlimited.sol(1474)

[33mWarning[0m for UnrestrictedWrite in contract 'PlayerBook':
    |            gameIDs_[_gameAddress] = gID_;
    |            gameNames_[_gameAddress] = _name;
  > |            games_[gID_] = PlayerBookReceiverInterface(_gameAddress);
    |        
    |            games_[gID_].receivePlayerInfo(1, plyr_[1].addr, plyr_[1].name, 0);
  at FoMo3DlongUnlimited.sol(1475)

[31mViolation[0m for MissingInputValidation in contract 'Team':
    |    //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |    MSFun.Data private msData;
  > |    function deleteAnyProposal(bytes32 _whatFunction) onlyDevs() public {MSFun.deleteProposal(msData, _whatFunction);}
    |    function checkData(bytes32 _whatFunction) onlyAdmins() public view returns(bytes32 message_data, uint256 signature_count) {return(MSFun.checkMsgData(msData, _whatFunction), MSFun.checkCount(msData, _whatFunction));}
    |    function checkSignersByName(bytes32 _whatFunction, uint256 _signerA, uint256 _signerB, uint256 _signerC) onlyAdmins() public view returns(bytes32, bytes32, bytes32) {return(this.adminName(MSFun.checkSigner(msData, _whatFunction, _signerA)), this.adminName(MSFun.checkSigner(msData, _whatFunction, _signerB)), this.adminName(MSFun.checkSigner(msData, _whatFunction, _signerC)));}
  at FoMo3DlongUnlimited.sol(1508)

[31mViolation[0m for MissingInputValidation in contract 'Team':
    |    MSFun.Data private msData;
    |    function deleteAnyProposal(bytes32 _whatFunction) onlyDevs() public {MSFun.deleteProposal(msData, _whatFunction);}
  > |    function checkData(bytes32 _whatFunction) onlyAdmins() public view returns(bytes32 message_data, uint256 signature_count) {return(MSFun.checkMsgData(msData, _whatFunction), MSFun.checkCount(msData, _whatFunction));}
    |    function checkSignersByName(bytes32 _whatFunction, uint256 _signerA, uint256 _signerB, uint256 _signerC) onlyAdmins() public view returns(bytes32, bytes32, bytes32) {return(this.adminName(MSFun.checkSigner(msData, _whatFunction, _signerA)), this.adminName(MSFun.checkSigner(msData, _whatFunction, _signerB)), this.adminName(MSFun.checkSigner(msData, _whatFunction, _signerC)));}
    |
  at FoMo3DlongUnlimited.sol(1509)

[31mViolation[0m for MissingInputValidation in contract 'Team':
    |    function deleteAnyProposal(bytes32 _whatFunction) onlyDevs() public {MSFun.deleteProposal(msData, _whatFunction);}
    |    function checkData(bytes32 _whatFunction) onlyAdmins() public view returns(bytes32 message_data, uint256 signature_count) {return(MSFun.checkMsgData(msData, _whatFunction), MSFun.checkCount(msData, _whatFunction));}
  > |    function checkSignersByName(bytes32 _whatFunction, uint256 _signerA, uint256 _signerB, uint256 _signerC) onlyAdmins() public view returns(bytes32, bytes32, bytes32) {return(this.adminName(MSFun.checkSigner(msData, _whatFunction, _signerA)), this.adminName(MSFun.checkSigner(msData, _whatFunction, _signerB)), this.adminName(MSFun.checkSigner(msData, _whatFunction, _signerC)));}
    |
    |    //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  at FoMo3DlongUnlimited.sol(1510)

[31mViolation[0m for MissingInputValidation in contract 'Team':
    |    }
    |    
  > |    function setup(address _addr)
    |        onlyDevs()
    |        public
  at FoMo3DlongUnlimited.sol(1554)

[31mViolation[0m for MissingInputValidation in contract 'Team':
    |    * @param _who - address of the admin you wish to remove
    |    */
  > |    function removeAdmin(address _who)
    |        public
    |        onlyDevs()
  at FoMo3DlongUnlimited.sol(1635)

[31mViolation[0m for MissingInputValidation in contract 'Team':
    |    function adminCount() external view returns(uint256) {return(adminCount_);}
    |    function devCount() external view returns(uint256) {return(devCount_);}
  > |    function adminName(address _who) external view returns(bytes32) {return(admins_[_who].name);}
    |    function isAdmin(address _who) external view returns(bool) {return(admins_[_who].isAdmin);}
    |    function isDev(address _who) external view returns(bool) {return(admins_[_who].isDev);}
  at FoMo3DlongUnlimited.sol(1734)

[31mViolation[0m for MissingInputValidation in contract 'Team':
    |    function devCount() external view returns(uint256) {return(devCount_);}
    |    function adminName(address _who) external view returns(bytes32) {return(admins_[_who].name);}
  > |    function isAdmin(address _who) external view returns(bool) {return(admins_[_who].isAdmin);}
    |    function isDev(address _who) external view returns(bool) {return(admins_[_who].isDev);}
    |}
  at FoMo3DlongUnlimited.sol(1735)

[31mViolation[0m for MissingInputValidation in contract 'Team':
    |    function adminName(address _who) external view returns(bytes32) {return(admins_[_who].name);}
    |    function isAdmin(address _who) external view returns(bool) {return(admins_[_who].isAdmin);}
  > |    function isDev(address _who) external view returns(bool) {return(admins_[_who].isDev);}
    |}
    |
  at FoMo3DlongUnlimited.sol(1736)

[33mWarning[0m for MissingInputValidation in contract 'Team':
    |    * @param _isDev - is this admin also a dev?
    |    */
  > |    function addAdmin(address _who, bytes32 _name, bool _isDev)
    |        public
    |        onlyDevs()
  at FoMo3DlongUnlimited.sol(1586)

[33mWarning[0m for MissingInputValidation in contract 'Team':
    |    * @param _howMany - desired number of required signatures
    |    */
  > |    function changeRequiredSignatures(uint256 _howMany)
    |        public
    |        onlyDevs()
  at FoMo3DlongUnlimited.sol(1690)

[33mWarning[0m for MissingInputValidation in contract 'Team':
    |    * @param _howMany - desired number of required dev signatures
    |    */
  > |    function changeRequiredDevSignatures(uint256 _howMany)
    |        public
    |        onlyDevs()
  at FoMo3DlongUnlimited.sol(1711)

[33mWarning[0m for TODAmount in contract 'Team':
    |    function deleteAnyProposal(bytes32 _whatFunction) onlyDevs() public {MSFun.deleteProposal(msData, _whatFunction);}
    |    function checkData(bytes32 _whatFunction) onlyAdmins() public view returns(bytes32 message_data, uint256 signature_count) {return(MSFun.checkMsgData(msData, _whatFunction), MSFun.checkCount(msData, _whatFunction));}
  > |    function checkSignersByName(bytes32 _whatFunction, uint256 _signerA, uint256 _signerB, uint256 _signerC) onlyAdmins() public view returns(bytes32, bytes32, bytes32) {return(this.adminName(MSFun.checkSigner(msData, _whatFunction, _signerA)), this.adminName(MSFun.checkSigner(msData, _whatFunction, _signerB)), this.adminName(MSFun.checkSigner(msData, _whatFunction, _signerC)));}
    |
    |    //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  at FoMo3DlongUnlimited.sol(1510)

[33mWarning[0m for TODReceiver in contract 'Team':
    |    function deleteAnyProposal(bytes32 _whatFunction) onlyDevs() public {MSFun.deleteProposal(msData, _whatFunction);}
    |    function checkData(bytes32 _whatFunction) onlyAdmins() public view returns(bytes32 message_data, uint256 signature_count) {return(MSFun.checkMsgData(msData, _whatFunction), MSFun.checkCount(msData, _whatFunction));}
  > |    function checkSignersByName(bytes32 _whatFunction, uint256 _signerA, uint256 _signerB, uint256 _signerC) onlyAdmins() public view returns(bytes32, bytes32, bytes32) {return(this.adminName(MSFun.checkSigner(msData, _whatFunction, _signerA)), this.adminName(MSFun.checkSigner(msData, _whatFunction, _signerB)), this.adminName(MSFun.checkSigner(msData, _whatFunction, _signerC)));}
    |
    |    //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  at FoMo3DlongUnlimited.sol(1510)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'Team':
    |    function deleteAnyProposal(bytes32 _whatFunction) onlyDevs() public {MSFun.deleteProposal(msData, _whatFunction);}
    |    function checkData(bytes32 _whatFunction) onlyAdmins() public view returns(bytes32 message_data, uint256 signature_count) {return(MSFun.checkMsgData(msData, _whatFunction), MSFun.checkCount(msData, _whatFunction));}
  > |    function checkSignersByName(bytes32 _whatFunction, uint256 _signerA, uint256 _signerB, uint256 _signerC) onlyAdmins() public view returns(bytes32, bytes32, bytes32) {return(this.adminName(MSFun.checkSigner(msData, _whatFunction, _signerA)), this.adminName(MSFun.checkSigner(msData, _whatFunction, _signerB)), this.adminName(MSFun.checkSigner(msData, _whatFunction, _signerC)));}
    |
    |    //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  at FoMo3DlongUnlimited.sol(1510)

[31mViolation[0m for UnrestrictedWrite in contract 'Team':
    |        {
    |            // if it is, lets record the original signers data
  > |            self.proposal_[_whatProposal].msgData = _msgData;
    |            
    |            // record original senders signature
  at FoMo3DlongUnlimited.sol(472)

[31mViolation[0m for UnrestrictedWrite in contract 'Team':
    |            
    |            // record original senders signature
  > |            self.proposal_[_whatProposal].admin[_whichAdmin] = true;        
    |            
    |            // update log (used to delete records later, and easy way to view signers)
  at FoMo3DlongUnlimited.sol(475)

[31mViolation[0m for UnrestrictedWrite in contract 'Team':
    |            // also useful if the calling function wants to give something to a 
    |            // specific signer.  
  > |            self.proposal_[_whatProposal].log[_currentCount] = _whichAdmin;  
    |            
    |            // track number of signatures
  at FoMo3DlongUnlimited.sol(480)

[31mViolation[0m for UnrestrictedWrite in contract 'Team':
    |            
    |            // track number of signatures
  > |            self.proposal_[_whatProposal].count += 1;  
    |            
    |            // if we now have enough signatures to execute the function, lets
  at FoMo3DlongUnlimited.sol(483)

[31mViolation[0m for UnrestrictedWrite in contract 'Team':
    |            {
    |                // record their signature
  > |                self.proposal_[_whatProposal].admin[_whichAdmin] = true;        
    |                
    |                // update log (used to delete records later, and easy way to view signers)
  at FoMo3DlongUnlimited.sol(498)

[31mViolation[0m for UnrestrictedWrite in contract 'Team':
    |                
    |                // update log (used to delete records later, and easy way to view signers)
  > |                self.proposal_[_whatProposal].log[_currentCount] = _whichAdmin;  
    |                
    |                // track number of signatures
  at FoMo3DlongUnlimited.sol(501)

[31mViolation[0m for UnrestrictedWrite in contract 'Team':
    |                
    |                // track number of signatures
  > |                self.proposal_[_whatProposal].count += 1;  
    |            }
    |            
  at FoMo3DlongUnlimited.sol(504)

[31mViolation[0m for UnrestrictedWrite in contract 'Team':
    |        for (uint256 i=0; i < self.proposal_[_whatProposal].count; i++) {
    |            _whichAdmin = self.proposal_[_whatProposal].log[i];
  > |            delete self.proposal_[_whatProposal].admin[_whichAdmin];
    |            delete self.proposal_[_whatProposal].log[i];
    |        }
  at FoMo3DlongUnlimited.sol(535)

[31mViolation[0m for UnrestrictedWrite in contract 'Team':
    |            _whichAdmin = self.proposal_[_whatProposal].log[i];
    |            delete self.proposal_[_whatProposal].admin[_whichAdmin];
  > |            delete self.proposal_[_whatProposal].log[i];
    |        }
    |        //delete the rest of the data in the record
  at FoMo3DlongUnlimited.sol(536)

[31mViolation[0m for UnrestrictedWrite in contract 'Team':
    |        }
    |        //delete the rest of the data in the record
  > |        delete self.proposal_[_whatProposal];
    |    }
    |    
  at FoMo3DlongUnlimited.sol(539)

[31mViolation[0m for UnrestrictedWrite in contract 'Team':
    |    {
    |        require( address(FundForwarderTeam) == address(0) );
  > |        FundForwarderTeam = FundForwarderInterface(_addr);
    |    }    
    |    
  at FoMo3DlongUnlimited.sol(1559)

[31mViolation[0m for UnrestrictedWrite in contract 'Team':
    |                
    |                // set admins flag to true in admin mapping
  > |                admins_[_who].isAdmin = true;
    |        
    |                // adjust admin count and required signatures
  at FoMo3DlongUnlimited.sol(1600)

[31mViolation[0m for UnrestrictedWrite in contract 'Team':
    |        
    |                // adjust admin count and required signatures
  > |                adminCount_ += 1;
    |                requiredSignatures_ += 1;
    |            }
  at FoMo3DlongUnlimited.sol(1603)

[31mViolation[0m for UnrestrictedWrite in contract 'Team':
    |                // adjust admin count and required signatures
    |                adminCount_ += 1;
  > |                requiredSignatures_ += 1;
    |            }
    |            
  at FoMo3DlongUnlimited.sol(1604)

[31mViolation[0m for UnrestrictedWrite in contract 'Team':
    |            {
    |                // bestow the honored dev status
  > |                admins_[_who].isDev = _isDev;
    |                
    |                // increase dev count and required dev signatures
  at FoMo3DlongUnlimited.sol(1613)

[31mViolation[0m for UnrestrictedWrite in contract 'Team':
    |                
    |                // increase dev count and required dev signatures
  > |                devCount_ += 1;
    |                requiredDevSignatures_ += 1;
    |            }
  at FoMo3DlongUnlimited.sol(1616)

[31mViolation[0m for UnrestrictedWrite in contract 'Team':
    |                // increase dev count and required dev signatures
    |                devCount_ += 1;
  > |                requiredDevSignatures_ += 1;
    |            }
    |        }
  at FoMo3DlongUnlimited.sol(1617)

[31mViolation[0m for UnrestrictedWrite in contract 'Team':
    |                
    |                //set admins flag to false in admin mapping
  > |                admins_[_who].isAdmin = false;
    |                
    |                //adjust admin count and required signatures
  at FoMo3DlongUnlimited.sol(1659)

[31mViolation[0m for UnrestrictedWrite in contract 'Team':
    |                
    |                //adjust admin count and required signatures
  > |                adminCount_ -= 1;
    |                if (requiredSignatures_ > 1) 
    |                {
  at FoMo3DlongUnlimited.sol(1662)

[31mViolation[0m for UnrestrictedWrite in contract 'Team':
    |                if (requiredSignatures_ > 1) 
    |                {
  > |                    requiredSignatures_ -= 1;
    |                }
    |            }
  at FoMo3DlongUnlimited.sol(1665)

[31mViolation[0m for UnrestrictedWrite in contract 'Team':
    |                
    |                //set dev flag to false
  > |                admins_[_who].isDev = false;
    |                
    |                //adjust dev count and required dev signatures
  at FoMo3DlongUnlimited.sol(1673)

[31mViolation[0m for UnrestrictedWrite in contract 'Team':
    |                
    |                //adjust dev count and required dev signatures
  > |                devCount_ -= 1;
    |                if (requiredDevSignatures_ > 1) 
    |                {
  at FoMo3DlongUnlimited.sol(1676)

[31mViolation[0m for UnrestrictedWrite in contract 'Team':
    |                if (requiredDevSignatures_ > 1) 
    |                {
  > |                    requiredDevSignatures_ -= 1;
    |                }
    |            }
  at FoMo3DlongUnlimited.sol(1679)

[31mViolation[0m for UnrestrictedWrite in contract 'Team':
    |            
    |            // store new setting.
  > |            requiredSignatures_ = _howMany;
    |        }
    |    }
  at FoMo3DlongUnlimited.sol(1702)

[31mViolation[0m for UnrestrictedWrite in contract 'Team':
    |            
    |            // store new setting.
  > |            requiredDevSignatures_ = _howMany;
    |        }
    |    }
  at FoMo3DlongUnlimited.sol(1723)

[33mWarning[0m for UnrestrictedWrite in contract 'Team':
    |        // without having to bother with multisig.  this will still create a proposal though
    |        // so use the deleteAnyProposal to delete it if you want to
  > |        admins_[_who].name = _name;
    |    }
    |
  at FoMo3DlongUnlimited.sol(1624)

Processing contract: FoMo3Dshort.sol:F3DKeysCalcShort
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: FoMo3Dshort.sol:F3Ddatasets
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: FoMo3Dshort.sol:F3Devents
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: FoMo3Dshort.sol:FoMo3Dshort
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
java.io.IOException: Timeout for /tmp/binaries_souffle11158348211936403304/mustExplicit -j 8 -F /tmp/souffle-b231e7f1-86c1-4da3-9724-322e5763162a -D /tmp/souffle-b231e7f1-86c1-4da3-9724-322e5763162a_OUT
	at ch.securify.analysis.AbstractDataflow.runCommand(AbstractDataflow.java:277)
	at ch.securify.analysis.AbstractDataflow.initDataflow(AbstractDataflow.java:169)
	at ch.securify.analysis.MustExplicitDataflow.<init>(MustExplicitDataflow.java:33)
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:33)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error in Securify
java.lang.RuntimeException
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:37)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error, skipping: FoMo3Dshort.sol:FoMo3Dshort
Processing contract: FoMo3Dshort.sol:NameFilter
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: FoMo3Dshort.sol:PlayerBookInterface
Processing contract: FoMo3Dshort.sol:SafeMath
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: FoMo3Dshort.sol:modularShort
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: FoMo3DshortAgain.sol:F3DKeysCalcShort
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: FoMo3DshortAgain.sol:F3Ddatasets
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: FoMo3DshortAgain.sol:F3Devents
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: FoMo3DshortAgain.sol:FoMo3DshortAgain
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
java.io.IOException: Timeout for /tmp/binaries_souffle6156330062481251124/mustExplicit -j 8 -F /tmp/souffle-abd0b17f-206c-42ba-804c-b3270b2c7e7f -D /tmp/souffle-abd0b17f-206c-42ba-804c-b3270b2c7e7f_OUT
	at ch.securify.analysis.AbstractDataflow.runCommand(AbstractDataflow.java:277)
	at ch.securify.analysis.AbstractDataflow.initDataflow(AbstractDataflow.java:169)
	at ch.securify.analysis.MustExplicitDataflow.<init>(MustExplicitDataflow.java:33)
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:33)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error in Securify
java.lang.RuntimeException
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:37)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error, skipping: FoMo3DshortAgain.sol:FoMo3DshortAgain
Processing contract: FoMo3DshortAgain.sol:NameFilter
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: FoMo3DshortAgain.sol:PlayerBookInterface
Processing contract: FoMo3DshortAgain.sol:SafeMath
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: FoMo3DshortAgain.sol:modularShort
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: FoMo3Dsmall.sol:F3DKeysCalcShort
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: FoMo3Dsmall.sol:F3Ddatasets
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: FoMo3Dsmall.sol:F3Devents
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: FoMo3Dsmall.sol:FoMo3Dsmall
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
java.io.IOException: Timeout for /tmp/binaries_souffle5584600631097667343/mustExplicit -j 8 -F /tmp/souffle-d0996534-d10f-4e38-b567-39479a93cc08 -D /tmp/souffle-d0996534-d10f-4e38-b567-39479a93cc08_OUT
	at ch.securify.analysis.AbstractDataflow.runCommand(AbstractDataflow.java:277)
	at ch.securify.analysis.AbstractDataflow.initDataflow(AbstractDataflow.java:169)
	at ch.securify.analysis.MustExplicitDataflow.<init>(MustExplicitDataflow.java:33)
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:33)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error in Securify
java.lang.RuntimeException
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:37)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error, skipping: FoMo3Dsmall.sol:FoMo3Dsmall
Processing contract: FoMo3Dsmall.sol:NameFilter
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: FoMo3Dsmall.sol:PlayerBookInterface
Processing contract: FoMo3Dsmall.sol:SafeMath
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: FoMo3Dthunder.sol:F3DKeysCalcShort
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: FoMo3Dthunder.sol:F3Ddatasets
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: FoMo3Dthunder.sol:F3Devents
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: FoMo3Dthunder.sol:FoMo3Dthunder
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
java.io.IOException: Timeout for /tmp/binaries_souffle16597685518464486270/mustExplicit -j 8 -F /tmp/souffle-239fd19a-fd6a-4aac-91f5-c8d811cdab13 -D /tmp/souffle-239fd19a-fd6a-4aac-91f5-c8d811cdab13_OUT
	at ch.securify.analysis.AbstractDataflow.runCommand(AbstractDataflow.java:277)
	at ch.securify.analysis.AbstractDataflow.initDataflow(AbstractDataflow.java:169)
	at ch.securify.analysis.MustExplicitDataflow.<init>(MustExplicitDataflow.java:33)
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:33)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error in Securify
java.lang.RuntimeException
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:37)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error, skipping: FoMo3Dthunder.sol:FoMo3Dthunder
Processing contract: FoMo3Dthunder.sol:NameFilter
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: FoMo3Dthunder.sol:PlayerBookInterface
Processing contract: FoMo3Dthunder.sol:SafeMath
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: FoMo3Dthunder.sol:modularThunder
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: FoMoGame.sol:DiviesInterface
Processing contract: FoMoGame.sol:F3DKeysCalcLong
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: FoMoGame.sol:F3Ddatasets
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: FoMoGame.sol:F3Devents
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: FoMoGame.sol:FoMoGame
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
java.io.IOException: Timeout for /tmp/binaries_souffle12655215722136022753/mustExplicit -j 8 -F /tmp/souffle-a05b852b-de87-40f8-99c6-01cc1aa27832 -D /tmp/souffle-a05b852b-de87-40f8-99c6-01cc1aa27832_OUT
	at ch.securify.analysis.AbstractDataflow.runCommand(AbstractDataflow.java:277)
	at ch.securify.analysis.AbstractDataflow.initDataflow(AbstractDataflow.java:169)
	at ch.securify.analysis.MustExplicitDataflow.<init>(MustExplicitDataflow.java:33)
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:33)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error in Securify
java.lang.RuntimeException
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:37)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error, skipping: FoMoGame.sol:FoMoGame
Processing contract: FoMoGame.sol:ForwarderInterface
Processing contract: FoMoGame.sol:NameFilter
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: FoMoGame.sol:PlayerBookInterface
Processing contract: FoMoGame.sol:SafeMath
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: FoMoGame.sol:modularLong
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: FoMoGame.sol:otherFoMo3D
Processing contract: FoMoRapid.sol:DiviesInterface
Processing contract: FoMoRapid.sol:F3DKeysCalcFast
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: FoMoRapid.sol:F3Ddatasets
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: FoMoRapid.sol:F3Devents
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: FoMoRapid.sol:FoMoRapid
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
java.io.IOException: Timeout for /tmp/binaries_souffle8699536895843735515/mustExplicit -j 8 -F /tmp/souffle-1f451dde-c9d6-48e1-bdaa-7de3bd0c4fbb -D /tmp/souffle-1f451dde-c9d6-48e1-bdaa-7de3bd0c4fbb_OUT
	at ch.securify.analysis.AbstractDataflow.runCommand(AbstractDataflow.java:277)
	at ch.securify.analysis.AbstractDataflow.initDataflow(AbstractDataflow.java:169)
	at ch.securify.analysis.MustExplicitDataflow.<init>(MustExplicitDataflow.java:33)
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:33)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error in Securify
java.lang.RuntimeException
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:37)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error, skipping: FoMoRapid.sol:FoMoRapid
Processing contract: FoMoRapid.sol:JIincForwarderInterface
Processing contract: FoMoRapid.sol:NameFilter
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: FoMoRapid.sol:PlayerBookInterface
Processing contract: FoMoRapid.sol:SafeMath
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: Fomo12H.sol:F3DKeysCalcShort
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: Fomo12H.sol:F3Ddatasets
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: Fomo12H.sol:F3Devents
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: Fomo12H.sol:FoMo12H
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
java.io.IOException: Timeout for /tmp/binaries_souffle4942425547612954381/mustExplicit -j 8 -F /tmp/souffle-8aeaff78-2ed3-4e3f-851e-2c3724958412 -D /tmp/souffle-8aeaff78-2ed3-4e3f-851e-2c3724958412_OUT
	at ch.securify.analysis.AbstractDataflow.runCommand(AbstractDataflow.java:277)
	at ch.securify.analysis.AbstractDataflow.initDataflow(AbstractDataflow.java:169)
	at ch.securify.analysis.MustExplicitDataflow.<init>(MustExplicitDataflow.java:33)
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:33)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error in Securify
java.lang.RuntimeException
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:37)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error, skipping: Fomo12H.sol:FoMo12H
Processing contract: Fomo12H.sol:NameFilter
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: Fomo12H.sol:PlayerBookInterface
Processing contract: Fomo12H.sol:SafeMath
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: Fomo12H.sol:modularShort
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: Fomo3H.sol:F3DKeysCalcShort
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: Fomo3H.sol:FEPdatasets
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: Fomo3H.sol:FEPevents
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: Fomo3H.sol:Fomo3H
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
java.io.IOException: Timeout for /tmp/binaries_souffle18381327796160180099/mustExplicit -j 8 -F /tmp/souffle-080a7929-7715-4b21-b99a-f7b9ad2c2af7 -D /tmp/souffle-080a7929-7715-4b21-b99a-f7b9ad2c2af7_OUT
	at ch.securify.analysis.AbstractDataflow.runCommand(AbstractDataflow.java:277)
	at ch.securify.analysis.AbstractDataflow.initDataflow(AbstractDataflow.java:169)
	at ch.securify.analysis.MustExplicitDataflow.<init>(MustExplicitDataflow.java:33)
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:33)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error in Securify
java.lang.RuntimeException
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:37)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error, skipping: Fomo3H.sol:Fomo3H
Processing contract: Fomo3H.sol:NameFilter
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: Fomo3H.sol:PlayerBookInterface
Processing contract: Fomo3H.sol:SafeMath
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: Fomo3H.sol:modularShort
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: FomoDD.sol:BankInterfaceForForwarder
Processing contract: FomoDD.sol:FDDEvents
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: FomoDD.sol:FDDKeysCalc
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: FomoDD.sol:FDDdatasets
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: FomoDD.sol:FomoDD
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
java.io.IOException: Timeout for /tmp/binaries_souffle11199667276392539757/mustExplicit -j 8 -F /tmp/souffle-b18f4f11-f02d-4746-a401-8611ab185851 -D /tmp/souffle-b18f4f11-f02d-4746-a401-8611ab185851_OUT
	at ch.securify.analysis.AbstractDataflow.runCommand(AbstractDataflow.java:277)
	at ch.securify.analysis.AbstractDataflow.initDataflow(AbstractDataflow.java:169)
	at ch.securify.analysis.MustExplicitDataflow.<init>(MustExplicitDataflow.java:33)
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:33)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error in Securify
java.lang.RuntimeException
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:37)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error, skipping: FomoDD.sol:FomoDD
Processing contract: FomoDD.sol:NameFilter
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: FomoDD.sol:PlayerBookInterface
Processing contract: FomoDD.sol:SafeMath
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: FomoDD.sol:modularFomoDD
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: FomoSuper.sol:F3DKeysCalcShort
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: FomoSuper.sol:F3Ddatasets
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: FomoSuper.sol:F3Devents
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: FomoSuper.sol:FomoSuper
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
java.io.IOException: Timeout for /tmp/binaries_souffle17337386904534395835/mustExplicit -j 8 -F /tmp/souffle-7aae72d0-0561-4ba7-8c9c-f157048a1521 -D /tmp/souffle-7aae72d0-0561-4ba7-8c9c-f157048a1521_OUT
	at ch.securify.analysis.AbstractDataflow.runCommand(AbstractDataflow.java:277)
	at ch.securify.analysis.AbstractDataflow.initDataflow(AbstractDataflow.java:169)
	at ch.securify.analysis.MustExplicitDataflow.<init>(MustExplicitDataflow.java:33)
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:33)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error in Securify
java.lang.RuntimeException
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:37)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error, skipping: FomoSuper.sol:FomoSuper
Processing contract: FomoSuper.sol:NameFilter
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: FomoSuper.sol:PlayerBookInterface
Processing contract: FomoSuper.sol:SafeMath
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: FomoSuper.sol:modularShort
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: FomoXP.sol:F3DKeysCalcShort
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: FomoXP.sol:F3Ddatasets
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: FomoXP.sol:F3Devents
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: FomoXP.sol:FomoXP
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
java.io.IOException: Timeout for /tmp/binaries_souffle4967333025546644948/mustExplicit -j 8 -F /tmp/souffle-d13718a2-3442-48a4-ba0e-5985fe44ecef -D /tmp/souffle-d13718a2-3442-48a4-ba0e-5985fe44ecef_OUT
	at ch.securify.analysis.AbstractDataflow.runCommand(AbstractDataflow.java:277)
	at ch.securify.analysis.AbstractDataflow.initDataflow(AbstractDataflow.java:169)
	at ch.securify.analysis.MustExplicitDataflow.<init>(MustExplicitDataflow.java:33)
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:33)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error in Securify
java.lang.RuntimeException
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:37)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error, skipping: FomoXP.sol:FomoXP
Processing contract: FomoXP.sol:NameFilter
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: FomoXP.sol:PlayerBookInterface
Processing contract: FomoXP.sol:SafeMath
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: FomoXP.sol:modularShort
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: FuMoToken.sol:DiviesInterface
Processing contract: FuMoToken.sol:F3DKeysCalcLong
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: FuMoToken.sol:F3Ddatasets
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: FuMoToken.sol:F3Devents
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: FuMoToken.sol:ForwarderInterface
Processing contract: FuMoToken.sol:FuMoToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
java.io.IOException: Timeout for /tmp/binaries_souffle6772924034670719478/mustExplicit -j 8 -F /tmp/souffle-9f4ce84e-01cc-4e1b-b12a-c5ddcf516eb4 -D /tmp/souffle-9f4ce84e-01cc-4e1b-b12a-c5ddcf516eb4_OUT
	at ch.securify.analysis.AbstractDataflow.runCommand(AbstractDataflow.java:277)
	at ch.securify.analysis.AbstractDataflow.initDataflow(AbstractDataflow.java:169)
	at ch.securify.analysis.MustExplicitDataflow.<init>(MustExplicitDataflow.java:33)
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:33)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error in Securify
java.lang.RuntimeException
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:37)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error, skipping: FuMoToken.sol:FuMoToken
Processing contract: FuMoToken.sol:NameFilter
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: FuMoToken.sol:PlayerBookInterface
Processing contract: FuMoToken.sol:SafeMath
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: FuMoToken.sol:modularLong
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: FuMoToken.sol:otherFoMo3D
Processing contract: FullFOMO.sol:F3DKeysCalcShort
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: FullFOMO.sol:F3Ddatasets
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: FullFOMO.sol:F3Devents
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: FullFOMO.sol:FullFOMO
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
java.io.IOException: Timeout for /tmp/binaries_souffle10925572556784058484/mustExplicit -j 8 -F /tmp/souffle-24dade1e-1390-46cd-8569-f8c74a189137 -D /tmp/souffle-24dade1e-1390-46cd-8569-f8c74a189137_OUT
	at ch.securify.analysis.AbstractDataflow.runCommand(AbstractDataflow.java:277)
	at ch.securify.analysis.AbstractDataflow.initDataflow(AbstractDataflow.java:169)
	at ch.securify.analysis.MustExplicitDataflow.<init>(MustExplicitDataflow.java:33)
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:33)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error in Securify
java.lang.RuntimeException
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:37)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error, skipping: FullFOMO.sol:FullFOMO
Processing contract: FullFOMO.sol:NameFilter
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: FullFOMO.sol:PlayerBookInterface
Processing contract: FullFOMO.sol:SafeMath
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: FullFOMO.sol:modularShort
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: GoalbonanzaPlus.sol:GoalbonanzaBookInterface
Processing contract: GoalbonanzaPlus.sol:GoalbonanzaInterfaceForForwarder
Processing contract: GoalbonanzaPlus.sol:GoalbonanzaPlus
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
java.io.IOException: Timeout for /tmp/binaries_souffle608295133014008189/mustExplicit -j 8 -F /tmp/souffle-eb9f975a-b37d-4d0e-b5c5-ce9616975223 -D /tmp/souffle-eb9f975a-b37d-4d0e-b5c5-ce9616975223_OUT
	at ch.securify.analysis.AbstractDataflow.runCommand(AbstractDataflow.java:277)
	at ch.securify.analysis.AbstractDataflow.initDataflow(AbstractDataflow.java:169)
	at ch.securify.analysis.MustExplicitDataflow.<init>(MustExplicitDataflow.java:33)
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:33)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error in Securify
java.lang.RuntimeException
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:37)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error, skipping: GoalbonanzaPlus.sol:GoalbonanzaPlus
Processing contract: GoalbonanzaPlus.sol:NameFilter
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: GoalbonanzaPlus.sol:RSEvents
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: GoalbonanzaPlus.sol:RSKeysCalc
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: GoalbonanzaPlus.sol:RSdatasets
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: GoalbonanzaPlus.sol:SafeMath
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: GoalbonanzaPlus.sol:modularGoalbonanzaPlus
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: GoalbonanzaPlusLong.sol:GoalbonanzaBookInterface
Processing contract: GoalbonanzaPlusLong.sol:GoalbonanzaInterfaceForForwarder
Processing contract: GoalbonanzaPlusLong.sol:GoalbonanzaPlusLong
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
java.io.IOException: Timeout for /tmp/binaries_souffle15788065501811670786/mustExplicit -j 8 -F /tmp/souffle-9b3c94cf-19b0-4009-a619-158499301ab6 -D /tmp/souffle-9b3c94cf-19b0-4009-a619-158499301ab6_OUT
	at ch.securify.analysis.AbstractDataflow.runCommand(AbstractDataflow.java:277)
	at ch.securify.analysis.AbstractDataflow.initDataflow(AbstractDataflow.java:169)
	at ch.securify.analysis.MustExplicitDataflow.<init>(MustExplicitDataflow.java:33)
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:33)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error in Securify
java.lang.RuntimeException
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:37)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error, skipping: GoalbonanzaPlusLong.sol:GoalbonanzaPlusLong
Processing contract: GoalbonanzaPlusLong.sol:NameFilter
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: GoalbonanzaPlusLong.sol:RSEvents
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: GoalbonanzaPlusLong.sol:RSKeysCalc
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: GoalbonanzaPlusLong.sol:RSdatasets
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: GoalbonanzaPlusLong.sol:SafeMath
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: GoalbonanzaPlusLong.sol:modularGoalbonanzaPlus
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: GrandTheftFOMO.sol:F3DKeysCalcShort
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: GrandTheftFOMO.sol:F3Ddatasets
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: GrandTheftFOMO.sol:F3Devents
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: GrandTheftFOMO.sol:GrandTheftFOMO
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
java.io.IOException: Timeout for /tmp/binaries_souffle2893443844078372872/mustExplicit -j 8 -F /tmp/souffle-75de071d-07a1-44dc-b993-12cf52619e95 -D /tmp/souffle-75de071d-07a1-44dc-b993-12cf52619e95_OUT
	at ch.securify.analysis.AbstractDataflow.runCommand(AbstractDataflow.java:277)
	at ch.securify.analysis.AbstractDataflow.initDataflow(AbstractDataflow.java:169)
	at ch.securify.analysis.MustExplicitDataflow.<init>(MustExplicitDataflow.java:33)
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:33)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error in Securify
java.lang.RuntimeException
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:37)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error, skipping: GrandTheftFOMO.sol:GrandTheftFOMO
Processing contract: GrandTheftFOMO.sol:NameFilter
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: GrandTheftFOMO.sol:PlayerBookInterface
Processing contract: GrandTheftFOMO.sol:SafeMath
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: GrandTheftFOMO.sol:modularShort
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: H3FoMo3Dlong.sol:DiviesInterface
Processing contract: H3FoMo3Dlong.sol:F3DKeysCalcLong
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: H3FoMo3Dlong.sol:F3Ddatasets
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: H3FoMo3Dlong.sol:F3Devents
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: H3FoMo3Dlong.sol:F3DexternalSettingsInterface
Processing contract: H3FoMo3Dlong.sol:H3FoMo3Dlong
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
java.io.IOException: Timeout for /tmp/binaries_souffle12999332765811598839/mustExplicit -j 8 -F /tmp/souffle-8b4bf62e-cb1b-4a92-b29a-df12ea27effe -D /tmp/souffle-8b4bf62e-cb1b-4a92-b29a-df12ea27effe_OUT
	at ch.securify.analysis.AbstractDataflow.runCommand(AbstractDataflow.java:277)
	at ch.securify.analysis.AbstractDataflow.initDataflow(AbstractDataflow.java:169)
	at ch.securify.analysis.MustExplicitDataflow.<init>(MustExplicitDataflow.java:33)
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:33)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error in Securify
java.lang.RuntimeException
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:37)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error, skipping: H3FoMo3Dlong.sol:H3FoMo3Dlong
Processing contract: H3FoMo3Dlong.sol:JIincForwarderInterface
Processing contract: H3FoMo3Dlong.sol:NameFilter
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: H3FoMo3Dlong.sol:PlayerBookInterface
Processing contract: H3FoMo3Dlong.sol:SafeMath
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: H3FoMo3Dlong.sol:modularLong
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: H3FoMo3Dlong.sol:otherFoMo3D
Processing contract: JanKenPon.sol:HourglassInterface
Processing contract: JanKenPon.sol:J3DKeysCalcLong
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: JanKenPon.sol:J3Ddatasets
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: JanKenPon.sol:J3Devents
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: JanKenPon.sol:JIincForwarderInterface
Processing contract: JanKenPon.sol:JanKenPon
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
java.io.IOException: Timeout for /tmp/binaries_souffle832781007050901338/mustExplicit -j 8 -F /tmp/souffle-2521f1af-946e-4012-9f08-ed7392b77ae9 -D /tmp/souffle-2521f1af-946e-4012-9f08-ed7392b77ae9_OUT
	at ch.securify.analysis.AbstractDataflow.runCommand(AbstractDataflow.java:277)
	at ch.securify.analysis.AbstractDataflow.initDataflow(AbstractDataflow.java:169)
	at ch.securify.analysis.MustExplicitDataflow.<init>(MustExplicitDataflow.java:33)
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:33)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error in Securify
java.lang.RuntimeException
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:37)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error, skipping: JanKenPon.sol:JanKenPon
Processing contract: JanKenPon.sol:NameFilter
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: JanKenPon.sol:PlayerBookInterface
Processing contract: JanKenPon.sol:SafeMath
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: JanKenPon.sol:UintCompressor
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: JanKenPon.sol:modularLong
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: LEGALBLOCK.sol:AddressUtils
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: LEGALBLOCK.sol:BasicToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: LEGALBLOCK.sol:DelayLockableToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: LEGALBLOCK.sol:ERC20
Processing contract: LEGALBLOCK.sol:ERC20Basic
Processing contract: LEGALBLOCK.sol:LBKBaseToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
java.io.IOException: Timeout for /tmp/binaries_souffle15070978145903419161/mustExplicit -j 8 -F /tmp/souffle-6e5fe0f8-0ea0-4444-9f4f-8f0b0fdc3d83 -D /tmp/souffle-6e5fe0f8-0ea0-4444-9f4f-8f0b0fdc3d83_OUT
	at ch.securify.analysis.AbstractDataflow.runCommand(AbstractDataflow.java:277)
	at ch.securify.analysis.AbstractDataflow.initDataflow(AbstractDataflow.java:169)
	at ch.securify.analysis.MustExplicitDataflow.<init>(MustExplicitDataflow.java:33)
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:33)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error in Securify
java.lang.RuntimeException
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:37)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error, skipping: LEGALBLOCK.sol:LBKBaseToken
Processing contract: LEGALBLOCK.sol:LBKDappSample
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: LEGALBLOCK.sol:LBKReceiver
Processing contract: LEGALBLOCK.sol:LEGALBLOCK
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
java.io.IOException: Timeout for /tmp/binaries_souffle15070978145903419161/mustExplicit -j 8 -F /tmp/souffle-768f12d6-0dc0-42e1-be4e-972d8a3ebb1e -D /tmp/souffle-768f12d6-0dc0-42e1-be4e-972d8a3ebb1e_OUT
	at ch.securify.analysis.AbstractDataflow.runCommand(AbstractDataflow.java:277)
	at ch.securify.analysis.AbstractDataflow.initDataflow(AbstractDataflow.java:169)
	at ch.securify.analysis.MustExplicitDataflow.<init>(MustExplicitDataflow.java:33)
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:33)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error in Securify
java.lang.RuntimeException
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:37)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error, skipping: LEGALBLOCK.sol:LEGALBLOCK
Processing contract: LEGALBLOCK.sol:LockableToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: LEGALBLOCK.sol:MultiOwnable
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: LEGALBLOCK.sol:SafeMath
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: LEGALBLOCK.sol:StandardToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
[33mWarning[0m for UnrestrictedWrite in contract 'BasicToken':
    |
    |        balances[msg.sender] = balances[msg.sender].sub(_value);
  > |        balances[_to] = balances[_to].add(_value);
    |        emit Transfer(msg.sender, _to, _value);
    |        return true;
  at LEGALBLOCK.sol(93)

[31mViolation[0m for LockedEther in contract 'DelayLockableToken':
    | * dev 보안 차원에서 본인 계좌 잔고에 lock 을 걸 수 있다. 잔고 제한 기준을 낮추면 적용되기까지 12시간을 기다려야 한다.
    | */
  > |contract DelayLockableToken is LockableToken {
    |    mapping(address => uint256) public delayLockValues;
    |    mapping(address => uint256) public delayLockBeforeValues;
  at LEGALBLOCK.sol(491)

[33mWarning[0m for UnrestrictedWrite in contract 'DelayLockableToken':
    |
    |        if (votingNumForRoot > ownerList.length / 2) { // 과반수 이상이면 DAO 성립 => root 교체
  > |            root = newRoot;
    |
    |            // 초기화
  at LEGALBLOCK.sol(363)

[33mWarning[0m for UnrestrictedWrite in contract 'DelayLockableToken':
    |            // 초기화
    |            for (i = 0; i < ownerList.length; i++) {
  > |                delete candidateRootMap[ownerList[i]];
    |            }
    |
  at LEGALBLOCK.sol(367)

[33mWarning[0m for UnrestrictedWrite in contract 'DelayLockableToken':
    |
    |    function lock(string note) onlyOwner public {
  > |        locked = true;
    |        emit Locked(locked, note);
    |    }
  at LEGALBLOCK.sol(438)

[33mWarning[0m for UnrestrictedWrite in contract 'DelayLockableToken':
    |
    |    function unlock(string note) onlyOwner public {
  > |        locked = false;
    |        emit Locked(locked, note);
    |    }
  at LEGALBLOCK.sol(443)

[33mWarning[0m for UnrestrictedWrite in contract 'DelayLockableToken':
    |    function lockTo(address addr, string note) onlyOwner public {
    |        setLockValue(addr, LOCK_MAX, note);
  > |        unlockAddrs[addr] = false;
    |
    |        emit LockedTo(addr, true, note);
  at LEGALBLOCK.sol(449)

[33mWarning[0m for UnrestrictedWrite in contract 'DelayLockableToken':
    |        if (lockValues[addr] == LOCK_MAX)
    |            setLockValue(addr, 0, note);
  > |        unlockAddrs[addr] = true;
    |
    |        emit LockedTo(addr, false, note);
  at LEGALBLOCK.sol(457)

[33mWarning[0m for UnrestrictedWrite in contract 'DelayLockableToken':
    |
    |    function setLockValue(address addr, uint256 value, string note) onlyOwner public {
  > |        lockValues[addr] = value;
    |        emit SetLockValue(addr, value, note);
    |    }
  at LEGALBLOCK.sol(463)

[33mWarning[0m for UnrestrictedWrite in contract 'DelayLockableToken':
    | * dev 보안 차원에서 본인 계좌 잔고에 lock 을 걸 수 있다. 잔고 제한 기준을 낮추면 적용되기까지 12시간을 기다려야 한다.
    | */
  > |contract DelayLockableToken is LockableToken {
    |    mapping(address => uint256) public delayLockValues;
    |    mapping(address => uint256) public delayLockBeforeValues;
  at LEGALBLOCK.sol(491)

[31mViolation[0m for MissingInputValidation in contract 'LBKDappSample':
    |    event LogOnReceiveLBK(string message, address indexed owner, address indexed spender, uint256 value, LBKReceiveType receiveType);
    |
  > |    function onLBKReceived(address owner, address spender, uint256 value, LBKReceiveType receiveType) public returns (bool) {
    |        emit LogOnReceiveLBK("I receive LEGALBLOCK.", owner, spender, value, receiveType);
    |        return true;
  at LEGALBLOCK.sol(883)

[31mViolation[0m for LockedEther in contract 'LockableToken':
    | * @title Lockable token
    | */
  > |contract LockableToken is StandardToken, MultiOwnable {
    |    bool public locked = true;
    |    uint256 public constant LOCK_MAX = uint256(-1);
  at LEGALBLOCK.sol(407)

[33mWarning[0m for UnrestrictedWrite in contract 'LockableToken':
    |
    |        if (votingNumForRoot > ownerList.length / 2) { // 과반수 이상이면 DAO 성립 => root 교체
  > |            root = newRoot;
    |
    |            // 초기화
  at LEGALBLOCK.sol(363)

[33mWarning[0m for UnrestrictedWrite in contract 'LockableToken':
    |            // 초기화
    |            for (i = 0; i < ownerList.length; i++) {
  > |                delete candidateRootMap[ownerList[i]];
    |            }
    |
  at LEGALBLOCK.sol(367)

[33mWarning[0m for UnrestrictedWrite in contract 'LockableToken':
    | * @title Lockable token
    | */
  > |contract LockableToken is StandardToken, MultiOwnable {
    |    bool public locked = true;
    |    uint256 public constant LOCK_MAX = uint256(-1);
  at LEGALBLOCK.sol(407)

[33mWarning[0m for UnrestrictedWrite in contract 'LockableToken':
    |
    |    function lock(string note) onlyOwner public {
  > |        locked = true;
    |        emit Locked(locked, note);
    |    }
  at LEGALBLOCK.sol(438)

[33mWarning[0m for UnrestrictedWrite in contract 'LockableToken':
    |
    |    function unlock(string note) onlyOwner public {
  > |        locked = false;
    |        emit Locked(locked, note);
    |    }
  at LEGALBLOCK.sol(443)

[33mWarning[0m for UnrestrictedWrite in contract 'LockableToken':
    |    function lockTo(address addr, string note) onlyOwner public {
    |        setLockValue(addr, LOCK_MAX, note);
  > |        unlockAddrs[addr] = false;
    |
    |        emit LockedTo(addr, true, note);
  at LEGALBLOCK.sol(449)

[33mWarning[0m for UnrestrictedWrite in contract 'LockableToken':
    |        if (lockValues[addr] == LOCK_MAX)
    |            setLockValue(addr, 0, note);
  > |        unlockAddrs[addr] = true;
    |
    |        emit LockedTo(addr, false, note);
  at LEGALBLOCK.sol(457)

[33mWarning[0m for UnrestrictedWrite in contract 'LockableToken':
    |
    |    function setLockValue(address addr, uint256 value, string note) onlyOwner public {
  > |        lockValues[addr] = value;
    |        emit SetLockValue(addr, value, note);
    |    }
  at LEGALBLOCK.sol(463)

[31mViolation[0m for LockedEther in contract 'MultiOwnable':
    | * dev
    | */
  > |contract MultiOwnable {
    |    using SafeMath for uint256;
    |
  at LEGALBLOCK.sol(278)

[31mViolation[0m for UnrestrictedWrite in contract 'MultiOwnable':
    | * dev
    | */
  > |contract MultiOwnable {
    |    using SafeMath for uint256;
    |
  at LEGALBLOCK.sol(278)

[31mViolation[0m for UnrestrictedWrite in contract 'MultiOwnable':
    |
    |        if (votingNumForRoot > ownerList.length / 2) { // 과반수 이상이면 DAO 성립 => root 교체
  > |            root = newRoot;
    |
    |            // 초기화
  at LEGALBLOCK.sol(363)

[31mViolation[0m for UnrestrictedWrite in contract 'MultiOwnable':
    |            // 초기화
    |            for (i = 0; i < ownerList.length; i++) {
  > |                delete candidateRootMap[ownerList[i]];
    |            }
    |
  at LEGALBLOCK.sol(367)

[31mViolation[0m for UnrestrictedWrite in contract 'MultiOwnable':
    |        for (uint256 i = 0; i < ownerList.length; i++) {
    |            if (ownerList[i] == owner) {
  > |                ownerList[i] = ownerList[ownerList.length.sub(1)];
    |                ownerList.length = ownerList.length.sub(1);
    |                break;
  at LEGALBLOCK.sol(393)

[33mWarning[0m for UnrestrictedWrite in contract 'MultiOwnable':
    |
    |/**
  > | * @title ERC20Basic
    | * dev Simpler version of ERC20 interface
    | * See https://github.com/ethereum/EIPs/issues/179
  at LEGALBLOCK.sol(4)

[33mWarning[0m for UnrestrictedWrite in contract 'MultiOwnable':
    |        require(newRoot != address(0), "This address to be set is zero address(0). Check the input address.");
    |
  > |        root = newRoot;
    |
    |        emit ChangedRoot(newRoot);
  at LEGALBLOCK.sol(326)

[33mWarning[0m for UnrestrictedWrite in contract 'MultiOwnable':
    |        require(newSuperOwner != address(0), "This address to be set is zero address(0). Check the input address.");
    |
  > |        superOwner = newSuperOwner;
    |
    |        emit ChangedSuperOwner(newSuperOwner);
  at LEGALBLOCK.sol(339)

[33mWarning[0m for UnrestrictedWrite in contract 'MultiOwnable':
    |        require(!owners[owner], "This address is already registered.");
    |
  > |        owners[owner] = true;
    |        ownerList.push(owner);
    |
  at LEGALBLOCK.sol(380)

[33mWarning[0m for UnrestrictedWrite in contract 'MultiOwnable':
    |
    |        owners[owner] = true;
  > |        ownerList.push(owner);
    |
    |        emit AddedNewOwner(owner);
  at LEGALBLOCK.sol(381)

[33mWarning[0m for UnrestrictedWrite in contract 'MultiOwnable':
    |    function deleteOwner(address owner) onlySuperOwner public returns (bool) {
    |        require(owners[owner], "This input address is not a super owner.");
  > |        delete owners[owner];
    |
    |        for (uint256 i = 0; i < ownerList.length; i++) {
  at LEGALBLOCK.sol(389)

[33mWarning[0m for UnrestrictedWrite in contract 'StandardToken':
    |
    |        balances[msg.sender] = balances[msg.sender].sub(_value);
  > |        balances[_to] = balances[_to].add(_value);
    |        emit Transfer(msg.sender, _to, _value);
    |        return true;
  at LEGALBLOCK.sol(93)

[33mWarning[0m for UnrestrictedWrite in contract 'StandardToken':
    |        require(_value <= allowed[_from][msg.sender], "Insufficient tokens approved from account owner.");
    |
  > |        balances[_from] = balances[_from].sub(_value);
    |        balances[_to] = balances[_to].add(_value);
    |        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);
  at LEGALBLOCK.sol(158)

[33mWarning[0m for UnrestrictedWrite in contract 'StandardToken':
    |
    |        balances[_from] = balances[_from].sub(_value);
  > |        balances[_to] = balances[_to].add(_value);
    |        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);
    |        emit Transfer(_from, _to, _value);
  at LEGALBLOCK.sol(159)

Processing contract: LEGALBLOCK.sol:AddressUtils
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: LEGALBLOCK.sol:BasicToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: LEGALBLOCK.sol:DelayLockableToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: LEGALBLOCK.sol:ERC20
Processing contract: LEGALBLOCK.sol:ERC20Basic
Processing contract: LEGALBLOCK.sol:LBKBaseToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
java.io.IOException: Timeout for /tmp/binaries_souffle10574326380536300375/mustExplicit -j 8 -F /tmp/souffle-88ca95cc-d26d-4d53-a398-858e1c3451a0 -D /tmp/souffle-88ca95cc-d26d-4d53-a398-858e1c3451a0_OUT
	at ch.securify.analysis.AbstractDataflow.runCommand(AbstractDataflow.java:277)
	at ch.securify.analysis.AbstractDataflow.initDataflow(AbstractDataflow.java:169)
	at ch.securify.analysis.MustExplicitDataflow.<init>(MustExplicitDataflow.java:33)
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:33)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error in Securify
java.lang.RuntimeException
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:37)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error, skipping: LEGALBLOCK.sol:LBKBaseToken
Processing contract: LEGALBLOCK.sol:LBKDappSample
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: LEGALBLOCK.sol:LBKReceiver
Processing contract: LEGALBLOCK.sol:LEGALBLOCK
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
java.io.IOException: Timeout for /tmp/binaries_souffle10574326380536300375/mustExplicit -j 8 -F /tmp/souffle-1571e7e0-2e98-47e0-98d0-f2a4dbcf348c -D /tmp/souffle-1571e7e0-2e98-47e0-98d0-f2a4dbcf348c_OUT
	at ch.securify.analysis.AbstractDataflow.runCommand(AbstractDataflow.java:277)
	at ch.securify.analysis.AbstractDataflow.initDataflow(AbstractDataflow.java:169)
	at ch.securify.analysis.MustExplicitDataflow.<init>(MustExplicitDataflow.java:33)
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:33)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error in Securify
java.lang.RuntimeException
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:37)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error, skipping: LEGALBLOCK.sol:LEGALBLOCK
Processing contract: LEGALBLOCK.sol:LockableToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: LEGALBLOCK.sol:MultiOwnable
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: LEGALBLOCK.sol:SafeMath
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: LEGALBLOCK.sol:StandardToken
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
[33mWarning[0m for UnrestrictedWrite in contract 'BasicToken':
    |
    |        balances[msg.sender] = balances[msg.sender].sub(_value);
  > |        balances[_to] = balances[_to].add(_value);
    |        emit Transfer(msg.sender, _to, _value);
    |        return true;
  at LEGALBLOCK.sol(93)

[31mViolation[0m for LockedEther in contract 'DelayLockableToken':
    | * dev 보안 차원에서 본인 계좌 잔고에 lock 을 걸 수 있다. 잔고 제한 기준을 낮추면 적용되기까지 12시간을 기다려야 한다.
    | */
  > |contract DelayLockableToken is LockableToken {
    |    mapping(address => uint256) public delayLockValues;
    |    mapping(address => uint256) public delayLockBeforeValues;
  at LEGALBLOCK.sol(491)

[33mWarning[0m for UnrestrictedWrite in contract 'DelayLockableToken':
    |
    |        if (votingNumForRoot > ownerList.length / 2) { // 과반수 이상이면 DAO 성립 => root 교체
  > |            root = newRoot;
    |
    |            // 초기화
  at LEGALBLOCK.sol(363)

[33mWarning[0m for UnrestrictedWrite in contract 'DelayLockableToken':
    |            // 초기화
    |            for (i = 0; i < ownerList.length; i++) {
  > |                delete candidateRootMap[ownerList[i]];
    |            }
    |
  at LEGALBLOCK.sol(367)

[33mWarning[0m for UnrestrictedWrite in contract 'DelayLockableToken':
    |
    |    function lock(string note) onlyOwner public {
  > |        locked = true;
    |        emit Locked(locked, note);
    |    }
  at LEGALBLOCK.sol(438)

[33mWarning[0m for UnrestrictedWrite in contract 'DelayLockableToken':
    |
    |    function unlock(string note) onlyOwner public {
  > |        locked = false;
    |        emit Locked(locked, note);
    |    }
  at LEGALBLOCK.sol(443)

[33mWarning[0m for UnrestrictedWrite in contract 'DelayLockableToken':
    |    function lockTo(address addr, string note) onlyOwner public {
    |        setLockValue(addr, LOCK_MAX, note);
  > |        unlockAddrs[addr] = false;
    |
    |        emit LockedTo(addr, true, note);
  at LEGALBLOCK.sol(449)

[33mWarning[0m for UnrestrictedWrite in contract 'DelayLockableToken':
    |        if (lockValues[addr] == LOCK_MAX)
    |            setLockValue(addr, 0, note);
  > |        unlockAddrs[addr] = true;
    |
    |        emit LockedTo(addr, false, note);
  at LEGALBLOCK.sol(457)

[33mWarning[0m for UnrestrictedWrite in contract 'DelayLockableToken':
    |
    |    function setLockValue(address addr, uint256 value, string note) onlyOwner public {
  > |        lockValues[addr] = value;
    |        emit SetLockValue(addr, value, note);
    |    }
  at LEGALBLOCK.sol(463)

[33mWarning[0m for UnrestrictedWrite in contract 'DelayLockableToken':
    | * dev 보안 차원에서 본인 계좌 잔고에 lock 을 걸 수 있다. 잔고 제한 기준을 낮추면 적용되기까지 12시간을 기다려야 한다.
    | */
  > |contract DelayLockableToken is LockableToken {
    |    mapping(address => uint256) public delayLockValues;
    |    mapping(address => uint256) public delayLockBeforeValues;
  at LEGALBLOCK.sol(491)

[31mViolation[0m for MissingInputValidation in contract 'LBKDappSample':
    |    event LogOnReceiveLBK(string message, address indexed owner, address indexed spender, uint256 value, LBKReceiveType receiveType);
    |
  > |    function onLBKReceived(address owner, address spender, uint256 value, LBKReceiveType receiveType) public returns (bool) {
    |        emit LogOnReceiveLBK("I receive LEGALBLOCK.", owner, spender, value, receiveType);
    |        return true;
  at LEGALBLOCK.sol(883)

[31mViolation[0m for LockedEther in contract 'LockableToken':
    | * @title Lockable token
    | */
  > |contract LockableToken is StandardToken, MultiOwnable {
    |    bool public locked = true;
    |    uint256 public constant LOCK_MAX = uint256(-1);
  at LEGALBLOCK.sol(407)

[33mWarning[0m for UnrestrictedWrite in contract 'LockableToken':
    |
    |        if (votingNumForRoot > ownerList.length / 2) { // 과반수 이상이면 DAO 성립 => root 교체
  > |            root = newRoot;
    |
    |            // 초기화
  at LEGALBLOCK.sol(363)

[33mWarning[0m for UnrestrictedWrite in contract 'LockableToken':
    |            // 초기화
    |            for (i = 0; i < ownerList.length; i++) {
  > |                delete candidateRootMap[ownerList[i]];
    |            }
    |
  at LEGALBLOCK.sol(367)

[33mWarning[0m for UnrestrictedWrite in contract 'LockableToken':
    | * @title Lockable token
    | */
  > |contract LockableToken is StandardToken, MultiOwnable {
    |    bool public locked = true;
    |    uint256 public constant LOCK_MAX = uint256(-1);
  at LEGALBLOCK.sol(407)

[33mWarning[0m for UnrestrictedWrite in contract 'LockableToken':
    |
    |    function lock(string note) onlyOwner public {
  > |        locked = true;
    |        emit Locked(locked, note);
    |    }
  at LEGALBLOCK.sol(438)

[33mWarning[0m for UnrestrictedWrite in contract 'LockableToken':
    |
    |    function unlock(string note) onlyOwner public {
  > |        locked = false;
    |        emit Locked(locked, note);
    |    }
  at LEGALBLOCK.sol(443)

[33mWarning[0m for UnrestrictedWrite in contract 'LockableToken':
    |    function lockTo(address addr, string note) onlyOwner public {
    |        setLockValue(addr, LOCK_MAX, note);
  > |        unlockAddrs[addr] = false;
    |
    |        emit LockedTo(addr, true, note);
  at LEGALBLOCK.sol(449)

[33mWarning[0m for UnrestrictedWrite in contract 'LockableToken':
    |        if (lockValues[addr] == LOCK_MAX)
    |            setLockValue(addr, 0, note);
  > |        unlockAddrs[addr] = true;
    |
    |        emit LockedTo(addr, false, note);
  at LEGALBLOCK.sol(457)

[33mWarning[0m for UnrestrictedWrite in contract 'LockableToken':
    |
    |    function setLockValue(address addr, uint256 value, string note) onlyOwner public {
  > |        lockValues[addr] = value;
    |        emit SetLockValue(addr, value, note);
    |    }
  at LEGALBLOCK.sol(463)

[31mViolation[0m for LockedEther in contract 'MultiOwnable':
    | * dev
    | */
  > |contract MultiOwnable {
    |    using SafeMath for uint256;
    |
  at LEGALBLOCK.sol(278)

[31mViolation[0m for UnrestrictedWrite in contract 'MultiOwnable':
    | * dev
    | */
  > |contract MultiOwnable {
    |    using SafeMath for uint256;
    |
  at LEGALBLOCK.sol(278)

[31mViolation[0m for UnrestrictedWrite in contract 'MultiOwnable':
    |
    |        if (votingNumForRoot > ownerList.length / 2) { // 과반수 이상이면 DAO 성립 => root 교체
  > |            root = newRoot;
    |
    |            // 초기화
  at LEGALBLOCK.sol(363)

[31mViolation[0m for UnrestrictedWrite in contract 'MultiOwnable':
    |            // 초기화
    |            for (i = 0; i < ownerList.length; i++) {
  > |                delete candidateRootMap[ownerList[i]];
    |            }
    |
  at LEGALBLOCK.sol(367)

[31mViolation[0m for UnrestrictedWrite in contract 'MultiOwnable':
    |        for (uint256 i = 0; i < ownerList.length; i++) {
    |            if (ownerList[i] == owner) {
  > |                ownerList[i] = ownerList[ownerList.length.sub(1)];
    |                ownerList.length = ownerList.length.sub(1);
    |                break;
  at LEGALBLOCK.sol(393)

[33mWarning[0m for UnrestrictedWrite in contract 'MultiOwnable':
    |
    |/**
  > | * @title ERC20Basic
    | * dev Simpler version of ERC20 interface
    | * See https://github.com/ethereum/EIPs/issues/179
  at LEGALBLOCK.sol(4)

[33mWarning[0m for UnrestrictedWrite in contract 'MultiOwnable':
    |        require(newRoot != address(0), "This address to be set is zero address(0). Check the input address.");
    |
  > |        root = newRoot;
    |
    |        emit ChangedRoot(newRoot);
  at LEGALBLOCK.sol(326)

[33mWarning[0m for UnrestrictedWrite in contract 'MultiOwnable':
    |        require(newSuperOwner != address(0), "This address to be set is zero address(0). Check the input address.");
    |
  > |        superOwner = newSuperOwner;
    |
    |        emit ChangedSuperOwner(newSuperOwner);
  at LEGALBLOCK.sol(339)

[33mWarning[0m for UnrestrictedWrite in contract 'MultiOwnable':
    |        require(!owners[owner], "This address is already registered.");
    |
  > |        owners[owner] = true;
    |        ownerList.push(owner);
    |
  at LEGALBLOCK.sol(380)

[33mWarning[0m for UnrestrictedWrite in contract 'MultiOwnable':
    |
    |        owners[owner] = true;
  > |        ownerList.push(owner);
    |
    |        emit AddedNewOwner(owner);
  at LEGALBLOCK.sol(381)

[33mWarning[0m for UnrestrictedWrite in contract 'MultiOwnable':
    |    function deleteOwner(address owner) onlySuperOwner public returns (bool) {
    |        require(owners[owner], "This input address is not a super owner.");
  > |        delete owners[owner];
    |
    |        for (uint256 i = 0; i < ownerList.length; i++) {
  at LEGALBLOCK.sol(389)

[33mWarning[0m for UnrestrictedWrite in contract 'StandardToken':
    |
    |        balances[msg.sender] = balances[msg.sender].sub(_value);
  > |        balances[_to] = balances[_to].add(_value);
    |        emit Transfer(msg.sender, _to, _value);
    |        return true;
  at LEGALBLOCK.sol(93)

[33mWarning[0m for UnrestrictedWrite in contract 'StandardToken':
    |        require(_value <= allowed[_from][msg.sender], "Insufficient tokens approved from account owner.");
    |
  > |        balances[_from] = balances[_from].sub(_value);
    |        balances[_to] = balances[_to].add(_value);
    |        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);
  at LEGALBLOCK.sol(158)

[33mWarning[0m for UnrestrictedWrite in contract 'StandardToken':
    |
    |        balances[_from] = balances[_from].sub(_value);
  > |        balances[_to] = balances[_to].add(_value);
    |        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);
    |        emit Transfer(_from, _to, _value);
  at LEGALBLOCK.sol(159)

Processing contract: LOLlong.sol:LOLKeysCalcLong
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: LOLlong.sol:LOLOfficalBankInterface
Processing contract: LOLlong.sol:LOLPlayerBookInterface
Processing contract: LOLlong.sol:LOLdatasets
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: LOLlong.sol:LOLevents
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: LOLlong.sol:LOLlong
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
java.io.IOException: Timeout for /tmp/binaries_souffle6141131843005088582/mustExplicit -j 8 -F /tmp/souffle-ec845e66-f60b-4bd5-84b6-1308878d94ad -D /tmp/souffle-ec845e66-f60b-4bd5-84b6-1308878d94ad_OUT
	at ch.securify.analysis.AbstractDataflow.runCommand(AbstractDataflow.java:277)
	at ch.securify.analysis.AbstractDataflow.initDataflow(AbstractDataflow.java:169)
	at ch.securify.analysis.MustExplicitDataflow.<init>(MustExplicitDataflow.java:33)
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:33)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error in Securify
java.lang.RuntimeException
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:37)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error, skipping: LOLlong.sol:LOLlong
Processing contract: LOLlong.sol:NameFilter
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: LOLlong.sol:Owned
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: LOLlong.sol:SafeMath
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: LOLlong.sol:modularLong
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for MissingInputValidation in contract 'Owned':
    |    }
    |
  > |    function transferOwnership(address _newOwner) public onlyOwner {
    |        newOwner = _newOwner;
    |    }
  at LOLlong.sol(25)

[33mWarning[0m for UnrestrictedWrite in contract 'Owned':
    |
    |    function transferOwnership(address _newOwner) public onlyOwner {
  > |        newOwner = _newOwner;
    |    }
    |    function acceptOwnership() public {
  at LOLlong.sol(26)

[33mWarning[0m for UnrestrictedWrite in contract 'Owned':
    |    function acceptOwnership() public {
    |        require(msg.sender == newOwner);
  > |        owner = newOwner;
    |        newOwner = address(0);
    |    }
  at LOLlong.sol(30)

[33mWarning[0m for UnrestrictedWrite in contract 'Owned':
    |        require(msg.sender == newOwner);
    |        owner = newOwner;
  > |        newOwner = address(0);
    |    }
    |}
  at LOLlong.sol(31)

Processing contract: LastUnicorn.sol:LastUnicorn
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
java.io.IOException: Timeout for /tmp/binaries_souffle11685559641081498705/mustExplicit -j 8 -F /tmp/souffle-77c17e3c-5c45-46b1-b6ad-4d183248c4c1 -D /tmp/souffle-77c17e3c-5c45-46b1-b6ad-4d183248c4c1_OUT
	at ch.securify.analysis.AbstractDataflow.runCommand(AbstractDataflow.java:277)
	at ch.securify.analysis.AbstractDataflow.initDataflow(AbstractDataflow.java:169)
	at ch.securify.analysis.MustExplicitDataflow.<init>(MustExplicitDataflow.java:33)
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:33)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error in Securify
java.lang.RuntimeException
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:37)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error, skipping: LastUnicorn.sol:LastUnicorn
Processing contract: LastUnicorn.sol:NameFilter
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: LastUnicorn.sol:RSEvents
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: LastUnicorn.sol:RSKeysCalc
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: LastUnicorn.sol:RSdatasets
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: LastUnicorn.sol:SafeMath
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: LastUnicorn.sol:UnicornBookInterface
Processing contract: LastUnicorn.sol:UnicornInterfaceForForwarder
Processing contract: LastUnicorn.sol:modularLastUnicorn
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: MC2long.sol:DiviesInterface
Processing contract: MC2long.sol:JIincForwarderInterface
Processing contract: MC2long.sol:MC2KeysCalcLong
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: MC2long.sol:MC2SettingInterface
Processing contract: MC2long.sol:MC2datasets
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: MC2long.sol:MC2events
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: MC2long.sol:MC2long
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
java.io.IOException: Timeout for /tmp/binaries_souffle8935923317009765065/mustExplicit -j 8 -F /tmp/souffle-1d3ca9cb-88ea-446d-86cc-4fd1b4fb9483 -D /tmp/souffle-1d3ca9cb-88ea-446d-86cc-4fd1b4fb9483_OUT
	at ch.securify.analysis.AbstractDataflow.runCommand(AbstractDataflow.java:277)
	at ch.securify.analysis.AbstractDataflow.initDataflow(AbstractDataflow.java:169)
	at ch.securify.analysis.MustExplicitDataflow.<init>(MustExplicitDataflow.java:33)
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:33)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error in Securify
java.lang.RuntimeException
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:37)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error, skipping: MC2long.sol:MC2long
Processing contract: MC2long.sol:NameFilter
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: MC2long.sol:PlayerBookInterface
Processing contract: MC2long.sol:SafeMath
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: MC2long.sol:modularLong
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: MC2long.sol:otherMC2
Processing contract: MonarchyController.sol:AddressSet
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: MonarchyController.sol:Bankrollable
Processing contract: MonarchyController.sol:HasDailyLimit
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: MonarchyController.sol:IMonarchyFactory
Processing contract: MonarchyController.sol:IMonarchyGame
Processing contract: MonarchyController.sol:IRegistry
Processing contract: MonarchyController.sol:ITreasury
Processing contract: MonarchyController.sol:Ledger
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: MonarchyController.sol:MonarchyController
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
java.io.IOException: Timeout for /tmp/binaries_souffle15080050209373946552/mustExplicit -j 8 -F /tmp/souffle-9e1b99ef-cbbf-4cc8-823d-26766fad3deb -D /tmp/souffle-9e1b99ef-cbbf-4cc8-823d-26766fad3deb_OUT
	at ch.securify.analysis.AbstractDataflow.runCommand(AbstractDataflow.java:277)
	at ch.securify.analysis.AbstractDataflow.initDataflow(AbstractDataflow.java:169)
	at ch.securify.analysis.MustExplicitDataflow.<init>(MustExplicitDataflow.java:33)
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:33)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error in Securify
java.lang.RuntimeException
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:37)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error, skipping: MonarchyController.sol:MonarchyController
Processing contract: MonarchyController.sol:UsingAdmin
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: MonarchyController.sol:UsingMonarchyFactory
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: MonarchyController.sol:UsingRegistry
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
Processing contract: MonarchyController.sol:UsingTreasury
  Attempt to decompile the contract with methods...
  Success. Inlining methods...
  Propagating constants...
  Verifying patterns...
[31mViolation[0m for LockedEther in contract 'AddressSet':
    |     - .addresses()
    |*/
  > |contract AddressSet {
    |    
    |    struct Entry {  // Doubly linked list
  at MonarchyController.sol(378)

[31mViolation[0m for MissingInputValidation in contract 'AddressSet':
    |        address prev;
    |    }
  > |    mapping (address => Entry) public entries;
    |
    |    address public owner;
  at MonarchyController.sol(385)

[31mViolation[0m for MissingInputValidation in contract 'AddressSet':
    |    }
    |
  > |    function has(address _address)
    |        public
    |        view
  at MonarchyController.sol(465)

[33mWarning[0m for UnrestrictedWrite in contract 'AddressSet':
    |        // If already exists, do nothing. Otherwise set it.
    |        if (entry.exists) return;
  > |        else entry.exists = true;
    |
    |        // Replace first entry with this one.
  at MonarchyController.sol(412)

[33mWarning[0m for UnrestrictedWrite in contract 'AddressSet':
    |        // do: THIS.NEXT = [0].next; [0].next.prev = THIS; [0].next = THIS; THIS.prev = 0;
    |        Entry storage HEAD = entries[0x0];
  > |        entry.next = HEAD.next;
    |        entries[HEAD.next].prev = _address;
    |        HEAD.next = _address;
  at MonarchyController.sol(419)

[33mWarning[0m for UnrestrictedWrite in contract 'AddressSet':
    |        Entry storage HEAD = entries[0x0];
    |        entry.next = HEAD.next;
  > |        entries[HEAD.next].prev = _address;
    |        HEAD.next = _address;
    |        return true;
  at MonarchyController.sol(420)

[33mWarning[0m for UnrestrictedWrite in contract 'AddressSet':
    |        entry.next = HEAD.next;
    |        entries[HEAD.next].prev = _address;
  > |        HEAD.next = _address;
    |        return true;
    |    }
  at MonarchyController.sol(421)

[33mWarning[0m for UnrestrictedWrite in contract 'AddressSet':
    |        // After: X <-> Y
    |        // do: THIS.next.prev = this.prev; THIS.prev.next = THIS.next;
  > |        entries[entry.prev].next = entry.next;
    |        entries[entry.next].prev = entry.prev;
    |        delete entries[_address];
  at MonarchyController.sol(440)

[33mWarning[0m for UnrestrictedWrite in contract 'AddressSet':
    |        // do: THIS.next.prev = this.prev; THIS.prev.next = THIS.next;
    |        entries[entry.prev].next = entry.next;
  > |        entries[entry.next].prev = entry.prev;
    |        delete entries[_address];
    |        return true;
  at MonarchyController.sol(441)

[33mWarning[0m for UnrestrictedWrite in contract 'AddressSet':
    |        entries[entry.prev].next = entry.next;
    |        entries[entry.next].prev = entry.prev;
  > |        delete entries[_address];
    |        return true;
    |    }
  at MonarchyController.sol(442)

[31mViolation[0m for LockedEther in contract 'Ledger':
    |      - entries() [to manually iterate]
    |*/
  > |contract Ledger {
    |    uint public total;      // Total amount in Ledger
    |
  at MonarchyController.sol(248)

[31mViolation[0m for MissingInputValidation in contract 'Ledger':
    |        address prev;
    |    }
  > |    mapping (address => Entry) public entries;
    |
    |    address public owner;
  at MonarchyController.sol(256)

[31mViolation[0m for MissingInputValidation in contract 'Ledger':
    |    }
    |
  > |    function balanceOf(address _address)
    |        public
    |        view
  at MonarchyController.sol(336)

[33mWarning[0m for MissingInputValidation in contract 'Ledger':
    |    /******************************************************/
    |
  > |    function add(address _address, uint _amt)
    |        fromOwner
    |        public
  at MonarchyController.sol(273)

[33mWarning[0m for MissingInputValidation in contract 'Ledger':
    |    }
    |
  > |    function subtract(address _address, uint _amt)
    |        fromOwner
    |        public
  at MonarchyController.sol(291)

[33mWarning[0m for UnrestrictedWrite in contract 'Ledger':
    |        // If new entry, replace first entry with this one.
    |        if (entry.balance == 0) {
  > |            entry.next = entries[0x0].next;
    |            entries[entries[0x0].next].prev = _address;
    |            entries[0x0].next = _address;
  at MonarchyController.sol(282)

[33mWarning[0m for UnrestrictedWrite in contract 'Ledger':
    |        if (entry.balance == 0) {
    |            entry.next = entries[0x0].next;
  > |            entries[entries[0x0].next].prev = _address;
    |            entries[0x0].next = _address;
    |        }
  at MonarchyController.sol(283)

[33mWarning[0m for UnrestrictedWrite in contract 'Ledger':
    |            entry.next = entries[0x0].next;
    |            entries[entries[0x0].next].prev = _address;
  > |            entries[0x0].next = _address;
    |        }
    |        // Update stats.
  at MonarchyController.sol(284)

[33mWarning[0m for UnrestrictedWrite in contract 'Ledger':
    |        }
    |        // Update stats.
  > |        total += _amt;
    |        entry.balance += _amt;
    |    }
  at MonarchyController.sol(287)

[33mWarning[0m for UnrestrictedWrite in contract 'Ledger':
    |        // Update stats.
    |        total += _amt;
  > |        entry.balance += _amt;
    |    }
    |
  at MonarchyController.sol(288)

[33mWarning[0m for UnrestrictedWrite in contract 'Ledger':
    |        if (_amt >= _maxAmt) {
    |            // Subtract the max amount, and delete entry.
  > |            total -= _maxAmt;
    |            entries[entry.prev].next = entry.next;
    |            entries[entry.next].prev = entry.prev;
  at MonarchyController.sol(304)

[33mWarning[0m for UnrestrictedWrite in contract 'Ledger':
    |            // Subtract the max amount, and delete entry.
    |            total -= _maxAmt;
  > |            entries[entry.prev].next = entry.next;
    |            entries[entry.next].prev = entry.prev;
    |            delete entries[_address];
  at MonarchyController.sol(305)

[33mWarning[0m for UnrestrictedWrite in contract 'Ledger':
    |            total -= _maxAmt;
    |            entries[entry.prev].next = entry.next;
  > |            entries[entry.next].prev = entry.prev;
    |            delete entries[_address];
    |            return _maxAmt;
  at MonarchyController.sol(306)

[33mWarning[0m for UnrestrictedWrite in contract 'Ledger':
    |            entries[entry.prev].next = entry.next;
    |            entries[entry.next].prev = entry.prev;
  > |            delete entries[_address];
    |            return _maxAmt;
    |        } else {
  at MonarchyController.sol(307)

[33mWarning[0m for UnrestrictedWrite in contract 'Ledger':
    |        } else {
    |            // Subtract the amount from entry.
  > |            total -= _amt;
    |            entry.balance -= _amt;
    |            return _amt;
  at MonarchyController.sol(311)

[33mWarning[0m for UnrestrictedWrite in contract 'Ledger':
    |            // Subtract the amount from entry.
    |            total -= _amt;
  > |            entry.balance -= _amt;
    |            return _amt;
    |        }
  at MonarchyController.sol(312)

[33mWarning[0m for TODAmount in contract 'UsingAdmin':
    |        returns(address _addr)
    |    {
  > |        return registry.addressOf(_name);
    |    }
    |
  at MonarchyController.sol(36)

[33mWarning[0m for TODReceiver in contract 'UsingAdmin':
    |        returns(address _addr)
    |    {
  > |        return registry.addressOf(_name);
    |    }
    |
  at MonarchyController.sol(36)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'UsingAdmin':
    |        returns(address _addr)
    |    {
  > |        return registry.addressOf(_name);
    |    }
    |
  at MonarchyController.sol(36)

[33mWarning[0m for TODAmount in contract 'UsingMonarchyFactory':
    |        returns(address _addr)
    |    {
  > |        return registry.addressOf(_name);
    |    }
    |
  at MonarchyController.sol(36)

[33mWarning[0m for TODReceiver in contract 'UsingMonarchyFactory':
    |        returns(address _addr)
    |    {
  > |        return registry.addressOf(_name);
    |    }
    |
  at MonarchyController.sol(36)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'UsingMonarchyFactory':
    |        returns(address _addr)
    |    {
  > |        return registry.addressOf(_name);
    |    }
    |
  at MonarchyController.sol(36)

[33mWarning[0m for TODAmount in contract 'UsingTreasury':
    |        returns(address _addr)
    |    {
  > |        return registry.addressOf(_name);
    |    }
    |
  at MonarchyController.sol(36)

[33mWarning[0m for TODReceiver in contract 'UsingTreasury':
    |        returns(address _addr)
    |    {
  > |        return registry.addressOf(_name);
    |    }
    |
  at MonarchyController.sol(36)

[33mWarning[0m for UnrestrictedEtherFlow in contract 'UsingTreasury':
    |        returns(address _addr)
    |    {
  > |        return registry.addressOf(_name);
    |    }
    |
  at MonarchyController.sol(36)

Processing contract: MonkeyScam.sol:LDKeysCalc
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: MonkeyScam.sol:LDdatasets
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: MonkeyScam.sol:MonkeyEvents
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: MonkeyScam.sol:MonkeyInterfaceForForwarder
Processing contract: MonkeyScam.sol:MonkeyScam
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
java.io.IOException: Timeout for /tmp/binaries_souffle9674479648664501524/mustExplicit -j 8 -F /tmp/souffle-65ad54b2-2b9e-4130-b15c-0325872ce330 -D /tmp/souffle-65ad54b2-2b9e-4130-b15c-0325872ce330_OUT
	at ch.securify.analysis.AbstractDataflow.runCommand(AbstractDataflow.java:277)
	at ch.securify.analysis.AbstractDataflow.initDataflow(AbstractDataflow.java:169)
	at ch.securify.analysis.MustExplicitDataflow.<init>(MustExplicitDataflow.java:33)
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:33)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error in Securify
java.lang.RuntimeException
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:37)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error, skipping: MonkeyScam.sol:MonkeyScam
Processing contract: MonkeyScam.sol:NameFilter
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: MonkeyScam.sol:PlayerBookInterface
Processing contract: MonkeyScam.sol:SafeMath
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: MonkeyScam.sol:modularMonkeyScam
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: NewChance.sol:F3DKeysCalcShort
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: NewChance.sol:F3Ddatasets
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: NewChance.sol:F3Devents
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: NewChance.sol:NameFilter
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: NewChance.sol:NewChance
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
java.io.IOException: Timeout for /tmp/binaries_souffle17860596286560979246/mustExplicit -j 8 -F /tmp/souffle-33a8fae5-032d-4220-b3ba-5836825b0352 -D /tmp/souffle-33a8fae5-032d-4220-b3ba-5836825b0352_OUT
	at ch.securify.analysis.AbstractDataflow.runCommand(AbstractDataflow.java:277)
	at ch.securify.analysis.AbstractDataflow.initDataflow(AbstractDataflow.java:169)
	at ch.securify.analysis.MustExplicitDataflow.<init>(MustExplicitDataflow.java:33)
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:33)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error in Securify
java.lang.RuntimeException
	at ch.securify.analysis.Dataflow.<init>(Dataflow.java:37)
	at ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)
	at ch.securify.Main.checkPatterns(Main.java:388)
	at ch.securify.Main.processHexFile(Main.java:189)
	at ch.securify.Main.processCompilationOutput(Main.java:129)
	at ch.securify.Main.processSolidityFile(Main.java:100)
	at ch.securify.Main.main(Main.java:254)
Error, skipping: NewChance.sol:NewChance
Processing contract: NewChance.sol:PlayerBookInterface
Processing contract: NewChance.sol:SafeMath
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: NewChance.sol:modularShort
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: POHMO.sol:KeysCalc
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: POHMO.sol:NameFilter
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
Processing contract: POHMO.sol:POHMO
  Attempt to decompile the contract with methods...
  Failed to decompile methods. Attempt to decompile the contract without identifying methods...
  Propagating constants...
  Verifying patterns...
